<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arley的博客</title>
  <icon>https://www.gravatar.com/avatar/bb3e4a0e4b3e62f4a48d83d31d4aa8cd</icon>
  <subtitle>道可道，非常道，名可名，非常名</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hexo.dulada.com/"/>
  <updated>2019-07-23T08:15:34.000Z</updated>
  <id>https://hexo.dulada.com/</id>
  
  <author>
    <name>Arley</name>
    <email>arleylee@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go-day4-channel</title>
    <link href="https://hexo.dulada.com/go-basics-4.html"/>
    <id>https://hexo.dulada.com/go-basics-4.html</id>
    <published>2019-05-21T14:05:30.000Z</published>
    <updated>2019-07-23T08:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<p> 定义channel：make（chan 类型，容量）</p><pre><code>ch :=  make （chan string）:写端：     ch &lt;- &quot;hehe&quot;    。写端写数据，读端不在读。写端阻塞读端：    str := &lt;- ch    。读端读数据， 同时写端不在写，读端阻塞。</code></pre><a id="more"></a><p>channel同步，数据传递：</p><pre><code>写端：     ch &lt;- &quot;hehe&quot;    。写端写数据，读端不在读。阻塞读端：    str := &lt;- ch    。读端读数据， 同时写端不在写，读端阻塞。len(ch) ： channel 中剩余未读取数据个数。 cap（ch）： 通道的容量。</code></pre><p>无缓冲channel： —— 同步通信</p><pre><code>创建： ch := make(chan int)  或 make(chan int, 0)通道容量为0， len = 0 。 不能存储数据。channel 应用于 两个go程中。    一个读，另一个写。  具备同步的能力。  读、写同步。（打电话）</code></pre><p>有缓冲channel：—— 异步通信</p><pre><code>创建： ch := make(chan int, 5)通道容量为非0。len(ch) ： channel 中剩余未读取数据个数。 cap（ch）： 通道的容量。channel 应用于 两个go程中。一个读，另一个写。  缓冲区可以进行数据存储。存储至 容量上限，阻塞。 具备 异步 能力，不需同时操作channel缓冲区（发短信）</code></pre><p>关闭channel： 无、有缓冲</p><pre><code>确定不再相对端发送、接收数据。关闭channel。 使用 close(ch) 关闭channel对端可以判断 channel 是否关闭：    if num， ok := &lt;-ch ;  ok == true {    如果对端已经关闭， ok --&gt; false . num无数据。    如果对端没有关闭， ok --&gt; true . num保存读到的数据。可以使用 range 替代 ok：    for num := range ch {        // ch 不能替换为 &lt;-ch    }总结：    1. 数据不发送完，不应该关闭。    2. 已经关闭的channel， 不能再向其写数据。 报错：panic: send on closed channel    3. 写端已经关闭channel， 可以从中读取数据。                读无缓冲channel： 读到0 。 —— 说明：写端关闭。                读有缓冲channel： 如果缓冲区内有数据，先读数据。读完数据后，可以继续读。 读到 0</code></pre><p>单向channel：</p><pre><code>默认的channel 是双向的。 var ch chan int        ch = make(chan int)单向写channel:    var  sendCh chan &lt;-     int    sendCh = make(chan &lt;- int)    不能读操作单向读channel:    var  recvCh  &lt;- chan int    recvCh = make(&lt;-chan int)转换：    1. 双向channel 可以 隐式转换为 任意一种单向channel         sendCh  = ch    2. 单向 channel 不能转换为 双向 channel        ch = sendCh/recvCh   error！！！传参： 传【引用】</code></pre><p>生产者消费者模型：</p><pre><code>生产者： 发送数据端消费者： 接收数据端缓冲区：     1. 解耦 （ 降低生产者 和 消费者之间 耦合度 ）    2. 并发 （生产者消费者数量不对等时，能保持正常通信）    3. 缓存 （生产者和消费者 数据处理速度不一致时， 暂存数据）模型代码实现。---- 模拟订单代码实现。 参阅讲义</code></pre><p>定时器：</p><pre><code>Timer：创建定时器，指定定时时长，定时到达后。 系统会自动向定时器的成员 C 写 系统当前时间。 （对 chan 的写操作）</code></pre><p>type Timer struct {<br>   C &lt;-chan Time<br>   r runtimeTimer<br>}<br>    sleep()<br>    NewTimer<br>    After</p><pre><code>读取 Timer.C 得到 定时后的系统时间。并且完成一次  chan 的 读操作。time.After() 定时：         指定定时时长，定时到达后。 系统会自动向定时器的成员 写入 系统当前时间。    返回 可读 chan 。 读取，可获得系统写入时间。总结： Sleep、NewTimer、After —— time包定时器的 停止、重置：    1） 创建定时器 myTimer := time.NewTimer(2 * time.Second)    2)   停止： myTimer.Stop    —— 将定时器归零。    &lt;-myTimer.C 会阻塞    3） 重置：myTimer.Reset(time.Second)</code></pre><p>周期定时：</p><pre><code>    type Ticker struct {C &lt;-chan Time r runtimeTimer    }    1） 创建周期定时器 myTicker := time.NewTicker(time.Second)    定时时长到达后，系统会自动向 Ticker 的 C 中写入 系统当前时间。     并且，每隔一个定时时长后，循环写入 系统当前时间。 2） 在 子 go 程中循环读取 C。获取系统写入的时间。 </code></pre><p>select：<br>    作用： 用来监听 channel 上的数据流动方向。 读？写？</p><pre><code>用法： 参考 switch case 语句。 但！case后面必须是IO操作，不可以任意写判别表达式。注意事项：    1. 监听的case中，没有满足监听条件，阻塞。    2. 监听的case中，有多个满足监听条件，任选一个执行。    3. 可以使用default来处理所有case都不满足监听条件的状况。 通常不用（会产生忙轮询）    4. select 自身不带有循环机制，需借助外层 for 来循环监听    5. break 跳出 select中的一个case选项 。类似于switch中的用法。</code></pre><p>select实现fibonacci数列：</p><pre><code>1  1  2  3  5  8  13  21  34  55   89 x = yy = x+y    </code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 定义channel：make（chan 类型，容量）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ch :=  make （chan string）:

写端：     ch &amp;lt;- &amp;quot;hehe&amp;quot;    。写端写数据，读端不在读。写端阻塞

读端：    str := &amp;lt;- ch    。读端读数据， 同时写端不在写，读端阻塞。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day3-Goroutine&amp;channel</title>
    <link href="https://hexo.dulada.com/go-basics-3.html"/>
    <id>https://hexo.dulada.com/go-basics-3.html</id>
    <published>2019-05-16T12:05:30.000Z</published>
    <updated>2019-07-23T08:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>1S = 1000ms<br>1ms = 1000us<br>1us = 1000ns</p><p>并行： 借助多核 cpu 实现。            （真 并行）</p><p>并发：<br>    宏观：用户体验上，程序在并行执行。</p><pre><code>微观：多个计划任务，顺序执行。在飞快的切换。轮换使用 cpu 时间轮片。         【假 并行】</code></pre><a id="more"></a><p>进程并发：<br>    程序：编译成功得到的二进制文件。    占用 磁盘空间。    死的    1    1</p><pre><code>进程：运行起来程序。 占用系统资源。（内存）        活的    N    1</code></pre><p>进程状态：<br>    初始态、就绪态、运行态、挂起（阻塞）态、终止（停止）态。</p><p>线程并发：</p><pre><code>线程：LWP 轻量级的 进程。最小的执行单位。 —— cpu分配时间轮片的对象。进程： 最小的系统资源分配单位。</code></pre><p>同步：<br>    协同步调。规划先后顺序。</p><pre><code>线程同步机制：    互斥锁（互斥量）：    建议锁。 拿到锁以后，才能访问数据，没有拿到锁的线程，阻塞等待。等到拿锁的线程释放锁。    读写锁：一把锁（读属性、写属性）。 写独占，读共享。 写锁优先级高。</code></pre><p>协程并发：<br>    Python、Lua、Ruset。。。</p><pre><code>21世纪。提高程序执行的效率。</code></pre><p>总结：<br>    进程、线程、协程 都可以完成并发。</p><pre><code>稳定性强、节省资源、效率高。    老板——手机：生产线 —— 设备、材料、厂房 —— 进程。（资源分配单位）工人 —— 线程。    —— 单进程、单线程的 程序。50 工人 —— 50 线程。     ——单进程、多线程的 程序。10 条生产线 —— 500 工人 —— 。多进程、多线程的 程序。利用闲暇时间义务搬砖 —— 协程。—— 多进程、多线程、多协程 程序。</code></pre><p>创建Goroutine程</p><pre><code>创建于进程中。 直接使用 go 关键，放置于 函数调用前面，产生一个 go程。 并发。</code></pre><p>Goroutine的特性：【重点】</p><pre><code>主go程结束，子go程随之退出。</code></pre><p>runtime.Gosched()： </p><pre><code>出让当前go程所占用的 cpu时间片。当再次获得cpu时，从出让位置继续回复执行。—— 时间片轮转调度算法。</code></pre><p>runtime.Goexit()：</p><pre><code>return：    返回当前函数调用到调用者那里去。 return之前的 defer 注册生效。Goexit():   结束调用该函数的当前go程。Goexit():之前注册的 defer都生效。</code></pre><p>runtime.GOMAXPROCS():</p><pre><code>设置当前 进程使用的最大cpu核数。 返回 上一次调用成功的设置值。 首次调用返回默认值。</code></pre><p>===================================</p><p>【补充知识点】：</p><pre><code>每当有一个进程启动时，系统会自动打开三个文件： 标准输入、标准输出、标准错误。 —— 对应三个文件： stdin、stdout、stderr当进行运行结束。操作系统自动关闭三个文件。</code></pre><p>channel：<br>    是一种数据类型。 对应一个“管道”（通道 FIFO）</p><pre><code>channel的定义：    make (chan  在channel中传递的数据类型， 容量)    容量= 0： 无缓冲channel， 容量 &gt; 0 ：有缓冲channel    e.g.： make（chan int） 或 make （chan string , 0）channel有两个端：    一端：写端（传入端）    chan &lt;-    另一端： 读端（传出端）&lt;- chan    要求：读端和写端必须同时满足条件，才在shan上进行数据流动。否则，则阻塞。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1S = 1000ms&lt;br&gt;1ms = 1000us&lt;br&gt;1us = 1000ns&lt;/p&gt;
&lt;p&gt;并行： 借助多核 cpu 实现。            （真 并行）&lt;/p&gt;
&lt;p&gt;并发：&lt;br&gt;    宏观：用户体验上，程序在并行执行。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;微观：多个计划任务，顺序执行。在飞快的切换。轮换使用 cpu 时间轮片。         【假 并行】
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day2-结构体</title>
    <link href="https://hexo.dulada.com/go-basics-2.html"/>
    <id>https://hexo.dulada.com/go-basics-2.html</id>
    <published>2019-05-14T11:03:30.000Z</published>
    <updated>2019-07-23T07:59:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>结构体：<br>    是一种数据  类型。</p><pre><code>type Person struct {        —— 类型定义 （地位等价于 int byte bool string ....） 通常放在全局位置。    name string     sex  byte    age int}</code></pre><a id="more"></a><p>普通变量定义和初始化：</p><pre><code>1. 顺序初始化: 依次将结构体内部所欲成员初始化。    var man Person = Person{&quot;andy&quot;， &apos;m&apos;,  20}2. 指定成员初始化：    man := Person{name:&quot;rose&quot;, age:18}        ---- 未初始化的成员变量，取该数据类型对应的默认值</code></pre><p>普通变量的赋值和使用：</p><pre><code>使用“.”索引成员变量。    var man3 Person    man3.name = &quot;mike&quot;    man3.sex = &apos;m&apos;    man3.age = 99</code></pre><p>结构体变量的比较：</p><pre><code>1. 比较： 只能使用 == 和 !=     不能 &gt; &lt; &gt;= &lt;=...2. 相同结构体类型（成员变量的类型、个数、顺序一致）变量之间可以直接赋值。</code></pre><p>结构体地址：</p><pre><code>结构体变量的地址 == 结构体首个元素的地址。</code></pre><p>结构体传参：<br>    unSafe.Sizeof(变量名) ——&gt; 此种类型的变量所占用的内存空间大小</p><pre><code>将结构体变量的值拷贝一份，传递。    —— 几乎不用。 内存消耗大，效率低。</code></pre><p>指针变量定义和初始化：</p><pre><code>1. 顺序初始化: 依次将结构体内部所欲成员初始化。    var man *Person = &amp;Person{&quot;andy&quot;， &apos;m&apos;,  20}2. new(Person)    p := new(Person)    p.name = &quot;name&quot;    p.age = 10</code></pre><p>指针索引成员变变量：</p><pre><code>使用“.”索引成员变量。    var man3 Person    man3.name = &quot;mike&quot;    man3.sex = &apos;m&apos;    man3.age = 99</code></pre><p>结构体地址：</p><pre><code>结构体指针变量的值 == 结构体首个元素的地址。</code></pre><p>结构体指针传参：<br>    unSafe.Sizeof(指针) ： 不管何种类型的指针，在 64位操作系统下，大小一致。均为 8 字节！！！</p><pre><code>将结构体变量地址值，传递（传引用）。    —— 使用频率非常高！！！</code></pre><p>练习：<br>    定义一个结构体，包含成员 string、int、bool、[]string. </p><pre><code>在main函数中定义结构体 “普通变量”， 不初始化。 封装函数 initFunc， 在该函数内初始化 ， main 函数中打印查看。</code></pre><p>结构体指针做函数返回值：</p><pre><code>不能返回局部变量的地址。—— 局部变量保存栈帧上，函数调用结束后，栈帧释放。局部变量的地址，不再受系统保护，随时可能分配给其他程序。可以返回局部变量的值。</code></pre><p>字符串处理函数：</p><pre><code>1. 字符串按 指定分割符拆分：    Split        ret := strings.Split(str, &quot; I&quot;)2. 字符串按 空格拆分： Fields        ret = strings.Fields(str)3. 判断字符串结束标记 HasSuffix        flg := strings.HasSuffix(&quot;test.abc&quot;, &quot;.mp3&quot;)4. 判断字符串起始标记 HasPrefix        flg := strings.HasPrefix(&quot;test.abc&quot;, &quot;tes.&quot;)</code></pre><p>打开、创建文件：</p><pre><code>1. 创建文件  Create：     文件不存在创建， 文件存在，将文件内容清空。    参数：name， 打开文件的路径： 绝对路径、相对路径        目录分割符：/ 2. 打开文件 Open：        以只读方式打开文件。文件不存在，打开失败。    参数：name， 打开文件的路径： 绝对路径、相对路径3. 打开文件 OpenFile：    以只读、只写、读写 方式打开文件。文件不存在，打开失败。    参1：name， 打开文件的路径： 绝对路径、相对路径    参2：打开文件权限： O_RDONLY、O_WRONLY、O_RDWR    参3：一般传 6</code></pre><p>写文件：</p><pre><code>按字符串写：WriteString（）    --&gt; n个写入的字符个数    n, err := f.WriteString(&quot;123&quot;)    回车换行：    windows： \r\n    Linux: \n按位置写:    Seek():     修改文件的读写指针位置。    参1： 偏移量。 正：向文件尾偏， 负：向文件头偏    参2： 偏移起始位置：            io.SeekStart: 文件起始位置        io.SeekCurrent： 文件当前位置        io.SeekEnd: 文件结尾位置    返回值：表示从文件起始位置，到当前文件读写指针位置的偏移量。    off, _ := f.Seek(-5, io.SeekEnd)按字节写：    writeAt():  在文件制定偏移位置，写入 []byte ,  通常搭配 Seek()    参1： 待写入的数据    参2：偏移量    返回：实际写出的字节数。    n, _ = f.WriteAt([]byte(&quot;1111&quot;), off)    </code></pre><p>读文件：<br>    按行读<br>        1）.  创建一个带有缓冲区的 Reader（读写器）</p><pre><code>        reader : = bufio.NewReader(打开的文件指针)    2）.  从reader的缓冲区中 ，读取指定长度的数据。数据长度取决于 参数 dlime        buf, err := reader.ReadBytes( &apos; \n&apos; )      按行读。        判断到达文件结尾： if err != nil &amp;&amp; err == io.EOF  到文件结尾。            文件结束标记，是要单独读一次获取到的。缓冲区：内存中的一块区域，用来减少物理磁盘访问操作。 《计算硬件及组成原理》 —— 机械工业出版社。</code></pre><p>按字节读、写文件。</p><pre><code>read([]byte):  按字节读文件write([]byte)：按字节字节</code></pre><p>目录操作：</p><pre><code>打开目录： OpenFile     打开目录 OpenFile：    以只读方式打开目录。    参1：name， 打开目录的路径： 绝对路径、相对路径    参2：打开目录权限： O_RDONLY    参3：os.ModeDir    返回值： 返回一个可以读目录的 文件指针。读目录：Readdir    原型：func (f *File) Readdir(n int) ([]FileInfo, error) {        参数: 欲打开的目录项个数。 -1 ， 表所有        返回值：  FileInfo ：                type FileInfo interface {                Name() string               // base name of the file                Size() int64                // length in bytes for regular files; system-dependent for others                Mode() FileMode             // file mode bits                ModTime() time.Time     // modification time                IsDir() bool                // abbreviation for Mode().IsDir()                Sys() interface{}           // underlying data source (can return nil)            }    </code></pre><p>练习题3， 思路分析：</p><pre><code>1. 根据用户指定的目录， 只读打开    —— 读目录的练习题。2. 找到目录中的 .txt， 有可能有多个    —— 目录中找一个 指定类型文件3. 打开 其中一个 .txt 文件。 循环读取一行。reader := bufio.NewReader, reader.ReadBytes(&apos;\n&apos;)       —— 读一行文件内容练习题4. 将一行数据的字符串，拆分后，存入 []string 。 Split、Fields    —— 字符串练习题5. 遍历[]string 统计“Love”单词出现的次数。    —— map练习题</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;结构体：&lt;br&gt;    是一种数据  类型。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type Person struct {        —— 类型定义 （地位等价于 int byte bool string ....） 通常放在全局位置。
    name string 
    sex  byte
    age int
}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day1-指针</title>
    <link href="https://hexo.dulada.com/go-basics-1.html"/>
    <id>https://hexo.dulada.com/go-basics-1.html</id>
    <published>2019-05-11T11:03:30.000Z</published>
    <updated>2019-07-23T07:59:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>指针：</p><pre><code>指针就是地址。 指针变量就是存储地址的变量。*p ： 解引用、间接引用。栈帧：    用来给函数运行提供内存空间。 取内存于 stack 上。    当函数调用时，产生栈帧。函数调用结束，释放栈帧。    栈帧存储： 1. 局部变量。 2. 形参。 （形参与局部变量存储地位等同） 3. 内存字段描述值指针使用注意：    空指针：未被初始化的指针。    var p *int        *p --&gt; err    野指针：被一片无效的地址空间初始化。</code></pre><a id="more"></a><pre><code>格式化输出：    %q： 以Go语言格式显示字符串。 默认带有“”符    %v： 显示对应数据详细信息变量存储：    等号 左边的变量，代表 变量所指向的内存空间。    （写）    等号 右边的变量，代表 变量内存空间存储的数据值。    （读）指针的函数传参（传引用）。    传地址（引用）：将形参的地址值作为函数参数传递。    传值（数据据）：将实参的 值 拷贝一份给形参。    传引用：    在A栈帧内部，修改B栈帧中的变量值。</code></pre><p>切片：</p><pre><code>为什么用切片：    1. 数组的容量固定，不能自动拓展。    2. 值传递。 数组作为函数参数时，将整个数组值拷贝一份给形参。    在Go语言当，我们几乎可以在所有的场景中，使用 切片替换数组使用。切片的本质：    不是一个数组的指针，是一种数据结构体，用来操作数组内部元素。    runtime/slice.go    type slice struct {                                                    *p                                             len切片的使用：                                        cap                                        }    数组和切片定义区别：        创建数组时 [ ] 指定数组长度。        创建切片时， [] 为空，或者 ...     切片名称 [ low : high : max ]    low: 起始下标位置    high：结束下标位置    len = high - low    容量：cap = max - low    截取数组，初始化 切片时，没有指定切片容量时， 切片容量跟随原数组（切片）。        s[:high:max] : 从 0 开始，到 high结束。（不包含）        s[low:] :    从low 开始，到 末尾        s[: high]:    从 0 开始，到 high结束。容量跟随原先容量。【常用】切片创建：    1. 自动推导类型创建 切片。slice := []int {1, 2, 4, 6}    2. slice := make([]int, 长度，容量)    3. slice := make([]int, 长度）        创建切片时，没有指定容量， 容量== 长度。【常用】    切片做函数参数 —— 传引用。（传地址）append：在切片末尾追加元素    append(切片对象， 待追加元素）    向切片增加元素时，切片的容量会自动增长。1024 以下时，一两倍方式增长。copy：    copy（目标位置切片， 源切片）    拷贝过程中，直接对应位置拷贝。</code></pre><p>map：</p><pre><code>字典、映射      key —— value    key： 唯一、无序。 不能是引用类型数据。        map 不能使用 cap（）创建方式：    1.  var m1 map[int]string        --- 不能存储数据    2. m2 := map[int]string{}        ---能存储数据    3. m3 := make(map[int]string)        ---默认len = 0    4. m4 := make(map[int]string, 10)初始化：    1. var m map[int]string = map[int]string{ 1: &quot;aaa&quot;, 2:&quot;bbb&quot;}    保证key彼此不重复。    2. m := map[int]string{ 1: &quot;aaa&quot;, 2:&quot;bbb&quot;}赋值:    赋值过程中，如果新map元素的key与原map元素key 相同     ——&gt; 覆盖（替换）    赋值过程中，如果新map元素的key与原map元素key 不同    ——&gt; 添加map的使用：    遍历map：        for  key值， value值 := range map {        }         for  key值 := range map {        }        判断map中key是否存在。         map[下标] 运算：返回两个值， 第一个表 value 的值，如果value不存在。 nil                    第二个表 key是否存在的bool类型。存在 true， 不存在false删除map：    delete()函数：     参1： 待删除元素的map    参2： key值    delete（map， key）    删除一个不存在的key ， 不会报错。    map 做函数参数和返回值，传引用。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;指针：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;指针就是地址。 指针变量就是存储地址的变量。

*p ： 解引用、间接引用。

栈帧：    用来给函数运行提供内存空间。 取内存于 stack 上。

    当函数调用时，产生栈帧。函数调用结束，释放栈帧。

    栈帧存储： 1. 局部变量。 2. 形参。 （形参与局部变量存储地位等同） 3. 内存字段描述值

指针使用注意：

    空指针：未被初始化的指针。    var p *int        *p --&amp;gt; err

    野指针：被一片无效的地址空间初始化。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day11</title>
    <link href="https://hexo.dulada.com/go-11.html"/>
    <id>https://hexo.dulada.com/go-11.html</id>
    <published>2019-04-19T13:38:49.000Z</published>
    <updated>2019-07-23T07:58:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>golang ing….文本文件处理<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func CreateFile(path string) &#123;</span><br><span class="line">f,err := os.Create(path)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">fmt.Println(&quot;err = &quot;,err)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">defer f.Close()</span><br><span class="line">fmt.Println(&quot;文件创建成功&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var filePath = &quot;a.txt&quot;</span><br><span class="line">CreateFile(filePath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">fp,err:=os.Create(&quot;I:/alie/go/awesomeProject/a.txt&quot;)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">fmt.Println(&quot;文件创建失败&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">defer fp.Close()</span><br><span class="line">n,_:=fp.WriteString(&quot;itcast\r\n&quot;)</span><br><span class="line">fmt.Println(n)</span><br><span class="line">fp.WriteString(&quot;神农&quot;)</span><br><span class="line">fmt.Println(&quot;ok.2..&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>写入数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func CreateFile(path string) &#123;</span><br><span class="line">f,err := os.Create(path)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">fmt.Println(&quot;err=&quot;,err)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">for i:=1;i&lt;10 ;i++ &#123;</span><br><span class="line">n,err :=f.WriteString(&quot;hello world&quot;)</span><br><span class="line">fmt.Println(n)</span><br><span class="line">if err != nil &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">//f.WriteString(&quot;hello world&quot;)</span><br><span class="line">&#125;</span><br><span class="line">defer f.Close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>文件操作练习<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">&quot;io&quot;</span><br><span class="line">&quot;os&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">fp1,err1 := os.Open(&quot;I:\\alie\\go\\awesomeProject\\01defer调用.png&quot;)</span><br><span class="line">fp2,err2 := os.Create(&quot;I:\\alie\\go\\1.png&quot;)</span><br><span class="line">if err1 != nil || err2 != nil &#123;</span><br><span class="line">fmt.Println(&quot;kaobei shibai&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">defer fp1.Close()</span><br><span class="line">defer fp2.Close()</span><br><span class="line">//r:= bufio.NewReader(fp)</span><br><span class="line">b := make([]byte,1024)</span><br><span class="line"></span><br><span class="line">for&#123;</span><br><span class="line">n,err := fp1.Read(b)</span><br><span class="line"></span><br><span class="line">if err ==  io.EOF&#123;</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line">fp2.Write(b[:n])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;kaobei wancheng&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;golang ing….文本文件处理&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day10</title>
    <link href="https://hexo.dulada.com/go-10.html"/>
    <id>https://hexo.dulada.com/go-10.html</id>
    <published>2019-04-15T11:56:19.000Z</published>
    <updated>2019-07-23T07:55:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>golang ing….<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">type errorString struct &#123;</span><br><span class="line">text string</span><br><span class="line">&#125;</span><br><span class="line">func New(text string)error &#123;</span><br><span class="line">return &amp;errorString&#123;text&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (e *errorString) Error() string&#123;</span><br><span class="line">return e.text</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>err 接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">&quot;errors&quot;</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func test(a int ,b int )(value int,err error)&#123;</span><br><span class="line">if b ==0 &#123;</span><br><span class="line">err = errors.New(&quot;0不能做除数&quot;)</span><br><span class="line">return</span><br><span class="line">&#125; else&#123;</span><br><span class="line">value = a/b</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">value,err := test(10,0)</span><br><span class="line">if err != nil&#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;else &#123;</span><br><span class="line">fmt.Println(value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>panic<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func test1()&#123;</span><br><span class="line">fmt.Println(&quot;hello go&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func test2()&#123;</span><br><span class="line">panic(&quot;hello go2&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func test3() &#123;</span><br><span class="line">fmt.Println(&quot;hello go3&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">test1()</span><br><span class="line">test2()</span><br><span class="line">test3()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>defer<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main04010()&#123;</span><br><span class="line">fmt.Println(&quot;波妞&quot;)</span><br><span class="line">defer fmt.Println(&quot;宗介&quot;)</span><br><span class="line">defer fmt.Println(&quot;中介喜欢赚差价&quot;)</span><br><span class="line">fmt.Println(&quot;波妞喜欢宗介&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func test4()&#123;</span><br><span class="line">fmt.Println(&quot;hello world&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var value int</span><br><span class="line">func test5 (a int , b int )&#123;</span><br><span class="line">value = a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func test6 (value int ) &#123;</span><br><span class="line">fmt.Println(value)</span><br><span class="line">&#125;</span><br><span class="line">func main0402() &#123;</span><br><span class="line">test4()</span><br><span class="line">defer test5(10,20)</span><br><span class="line"></span><br><span class="line">test6(value)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">func main () &#123;</span><br><span class="line">a :=10</span><br><span class="line">b := 20</span><br><span class="line">//f:=func(a int , b int)&#123;</span><br><span class="line">//fmt.Println(a)</span><br><span class="line">//fmt.Println(b)</span><br><span class="line">//&#125;</span><br><span class="line">//f(a,b)</span><br><span class="line">defer func(a int ,b int)&#123;</span><br><span class="line">fmt.Println(a)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;(a,b)</span><br><span class="line">a = 100</span><br><span class="line">b = 200</span><br><span class="line">fmt.Println(a)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>recover<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func demo (i int)&#123;</span><br><span class="line">defer func()&#123;</span><br><span class="line">err:=recover()</span><br><span class="line">if err !=nil&#123;</span><br><span class="line">fmt.Println(&quot;demo Yichang ;19-33行&quot;,err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">fmt.Println(&quot;1&quot;)</span><br><span class="line">var p *int</span><br><span class="line">*p = 123</span><br><span class="line">fmt.Println(&quot;2&quot;)</span><br><span class="line">var arr[10]int</span><br><span class="line">arr[i] = 100</span><br><span class="line"></span><br><span class="line">fmt.Println(arr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func demo1()&#123;</span><br><span class="line">fmt.Println(&quot;HELLO WORLD&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">demo(9)</span><br><span class="line">demo1()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>practice<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func Testa () &#123;</span><br><span class="line">fmt.Println(&quot;func TestA&quot;)</span><br><span class="line">&#125;</span><br><span class="line">func Testb (x int) &#123;</span><br><span class="line">defer func() &#123;</span><br><span class="line">//recover()</span><br><span class="line">fmt.Println(recover())</span><br><span class="line">&#125;()</span><br><span class="line">var a [10]int</span><br><span class="line">a[x]= 11</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func Testc()&#123;</span><br><span class="line">fmt.Println(&quot;func Testc()&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">Testa()</span><br><span class="line">Testb(9)</span><br><span class="line">Testc()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;golang ing….&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day9</title>
    <link href="https://hexo.dulada.com/go-9.html"/>
    <id>https://hexo.dulada.com/go-9.html</id>
    <published>2019-04-13T12:44:11.000Z</published>
    <updated>2019-07-23T07:53:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>接口。。。。。。golang ing….<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">//定义接口类型</span><br><span class="line">type Humaner interface&#123;</span><br><span class="line">//方法</span><br><span class="line">sayhi()</span><br><span class="line">&#125;</span><br><span class="line">type Student struct &#123;</span><br><span class="line">name string</span><br><span class="line">id int</span><br><span class="line">&#125;</span><br><span class="line">//Student  实现此方法</span><br><span class="line">func (tmp *Student) sayhi()&#123;</span><br><span class="line">fmt.Printf(&quot;Student[%s,%d] sayhi\n&quot;,tmp.name,tmp.id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type Teacher struct &#123;</span><br><span class="line">addr string</span><br><span class="line">group string</span><br><span class="line">&#125;</span><br><span class="line">func (tmp *Teacher) sayhi()&#123;</span><br><span class="line">fmt.Printf(&quot;Teacher[%s,%s] sayhi\n&quot;,tmp.addr,tmp.group)</span><br><span class="line">&#125;</span><br><span class="line">//调用</span><br><span class="line">func main() &#123;</span><br><span class="line">//定义接口变量类型</span><br><span class="line">var i Humaner</span><br><span class="line">//只是实现了此接口的类型，那么这个类型的变量（接受者类型）就可以给i赋值</span><br><span class="line">s := &amp;Student&#123;&quot;mike&quot;,666&#125;</span><br><span class="line">i = s</span><br><span class="line">i.sayhi()</span><br><span class="line">t := &amp;Teacher&#123;&quot;nj&quot;,&quot;go&quot;&#125;</span><br><span class="line">i=t</span><br><span class="line">i.sayhi()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多态接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Humaner interface &#123;</span><br><span class="line">sayhi()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">name string</span><br><span class="line">id int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (tmp *Student) sayhi()&#123;</span><br><span class="line">fmt.Printf(&quot;Student&#123;%s,%d&#125; sayhi\n&quot;,tmp.name,tmp.id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Teacher struct &#123;</span><br><span class="line">addr string</span><br><span class="line">group string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (tmp *Teacher) sayhi()&#123;</span><br><span class="line">fmt.Printf(&quot;Teacher&#123;%s,%s&#125; sayhi\n&quot;,tmp.addr,tmp.group)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func WhoSayHi(i Humaner) &#123;</span><br><span class="line">i.sayhi()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">//定义接口变量类型</span><br><span class="line">//var i Humaner</span><br><span class="line">s :=  &amp;Student&#123;&quot;nike&quot;,909&#125;</span><br><span class="line">//i = s</span><br><span class="line">//i.sayhi()</span><br><span class="line">t:= &amp;Teacher&#123;&quot;bj&quot;,&quot;school&quot;&#125;</span><br><span class="line">//i = t</span><br><span class="line">//i.sayhi()</span><br><span class="line">WhoSayHi(s)</span><br><span class="line">WhoSayHi(t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接口的继承<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Humaner interface &#123;</span><br><span class="line">sayhi()</span><br><span class="line">&#125;</span><br><span class="line">type Person interface &#123;</span><br><span class="line">Humaner  //你名字段 继承了sayhi()</span><br><span class="line">sing(lrc string)</span><br><span class="line">&#125;</span><br><span class="line">type Student struct &#123;</span><br><span class="line">name string</span><br><span class="line">id int</span><br><span class="line">&#125;</span><br><span class="line">func(tmp *Student) sayhi()&#123;</span><br><span class="line">fmt.Printf(&quot;student[%s,%d] sayhi()\n&quot;,tmp.name,tmp.id)</span><br><span class="line">&#125;</span><br><span class="line">func(tmp *Student) sing(lrc string) &#123;</span><br><span class="line">fmt.Println(&quot;student 在唱着：&quot;,lrc)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">//定义一个接口类型的变量</span><br><span class="line">var i Person</span><br><span class="line">s:= &amp;Student&#123;&quot;mike&quot;,897987&#125;</span><br><span class="line">i=s</span><br><span class="line">i.sayhi()</span><br><span class="line">i.sing(&quot;xueshenga &quot;)</span><br><span class="line">&#125;</span><br><span class="line">func main()&#123;</span><br><span class="line">//超级可以转换为子集，反过来不可以</span><br><span class="line">var ipc Person//超集</span><br><span class="line">ipc = &amp;Student&#123;&quot;kolo&quot;,314&#125;</span><br><span class="line">var i  Humaner//子集</span><br><span class="line">ipc  = i //err</span><br><span class="line">i = ipc//可以  超集可以转换为子集</span><br><span class="line">i.sayhi()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>空接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var i interface &#123; &#125;= 1</span><br><span class="line">fmt.Println(&quot;i = &quot;,i)</span><br><span class="line">i = &quot;abc&quot;</span><br><span class="line">fmt.Println(&quot;i = &quot;,i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>类型的断言<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">name string</span><br><span class="line">id int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">i:= make([]interface&#123;&#125;,3)</span><br><span class="line">i[0] = 1</span><br><span class="line">i[1] = &quot;hello go&quot;</span><br><span class="line">i[2] = Student&#123;&quot;mike&quot;,154&#125;</span><br><span class="line">for index,data := range i &#123;</span><br><span class="line">if value,ok := data.(int);ok == true&#123;</span><br><span class="line">fmt.Printf(&quot;x[%d] 类型为int,内容为%d\n&quot;,index,value)</span><br><span class="line">&#125;else if value,ok :=data.(string);ok == true&#123;</span><br><span class="line">fmt.Printf(&quot;x[%d] 类型为string,内容为%s\n&quot;,index,value)</span><br><span class="line">&#125;else if value,ok:= data.(Student);ok == true&#123;</span><br><span class="line">fmt.Printf(&quot;x[%d] 类型为Student 内容为：%s,id = %d\n&quot;,index,value.name,value.id)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>整合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">//定义计算器接口</span><br><span class="line">type CalcSuper interface &#123;</span><br><span class="line">SetData(data...interface&#123;&#125;)//获取数据，验证数据</span><br><span class="line">CalcOperate() float64//完成计算</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//定义操作父类</span><br><span class="line"></span><br><span class="line">type Operation struct &#123;</span><br><span class="line">numA float64</span><br><span class="line">numB float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//定义加法类 继承父类</span><br><span class="line">type Add struct &#123;</span><br><span class="line">Operation</span><br><span class="line">&#125;</span><br><span class="line">//创建add对象 返回指针类型</span><br><span class="line">func NewAdd()*Add&#123;</span><br><span class="line">instance:= new(Add)</span><br><span class="line">return instance</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//让add类实现该方法  完成数据校验 数据获取</span><br><span class="line">func (a *Add)SetData(data...interface&#123;&#125;)&#123;</span><br><span class="line">if len(data)!=2&#123;</span><br><span class="line">fmt.Println(&quot;err Needwoparameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if _,ok:=data[0].(float64);!ok&#123;</span><br><span class="line">fmt.Println(&quot;error,Needfloat64parameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if _,ok:=data[1].(float64);!ok&#123;</span><br><span class="line">fmt.Println(&quot;error,Needfloat64parameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">a.numA,_=data[0].(float64)</span><br><span class="line">a.numB,_=data[1].(float64)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//实现该方法，完成数据加法</span><br><span class="line">func(a*Add)CalcOperate()float64&#123;//实现该方法，完成数据加法</span><br><span class="line">return a.numA+a.numB</span><br><span class="line">&#125;</span><br><span class="line">//定义减法类</span><br><span class="line">type Subtraction struct&#123;//定义减法类</span><br><span class="line"> Operation</span><br><span class="line">&#125;</span><br><span class="line">func NewSubtraction()*Subtraction&#123;</span><br><span class="line">instance:=new(Subtraction)</span><br><span class="line">return instance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func(a*Subtraction)SetData(data...interface&#123;&#125;)&#123;</span><br><span class="line">if len(data)!=2&#123;</span><br><span class="line">fmt.Println(&quot;error,Needtwoparameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if _,ok:=data[0].(float64);!ok&#123;</span><br><span class="line">fmt.Println(&quot;error,Needfloat64parameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">if _,ok:=data[1].(float64);!ok&#123;</span><br><span class="line">fmt.Println(&quot;error,Needfloat64parameters&quot;)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">a.numA,_=data[0].(float64)</span><br><span class="line">a.numB,_=data[1].(float64)</span><br><span class="line">&#125;</span><br><span class="line">func(a*Subtraction)CalcOperate()float64&#123;</span><br><span class="line">return a.numA-a.numB</span><br><span class="line">&#125;</span><br><span class="line">//解决对象创建问题</span><br><span class="line">type CalcFactory struct&#123;//解决对象创建问题</span><br><span class="line">&#125;</span><br><span class="line">func NewCalcFactory()*CalcFactory&#123;</span><br><span class="line">instance:=new(CalcFactory)</span><br><span class="line">    return instance</span><br><span class="line">&#125;</span><br><span class="line">func(f*CalcFactory)CreateOperate(opType string)CalcSuper&#123;</span><br><span class="line">var op CalcSuper</span><br><span class="line">switch opType&#123;</span><br><span class="line">case&quot;+&quot;:</span><br><span class="line">op=NewAdd()</span><br><span class="line">case&quot;-&quot;:</span><br><span class="line">op=NewSubtraction()</span><br><span class="line">default:</span><br><span class="line">panic(&quot;error!donthasthisoperate&quot;)</span><br><span class="line">&#125;</span><br><span class="line">return op</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">//调用</span><br><span class="line">factory:=NewCalcFactory()</span><br><span class="line">op:=factory.CreateOperate(&quot;+&quot;)</span><br><span class="line">op.SetData(1.5,2.0)</span><br><span class="line">fmt.Println(op.CalcOperate())</span><br><span class="line">op=factory.CreateOperate(&quot;-&quot;)</span><br><span class="line">op.SetData(1.5,2.0)</span><br><span class="line">fmt.Println(op.CalcOperate())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接口。。。。。。golang ing….&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day8</title>
    <link href="https://hexo.dulada.com/go-8.html"/>
    <id>https://hexo.dulada.com/go-8.html</id>
    <published>2019-04-10T13:14:23.000Z</published>
    <updated>2019-07-23T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>面向象之方法。。。。。。别看了….<br><a id="more"></a></p><p>创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Integer int //为  int  定义 别名   后面可以用 Integer  代替 int</span><br><span class="line">func (a Integer) Test(b Integer) Integer&#123;</span><br><span class="line">return a +b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var result Integer = 3</span><br><span class="line">r := result.Test(4)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>结构体创建方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line"></span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (stu Student) PrintShow() &#123;</span><br><span class="line">fmt.Println(stu)</span><br><span class="line">&#125;</span><br><span class="line">func (p *Student) EditInfo(id int,name string ,score float64)&#123;</span><br><span class="line">p.id = id</span><br><span class="line">p.name = name</span><br><span class="line">p.score = score</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">s:= Student&#123;101,&quot;zhansan&quot;,99.5&#125;</span><br><span class="line">s.PrintShow()</span><br><span class="line"></span><br><span class="line">var stu Student</span><br><span class="line">(&amp;stu).EditInfo(102,&quot;lisi&quot;,96.6)</span><br><span class="line">stu.PrintShow()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接受者类型决定传递者类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (p Student) PrintShow(id int,name string ,score float64)&#123;</span><br><span class="line">p.id = id</span><br><span class="line">p.name = name</span><br><span class="line">p.score = score</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (p *Student) EditInfo(id int,name string ,score float64)&#123;</span><br><span class="line">p.id = id</span><br><span class="line">p.name = name</span><br><span class="line">p.score = score</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var stu Student</span><br><span class="line">//stu.PrintShow(106,&quot;longwa&quot;,85.5)</span><br><span class="line">(&amp;stu).EditInfo(102,&quot;lis&quot;,45.5)</span><br><span class="line">fmt.Println(stu)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>指针变量的方法值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">age int</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line">func (stu Student) Printshow(id int ,name string,age int , score float64) &#123;</span><br><span class="line">stu.id = id</span><br><span class="line">stu.name = name</span><br><span class="line">stu.age = age</span><br><span class="line">stu.score = score</span><br><span class="line">fmt.Println(&quot;Printshow:&quot;,stu)</span><br><span class="line">&#125;</span><br><span class="line">func (p *Student) EditInfo(id int ,name string,age int , score float64) &#123;</span><br><span class="line">p.id = id</span><br><span class="line">p.name = name</span><br><span class="line">p.age = age</span><br><span class="line">p.score = score</span><br><span class="line">fmt.Println(&quot;EditInfo:&quot;,p)</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">var stu Student</span><br><span class="line">(&amp;stu).Printshow(101,&quot;zhangsan &quot;,12,90)</span><br><span class="line">//(*(&amp;stu)).Printshow(101,&quot;zhangsan &quot;,12,90)</span><br><span class="line">//定义一个结构体变量可以接受普通方法</span><br><span class="line">//结构体变量是一个指针变量</span><br><span class="line">(&amp;stu).EditInfo(102,&quot;fadf &quot;,12,90)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法的继承<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Per struct &#123;</span><br><span class="line">name string</span><br><span class="line">sex byte</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">//per 类型  实现一个方法</span><br><span class="line">func (tmp *Per) PrintInfo()&#123;</span><br><span class="line">fmt.Printf(&quot;name = %s,sex = %c,age = %d\n&quot;,tmp.name,tmp.sex,tmp.age)</span><br><span class="line">&#125;</span><br><span class="line">type Stu struct &#123;</span><br><span class="line">Per</span><br><span class="line">id int</span><br><span class="line">addr string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"> s:= Stu&#123;Per&#123;&quot;mike&quot;,&apos;m&apos;,18&#125;,666,&quot;bh&quot;&#125;</span><br><span class="line"> s.PrintInfo()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法重写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Animal struct&#123;</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">func (p *Animal) Bark()&#123;</span><br><span class="line">fmt.Println(&quot;w汪汪叫&quot;)</span><br><span class="line">&#125;</span><br><span class="line">type Dog struct &#123;</span><br><span class="line">Animal</span><br><span class="line">name string</span><br><span class="line">&#125;</span><br><span class="line">type Cat struct &#123;</span><br><span class="line">Animal</span><br><span class="line">name string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (c *Cat) Bark()&#123;</span><br><span class="line">fmt.Println(&quot;miaomiao~&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var dog Dog</span><br><span class="line">dog.Bark()</span><br><span class="line">var cat Cat</span><br><span class="line">cat.Bark()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法值与表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Animal struct&#123;</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">func (p *Animal) Bark()&#123;</span><br><span class="line">fmt.Println(&quot;w汪汪叫&quot;)</span><br><span class="line">&#125;</span><br><span class="line">type Dog struct &#123;</span><br><span class="line">Animal</span><br><span class="line">name string</span><br><span class="line">&#125;</span><br><span class="line">type Cat struct &#123;</span><br><span class="line">Animal</span><br><span class="line">name string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func (c *Cat) Bark()&#123;</span><br><span class="line">fmt.Println(&quot;miaomiao~&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var dog Dog</span><br><span class="line">dog.Bark()</span><br><span class="line">var cat Cat</span><br><span class="line">cool:=cat.Bark</span><br><span class="line">cool()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法表达式调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Person struct &#123;  //定义一个 类型为Person的结构体</span><br><span class="line">name string</span><br><span class="line">sex byte</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">func (p Person) SetInfoValue() &#123;//普通传递为值传递   结构体变量：p  结构体类型：Person</span><br><span class="line">fmt.Printf(&quot; SetInfoValue : %p, %v\n&quot;,&amp;p,p)</span><br><span class="line">&#125;</span><br><span class="line">func (p *Person) SetInfoPointer() &#123;//形参（接受者）是指针类型  整个变量的地址 结构体变量：p  结构体类型：Person</span><br><span class="line">fmt.Printf(&quot; SetInfoPointer : %p, %v\n&quot;,p,p)</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">p:=Person&#123;&quot;huangsheng&quot;,&apos;m&apos;,18&#125; //结构体 初始化 赋值</span><br><span class="line">fmt.Printf(&quot;main  :  %p ,%v\n&quot;,&amp;p,p)  //%p 地址 %v实际类型的值</span><br><span class="line">f:=(*Person).SetInfoPointer//实参为指针  地址作为传递 |*Person-&gt;通过指针访问目标对象</span><br><span class="line">f(&amp;p)//传递的为地址  指针储存的是地址</span><br><span class="line">h:=(Person).SetInfoValue //实参 为普通传递  值传递</span><br><span class="line">h(p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面向象之方法。。。。。。别看了….&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day7</title>
    <link href="https://hexo.dulada.com/go-7.html"/>
    <id>https://hexo.dulada.com/go-7.html</id>
    <published>2019-04-08T11:49:02.000Z</published>
    <updated>2019-07-23T07:44:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。翻滚吧~别留在电脑里了….<br><a id="more"></a></p><p>匿名字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Person struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">type Student struct &#123;</span><br><span class="line">Person</span><br><span class="line">//name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">var s1 Student = Student&#123;Person&#123;101,&quot;mike&quot;,18&#125;,98.5&#125;</span><br><span class="line">s1.age =11</span><br><span class="line">s1.Person.id = 911</span><br><span class="line">s1.score  =901</span><br><span class="line"></span><br><span class="line">fmt.Println(&quot;s1 = &quot;,s1)</span><br><span class="line">s2 := Student&#123;Person&#123;102,&quot;niko&quot;,25&#125;,95.5&#125;</span><br><span class="line">s2.Person = Person&#123;122,&quot;ererer&quot;,222&#125;</span><br><span class="line">fmt.Println(&quot;s2 = &quot;,s2)</span><br><span class="line">s3 := Student&#123;score: 98&#125;</span><br><span class="line">fmt.Printf(&quot;s3 = %+v\n&quot;,s3)</span><br><span class="line">s4 := Student&#123;Person:Person&#123;name:&quot;mike&quot;&#125;,score:100&#125;</span><br><span class="line">fmt.Printf(&quot;s4 = %+v\n&quot;,s4)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同名字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Person struct&#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Student struct&#123;</span><br><span class="line">Person</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var s1 Student</span><br><span class="line">s1.name = &quot;zhangsan &quot;</span><br><span class="line">fmt.Printf(&quot;s1 = %+v\n&quot;,s1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>指针类型匿名字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Person struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line">type Student struct &#123;</span><br><span class="line">*Person</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var s Student//定义结构体变量</span><br><span class="line">s = Student&#123;&amp;Person&#123;101,&quot;lisi&quot;,19&#125;,98&#125;</span><br><span class="line">fmt.Println(s)//输出的是结构体地址</span><br><span class="line">fmt.Println(s.id,s.name,s.age,s.score)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多重继承<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Object struct &#123;</span><br><span class="line">id int</span><br><span class="line">flag  bool</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Person struct &#123;</span><br><span class="line">Object</span><br><span class="line">name string</span><br><span class="line">age int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">Person</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"> var s1 Student</span><br><span class="line"> s1.name = &quot;zuangsan&quot;</span><br><span class="line"> s1.Person.name = &quot;lisi&quot;</span><br><span class="line"> s1.Person.Object.id = 123</span><br><span class="line"> fmt.Println(&quot;s1 =&quot;,s1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。翻滚吧~别留在电脑里了….&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day6</title>
    <link href="https://hexo.dulada.com/go-6.html"/>
    <id>https://hexo.dulada.com/go-6.html</id>
    <published>2019-04-05T13:01:58.000Z</published>
    <updated>2019-07-23T07:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。我又来传了~~~<br><a id="more"></a><br>指针<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var i int = 100</span><br><span class="line">var p *int</span><br><span class="line">p = &amp;i</span><br><span class="line">fmt.Printf(&quot;i = %d,p = %v&quot;,i,p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>值传递<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func swap (num1,num2 int) &#123;</span><br><span class="line">num1 ,num2 = num2,num1</span><br><span class="line">fmt.Printf(&quot;num1 = %d,num2 = %d\n&quot;,num1,num2)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var a int = 10</span><br><span class="line">var b int = 20</span><br><span class="line">swap(a,b)</span><br><span class="line">fmt.Printf(&quot;a = %d,b = %d\n&quot;,a,b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>作为参数传递<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func Swap (num1,num2 *int) &#123;</span><br><span class="line">*num1 ,*num2 = *num2,*num1</span><br><span class="line">fmt.Printf(&quot;num1 = %d,num2 = %d\n&quot;,*num1,*num2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var a int = 10</span><br><span class="line">var b int = 20</span><br><span class="line">Swap(&amp;a,&amp;b)</span><br><span class="line">fmt.Printf(&quot;a = %d,b = %d\n&quot;,a,b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>数组指针<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func Swap(p *[5]int) &#123;</span><br><span class="line">(*p)[0] = 89</span><br><span class="line">fmt.Println(*p)</span><br><span class="line">for  index,value := range *p &#123;</span><br><span class="line">fmt.Printf(&quot;index = %d,value = %d\n&quot;,index,value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">a := [5] int &#123;1,2,3,4,5&#125;</span><br><span class="line">Swap(&amp;a)</span><br><span class="line">fmt.Println(a)</span><br><span class="line">//for int</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>指针数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var p[2] *int</span><br><span class="line">var i int  = 10</span><br><span class="line">var j int = 20</span><br><span class="line">p[0] = &amp;i</span><br><span class="line">p[1] = &amp;j</span><br><span class="line">fmt.Println(p[0])</span><br><span class="line">fmt.Println(p[1])</span><br><span class="line">fmt.Println(*p[0])</span><br><span class="line">fmt.Println(*p[1])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>结构体指针变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type student struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main0601() &#123;</span><br><span class="line">var p *student = &amp;student&#123;1,&quot;zhangsan&quot;,90&#125;</span><br><span class="line">fmt.Println(*p)</span><br><span class="line">&#125;</span><br><span class="line">func main () &#123;</span><br><span class="line">p1 := &amp;student&#123;1,&quot;lisi&quot;,99&#125;</span><br><span class="line">p1.score= 998</span><br><span class="line">fmt.Println(*p1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>翻滚吧~别留在电脑里了….</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。我又来传了~~~&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day5</title>
    <link href="https://hexo.dulada.com/go-5.html"/>
    <id>https://hexo.dulada.com/go-5.html</id>
    <published>2019-04-03T12:45:07.000Z</published>
    <updated>2019-07-23T07:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。<br><a id="more"></a><br>结构体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">score float64</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">students := []Student&#123;</span><br><span class="line">Student&#123;</span><br><span class="line">101,</span><br><span class="line">&quot;张三&quot;,</span><br><span class="line">100,</span><br><span class="line">&#125;,</span><br><span class="line">Student&#123;</span><br><span class="line">102,</span><br><span class="line">&quot;李四&quot;,</span><br><span class="line">89,</span><br><span class="line">&#125;,</span><br><span class="line">Student&#123;</span><br><span class="line">103,</span><br><span class="line">&quot;王五&quot;,</span><br><span class="line">98,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line">var sum float64</span><br><span class="line">var max float64</span><br><span class="line">max = students[0].score</span><br><span class="line"></span><br><span class="line">for i:=0;i&lt;len(students);i++ &#123;</span><br><span class="line">if(students[i].score&gt;max)&#123;</span><br><span class="line">max  = students[i].score</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(students[i].name)</span><br><span class="line">sum += students[i].score</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sum)</span><br><span class="line">fmt.Println(max)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>结构体作为参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">type Student struct &#123;</span><br><span class="line">id int</span><br><span class="line">name string</span><br><span class="line">sex byte//字符类型</span><br><span class="line">age int</span><br><span class="line">addr string</span><br><span class="line">&#125;</span><br><span class="line">func Test(stu Student) &#123;</span><br><span class="line">stu.id = 666</span><br><span class="line">fmt.Println(&quot;stu : &quot;,stu)</span><br><span class="line">&#125;</span><br><span class="line">func main() &#123;</span><br><span class="line">s := Student&#123;1,&quot;mike&quot;,&apos;m&apos;,18,&quot;bj&quot;&#125;</span><br><span class="line">Test(s)</span><br><span class="line">fmt.Println(&quot;s= &quot;,s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>不想传了。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day4</title>
    <link href="https://hexo.dulada.com/go-4.html"/>
    <id>https://hexo.dulada.com/go-4.html</id>
    <published>2019-04-02T14:51:46.000Z</published>
    <updated>2019-07-23T07:36:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import  &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func main0101() &#123;</span><br><span class="line">//数组定义</span><br><span class="line">//var 数组名 [数组个数] 数组类型</span><br><span class="line"></span><br><span class="line">//切片定义</span><br><span class="line">//var  切片名 [] 数据类型</span><br><span class="line"></span><br><span class="line">var  slice [] int = [] int &#123;1,2,1,3,4,5,6&#125;</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">//slice[0] = 357</span><br><span class="line">//fmt.Println(slice)</span><br><span class="line">slice = append(slice,91,92,93)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line"></span><br><span class="line">for i:=0;i&lt;len(slice);i++&#123;</span><br><span class="line">fmt.Println(slice[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(len(slice))</span><br><span class="line">&#125;</span><br><span class="line">func main0102 () &#123;</span><br><span class="line">//var slice [6] int</span><br><span class="line">//slice [0]  = 123</span><br><span class="line">//slice = append(slice ,3)</span><br><span class="line">//定义切片时可以指定长度 make（切片类型，长度）</span><br><span class="line">//var slice [] int = make([]int,10)</span><br><span class="line">//slice [0]  = 123</span><br><span class="line">//slice = append(slice ,3)</span><br><span class="line">//fmt.Println(slice)</span><br><span class="line"></span><br><span class="line">//通过自动推导类型创建切片</span><br><span class="line">slice :=[]int &#123;1,2,3&#125;</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">fmt.Println(len(slice))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>切片的地址和扩容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main0201() &#123;</span><br><span class="line">var slice [] int</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line"></span><br><span class="line">slice = append(slice,1,2,3)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line">slice = append(slice,4,2,3)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line">&#125;</span><br><span class="line">func main0202 () &#123;</span><br><span class="line">//make ([]数据类型， 长度，容量)</span><br><span class="line">slice := make ([]int ,10,20)</span><br><span class="line">fmt.Println(&quot;容量是： &quot;,cap(slice))</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line">//fmt.Println(len(slice))</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">slice = append(slice, 1, 2, 3, 4, 5)</span><br><span class="line">fmt.Println(&quot;容量是： &quot;,cap(slice))</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;, slice)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">slice = append(slice, 1, 2, 3, 4, 5,9)</span><br><span class="line">fmt.Println(&quot;容量是： &quot;,cap(slice))</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;, slice)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">&#125;</span><br><span class="line">func main () &#123;</span><br><span class="line">slice := []int &#123;1,2,3,4,5,6&#125;</span><br><span class="line">fmt.Println(&quot;容量是： &quot;,cap(slice))</span><br><span class="line">fmt.Println(&quot;重读是： &quot;,len(slice))</span><br><span class="line">slice = append(slice, 1)</span><br><span class="line">fmt.Println(&quot;长度&quot;, len(slice))</span><br><span class="line">fmt.Println(&quot;容量&quot;, cap(slice))</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>切片的截取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main0301() &#123;</span><br><span class="line">slice :=[]int &#123;1,2,3,4,5,6,7,8,9&#125;</span><br><span class="line">s :=slice[3:7]</span><br><span class="line">fmt.Println(s)</span><br><span class="line">a :=slice[3:7:7]</span><br><span class="line">fmt.Println(a)</span><br><span class="line">b := slice[:2]</span><br><span class="line">fmt.Println(b)</span><br><span class="line">c := slice[2:]</span><br><span class="line">fmt.Println(c)</span><br><span class="line">d := slice[:]</span><br><span class="line">fmt.Println(d)</span><br><span class="line">fmt.Println(len(slice))</span><br><span class="line">fmt.Println(cap(slice))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">func main () &#123;</span><br><span class="line">slice :=[]int &#123;1,2,3,4,5,6,7,8,9&#125;</span><br><span class="line">s:=slice[:]</span><br><span class="line">s[1] = 123</span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">fmt.Println(slice)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,s)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>切片的拷贝<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var slice [] int = []int &#123;1,2,3,4,5,6,7,8,9&#125;</span><br><span class="line">s := make ([]int,9)</span><br><span class="line">copy(s ,slice)</span><br><span class="line">fmt.Println(s)</span><br><span class="line"></span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,slice)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>切片的排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var slice []int  = []int &#123;9, 1, 5, 6, 8, 3, 7, 2, 10, 4&#125;</span><br><span class="line">for i :=0;i&lt;len(slice)-1;i++&#123;</span><br><span class="line">for j:=0;j&lt;len(slice)-1-i;j++ &#123;</span><br><span class="line">if slice[j] &gt;slice [j+1] &#123;</span><br><span class="line">slice[j],slice[j+1] = slice[j+1],slice[j]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>切片作为函数返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func test(s []int) []int &#123;</span><br><span class="line">//fmt.Println(s)</span><br><span class="line">//fmt.Println(len(s))</span><br><span class="line">//s[0] = 123</span><br><span class="line">//s[5] = 555</span><br><span class="line">//fmt.Printf(&quot;%p\n&quot;,s)</span><br><span class="line">for i := 0;i&lt;len(s)-1;i++&#123;</span><br><span class="line">for j :=0;j&lt;len(s)-1-i;j++&#123;</span><br><span class="line">if s[j] &gt;s [j+1] &#123;</span><br><span class="line">s[j],s[j+1]=s[j+1],s[j]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,s)</span><br><span class="line">return s</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">slice := []int&#123;9, 1, 5, 6, 8, 4, 7, 10, 3, 2&#125;</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;, slice)</span><br><span class="line">//地址传递  形参可以改变实参</span><br><span class="line">slice=test(slice)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day3</title>
    <link href="https://hexo.dulada.com/go-3.html"/>
    <id>https://hexo.dulada.com/go-3.html</id>
    <published>2019-04-01T14:51:46.000Z</published>
    <updated>2019-07-23T07:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。<br><a id="more"></a><br>数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">var a [10] int</span><br><span class="line">for i :=0; i&lt;len(a); i++&#123;</span><br><span class="line">fmt.Println(a[i])</span><br><span class="line">a[i] = i + 1</span><br><span class="line">fmt.Println(a[i])</span><br><span class="line">&#125;</span><br><span class="line">//for i := 0; i&lt;len(a); i++&#123;</span><br><span class="line">//fmt.Println(a[i])</span><br><span class="line">//&#125;</span><br><span class="line">for i ,data :=range a &#123;</span><br><span class="line">fmt.Printf(&quot;a[%d] = %d\t&quot;,i,data)</span><br><span class="line">&#125;</span><br><span class="line">//fmt.Println(len(a))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>数组初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main0201() &#123;</span><br><span class="line">var a [5]int  = [5]int&#123;1,2,3,4,5&#125;</span><br><span class="line">fmt.Println(&quot;a= &quot;,a)</span><br><span class="line">b :=[5]int &#123;2,4,6,8,10&#125;</span><br><span class="line">fmt.Println(&quot;b = &quot;,b)</span><br><span class="line">c :=[5]int &#123;3,6,9&#125;</span><br><span class="line">fmt.Println(&quot;c = &quot;,c)</span><br><span class="line">d := [5] int &#123;2:10,4:12&#125;</span><br><span class="line">fmt.Println(&quot;d = &quot;,d)</span><br><span class="line">e := [...] int &#123;1,2,3&#125;</span><br><span class="line">fmt.Println(e[0])</span><br><span class="line">&#125;</span><br><span class="line">func main () &#123;</span><br><span class="line">arr:= [...] int &#123;1,161,61,136&#125;</span><br><span class="line">for _,v:=range arr  &#123;</span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(&quot;%T\n&quot;,arr)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,&amp;arr)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,&amp;arr[0])</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,&amp;arr[1])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>数组置换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">arr := [10] int &#123;0,1,2,3,4,5,6,7,8,9&#125;</span><br><span class="line">start := 0</span><br><span class="line">end := len(arr)-1</span><br><span class="line">for&#123;</span><br><span class="line">if(start&gt;end)&#123;</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line">arr[start],arr[end] = arr[end],arr[start]</span><br><span class="line">start++</span><br><span class="line">end--</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>冒泡排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main0601() &#123;</span><br><span class="line">num:=[10]int&#123;9,1,5,6,7,3,10,2,4,8&#125;</span><br><span class="line">var temp int</span><br><span class="line">for i :=0;i&lt;len(num)-1;i++&#123;</span><br><span class="line">for j:=0;j&lt;len(num)-1-i;j++&#123;</span><br><span class="line">if num[j]&gt;num[j+1] &#123;</span><br><span class="line">temp = num [j]</span><br><span class="line">num[j] = num [j+1]</span><br><span class="line">num[j+1] = temp</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(num)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main () &#123;</span><br><span class="line">var ch [20] byte</span><br><span class="line">for i:= 0;i&lt;len(ch);i++ &#123;</span><br><span class="line">fmt.Scanf(&quot;%f&quot;,&amp;ch[i])</span><br><span class="line">&#125;</span><br><span class="line">//统计个数</span><br><span class="line">for i := 0; i &lt; len(ch); i++ &#123;</span><br><span class="line">fmt.Printf(&quot;%c&quot;,ch[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>数组作为函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func modify(a[5]int) &#123;</span><br><span class="line">a[0]  = 666</span><br><span class="line">fmt.Println(&quot;modify a = &quot;,a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main0701() &#123;</span><br><span class="line">a := [5] int &#123; 1,2,3,4,5&#125;</span><br><span class="line">modify(a)</span><br><span class="line">fmt.Println(&quot;main a = &quot;,a)</span><br><span class="line">&#125;</span><br><span class="line">func test(arr[10] int) &#123;</span><br><span class="line">arr [2] = 123</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,&amp;arr)</span><br><span class="line">&#125;</span><br><span class="line">func main ()&#123;</span><br><span class="line">arr :=[10] int &#123;9,1,5,6,7,3,10,2,4,8&#125;</span><br><span class="line">fmt.Printf(&quot;%T\n&quot;,arr)</span><br><span class="line">test(arr)</span><br><span class="line">fmt.Printf(&quot;%p\n&quot;,&amp;arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>数组出现次数统计<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">//通过键盘输入20个小写字母  统计个数</span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">//var ch byte</span><br><span class="line">//ch = &apos;a&apos;</span><br><span class="line">//fmt.Printf(&quot;%c&quot;,ch)</span><br><span class="line"></span><br><span class="line">var arr [20] byte</span><br><span class="line"></span><br><span class="line">for i:= 0;i&lt;len(arr);i++ &#123;</span><br><span class="line">fmt.Scanf(&quot;%c&quot;,&amp;arr[i])</span><br><span class="line">&#125;</span><br><span class="line">var ch [26] int</span><br><span class="line"></span><br><span class="line">for i :=0;i&lt;len(arr)-1 ;i++ &#123;</span><br><span class="line">ch[arr[i]-&apos;a&apos;]++</span><br><span class="line">&#125;</span><br><span class="line">for i:=0;i&lt;len(ch) -1;i++ &#123;</span><br><span class="line">if ch[i]&gt;0&#123;</span><br><span class="line">fmt.Printf(&quot;字母 ： %c出现的次数： %d 次 \n&quot;,&apos;a&apos;+i,ch[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day2</title>
    <link href="https://hexo.dulada.com/go-2.html"/>
    <id>https://hexo.dulada.com/go-2.html</id>
    <published>2019-03-29T12:11:03.000Z</published>
    <updated>2019-07-23T07:29:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>太基础了，不值得看。。。。。。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">const (</span><br><span class="line">a = iota</span><br><span class="line">b = iota</span><br><span class="line">c = iota</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;a = %d,b = %d,c = %d&quot;,a,b,c)</span><br><span class="line">//iota  遇到const  重置为0</span><br><span class="line">const d = iota</span><br><span class="line">fmt.Println(&quot;d = &quot;,d)</span><br><span class="line">//iota 可以只写一个</span><br><span class="line">const (</span><br><span class="line">a1 = iota</span><br><span class="line">b1</span><br><span class="line">c1</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;a1 = %d,b1 = %d,c1 = %d&quot;,a1,b1,c1)</span><br><span class="line">const (</span><br><span class="line">i = iota</span><br><span class="line">e,f,g = iota,iota,iota</span><br><span class="line">h = iota</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;i = %d,e = %d,f = %d,g = %d,h = %d&quot;,i,e,f,g,h)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">var a int = 10</span><br><span class="line">var b int = 20</span><br><span class="line">fmt.Printf(&quot;a + b = %d\n&quot;,a+b)</span><br><span class="line">fmt.Printf(&quot;b / a = %d\n&quot;,b/a)</span><br><span class="line">fmt.Printf(&quot;b%a=%d\n&quot;,b%a)</span><br><span class="line">&#125;</span><br><span class="line">func main02 () &#123;</span><br><span class="line">a := 10</span><br><span class="line">b := 2</span><br><span class="line">c := a%b</span><br><span class="line">fmt.Println(c)</span><br><span class="line">&#125;</span><br><span class="line">func main03() &#123;</span><br><span class="line">a := 7</span><br><span class="line">a++</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line">func main04 () &#123;</span><br><span class="line">var chinese int = 66</span><br><span class="line">var math int = 99</span><br><span class="line">var eng  int = 77</span><br><span class="line">//fmt.Printf(&quot;总分数是:%d,平均分是:%d&quot;,chinese+math+eng,(chinese+math+eng)/3)</span><br><span class="line">fmt.Printf(&quot;总分数是：%d,平均分是:%f&quot;,chinese+math+eng,float64(chinese+math+eng)/3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main () &#123;</span><br><span class="line">var num1 int = 35</span><br><span class="line">var num2 int = 40</span><br><span class="line">avg := float64(num1+num2)/2</span><br><span class="line"></span><br><span class="line">fmt.Printf(&quot;avg=%f\n&quot;,avg)</span><br><span class="line">fmt.Printf(&quot;avg = %T\n&quot;,avg)</span><br><span class="line"></span><br><span class="line">var mod float64</span><br><span class="line">mod = float64(num1/num2)</span><br><span class="line">fmt.Printf(&quot;mod= %f&quot;,mod)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main061() &#123;</span><br><span class="line">var age int =26</span><br><span class="line">var b bool</span><br><span class="line">b = age &gt;15</span><br><span class="line">if b &#123;</span><br><span class="line">fmt.Println(&quot;已经成年了&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main062 () &#123;</span><br><span class="line">var age int = 16</span><br><span class="line">if age &gt;18 &#123;</span><br><span class="line">fmt.Println(&quot;已成年&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">func main063()&#123;</span><br><span class="line">if a :=10;a==10 &#123;</span><br><span class="line">fmt.Println(&quot;a==10&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main065()&#123;</span><br><span class="line">//var username byte</span><br><span class="line">//var pwd byte</span><br><span class="line">//fmt.Println(&quot;请输入用户名&quot;)</span><br><span class="line">//fmt.Scan(&amp;username)</span><br><span class="line">//fmt.Println(&quot;密码&quot;)</span><br><span class="line">//fmt.Scan(&amp;pwd)</span><br><span class="line">//if (username==admin &amp;&amp; pwd==&quot;123456&quot;)&#123;</span><br><span class="line">//fmt.Println(&quot;sussece&quot;)</span><br><span class="line">//&#125;</span><br><span class="line">&#125;</span><br><span class="line">func main066() &#123;</span><br><span class="line">var score float64</span><br><span class="line">fmt.Println(&quot;请输入考试成绩&quot;)</span><br><span class="line">fmt.Scanf(&quot;%f&quot;,&amp;score)</span><br><span class="line">if score &gt;=90 &#123;</span><br><span class="line">fmt.Println(&quot;奖励100元&quot;)</span><br><span class="line">&#125;else &#123;</span><br><span class="line">fmt.Println(&quot;三生三世&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">func main067 () &#123;</span><br><span class="line">var money float64</span><br><span class="line">fmt.Println(&quot;请输入公交卡钱数&quot;)</span><br><span class="line">fmt.Scanf(&quot;%f\n&quot;,&amp;money)</span><br><span class="line">fmt.Println(money)</span><br><span class="line">if money &gt;=2 &#123;</span><br><span class="line">var seat_count int</span><br><span class="line">fmt.Println(&quot;请输入空座位置数量:&quot;)</span><br><span class="line">fmt.Scanf(&quot;%d&quot;,&amp;seat_count)</span><br><span class="line">if seat_count &gt;0 &#123;</span><br><span class="line">fmt.Println(&quot;请坐&quot;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">fmt.Println(&quot;没有座位了&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">fmt.Println(&quot;余额不足&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main068() &#123;</span><br><span class="line">var name string</span><br><span class="line">var pwd string</span><br><span class="line">fmt.Println(&quot;请输入用户名&quot;)</span><br><span class="line">fmt.Scanf(&quot;%s\n&quot;,&amp;name)</span><br><span class="line">fmt.Println(&quot;请输入密码&quot;)</span><br><span class="line">fmt.Scanf(&quot;%s\n&quot;,&amp;pwd)</span><br><span class="line">if name == &quot;admin&quot; &amp;&amp;pwd ==&quot;8888&quot; &#123;</span><br><span class="line">fmt.Println(&quot;登录成功&quot;)</span><br><span class="line">&#125; else if name == &quot;admin&quot; &#123;</span><br><span class="line">fmt.Println(&quot;密码错误&quot;)</span><br><span class="line">&#125; else if pwd == &quot;8888&quot; &#123;</span><br><span class="line">fmt.Println(&quot;名错误&quot;)</span><br><span class="line">&#125;else &#123;</span><br><span class="line">fmt.Println(&quot;全错&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">func  main069 () &#123;</span><br><span class="line">var score int</span><br><span class="line">fmt.Println(&quot;请输入分数&quot;)</span><br><span class="line">fmt.Scanf(&quot;%d\n&quot;,&amp;score)</span><br><span class="line">fmt.Println(score)</span><br><span class="line">switch &#123;</span><br><span class="line">case score &gt;= 90:</span><br><span class="line">fmt.Println(&quot;优秀&quot;)</span><br><span class="line">case score &gt;= 80:</span><br><span class="line">fmt.Println(&quot;良好&quot;)</span><br><span class="line">case score &gt;= 70:</span><br><span class="line">fmt.Println(&quot;一般&quot;)</span><br><span class="line">case score &gt;= 60:</span><br><span class="line">fmt.Println(&quot;及格&quot;)</span><br><span class="line">default:</span><br><span class="line">fmt.Println(&quot;bujige&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">func main0610 () &#123;</span><br><span class="line">var i int</span><br><span class="line">for i = 1;i &lt;= 10;i++ &#123;</span><br><span class="line">fmt.Println(&quot;dasfasdf &quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//func main0611 () &#123;</span><br><span class="line">//for i:=1;i&lt;=10;i++ &#123;</span><br><span class="line">//fmt.Println(&quot;fasdfa&quot;)</span><br><span class="line">//&#125;</span><br><span class="line">//&#125;</span><br><span class="line">func main0611 () &#123;</span><br><span class="line">var count int</span><br><span class="line">var score float64</span><br><span class="line">var sum float64</span><br><span class="line">fmt.Println(&quot;请输入班级 人数:&quot;)</span><br><span class="line">fmt.Scanf(&quot;%d\n&quot; , &amp;count)</span><br><span class="line">for i:=1 ;i &lt;= count; i++&#123;</span><br><span class="line">fmt.Printf(&quot;请输入 %d 学生的成绩 &quot;,i)</span><br><span class="line">fmt.Scanf(&quot;%f\n&quot; , &amp;score)</span><br><span class="line">sum += score</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(&quot;班级的总人数：%d，总成绩是：%f,平均成绩是:%f&quot;, count, sum, sum/float64(count))</span><br><span class="line">&#125;</span><br><span class="line">func main0612 () &#123;</span><br><span class="line">var people float64</span><br><span class="line">var year int = 2016</span><br><span class="line">for people = 80000;people&lt;=200000;people=people*1.25 &#123;</span><br><span class="line">year +=1</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(&quot;到%d年培训人数将增加到20w人&quot;,year)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main0613() &#123;</span><br><span class="line">var name string</span><br><span class="line">var pwd string</span><br><span class="line">var count int</span><br><span class="line">for&#123;</span><br><span class="line">fmt.Println(&quot;请输入用户名&quot;)</span><br><span class="line">fmt.Scanf(&quot;%s\n&quot;,&amp;name)</span><br><span class="line">fmt.Println(&quot;请输入密码&quot;)</span><br><span class="line">fmt.Scanf(&quot;%s\n&quot;,&amp;pwd)</span><br><span class="line">if name == &quot;admin&quot; &amp;&amp;pwd ==&quot;8888&quot; &#123;</span><br><span class="line">fmt.Println(&quot;登录成功&quot;)</span><br><span class="line">break;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">count++</span><br><span class="line">if count &gt;=3 &#123;</span><br><span class="line">fmt.Println(&quot;输入错误次数太多&quot;)</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(&quot;错&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">func main0614() &#123;</span><br><span class="line">var h int</span><br><span class="line">var t int</span><br><span class="line">var u int</span><br><span class="line">for i :=100;i&lt;=999;i++ &#123;</span><br><span class="line">h = i/100</span><br><span class="line">t = i% 100/10</span><br><span class="line">u = i %10</span><br><span class="line">if h *h*h+t*t*t+u*u*u == i &#123;</span><br><span class="line">fmt.Println(&quot;束鲜花有：&quot;,i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main0615 () &#123;</span><br><span class="line">for i := 1;i&lt;=5 ;i++ &#123;</span><br><span class="line">if i==2 &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;i的值是：&quot;,i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func  main () &#123;</span><br><span class="line">var i int</span><br><span class="line">var j int</span><br><span class="line">for i = 1;i&lt;=9;i++&#123;</span><br><span class="line">for  j=1;j&lt;=9;j++&#123;</span><br><span class="line">fmt.Printf(&quot;%d*%d=%d\t&quot;,i,j,i*j)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func palyerGame() &#123;</span><br><span class="line">fmt.Println(&quot;zou a zou &quot;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//func  Test(a int) &#123;</span><br><span class="line">//fmt.Printf(&quot;a = %d,b=%d&quot;,a,b)</span><br><span class="line">//&#125;</span><br><span class="line">func SumAdd(a,b int) &#123;</span><br><span class="line">var sum int</span><br><span class="line">sum = a+b</span><br><span class="line">fmt.Println(&quot;和为： &quot;,sum)</span><br><span class="line">&#125;</span><br><span class="line">func main071() &#123;</span><br><span class="line">palyerGame()</span><br><span class="line">SumAdd(44,22)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//不定义参数列表</span><br><span class="line">func Test072 (a int ,b int ,args ...int) &#123;</span><br><span class="line">//for i:=0;i&lt;len(args);i++ &#123;</span><br><span class="line">//fmt.Print(args[i])</span><br><span class="line">//&#125;</span><br><span class="line">for i,data := range args&#123;</span><br><span class="line">fmt.Println(&quot;编号为： &quot;,i)</span><br><span class="line">fmt.Println(&quot;值为： &quot;,data)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;&quot;)</span><br><span class="line">&#125;</span><br><span class="line">funcmain072 () &#123;</span><br><span class="line">Test(1,3,4,5,2)</span><br><span class="line">Test(1,2,3)</span><br><span class="line">Test(1,3,4,5,5,6,67,23)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func Test(args...int) &#123;</span><br><span class="line">var sum int</span><br><span class="line">for _,data:=range args&#123;</span><br><span class="line">sum+= data</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(&quot;所有整数的和为： &quot;,sum)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main () &#123;</span><br><span class="line">Test(1,2,3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太基础了，不值得看。。。。。。&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-day1</title>
    <link href="https://hexo.dulada.com/go-1.html"/>
    <id>https://hexo.dulada.com/go-1.html</id>
    <published>2019-03-28T11:03:30.000Z</published>
    <updated>2019-07-23T07:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习golang</p><h4 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">fmt.Print(&quot;Hello worlld&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面的太乱了，别看了<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">//fmt.PrintIn(&quot;测试变量定义&quot;)</span><br><span class="line">//var a int = 10</span><br><span class="line">//fmt.Println(a)</span><br><span class="line">/*</span><br><span class="line">var b,c int</span><br><span class="line">b = 10</span><br><span class="line">c = 20</span><br><span class="line">fmt.Println(b,c)</span><br><span class="line">//fmt.Println(c)</span><br><span class="line">*/</span><br><span class="line">/*</span><br><span class="line">var a int = 10</span><br><span class="line">var b int</span><br><span class="line">b = a</span><br><span class="line">fmt.Println(b)</span><br><span class="line">*/</span><br><span class="line">/*</span><br><span class="line">自动推导赋值</span><br><span class="line">num := 30</span><br><span class="line">fmt.Println(num)</span><br><span class="line">*/</span><br><span class="line">/*</span><br><span class="line">// 多重赋值匿名变量</span><br><span class="line">//a := 1</span><br><span class="line">//b := 10</span><br><span class="line">//c := 100</span><br><span class="line">a,b,c := 1,10,100</span><br><span class="line">fmt.Println(a,b,c)</span><br><span class="line">*/</span><br><span class="line">//数值变换</span><br><span class="line">a,b := 10,20</span><br><span class="line">a,b = b, a</span><br><span class="line">fmt.Println(a,b)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main031 ()&#123;</span><br><span class="line">a := 1</span><br><span class="line">b := 2</span><br><span class="line">//c := 30</span><br><span class="line">//fmt.Println(&quot;a=&quot;,a,&quot;b=&quot;,b)</span><br><span class="line">fmt.Printf(&quot;a=%d\nb=%d&quot;,a,b)</span><br><span class="line">//fmt.Printf(&quot;a=%d,b=%d,c=%d\n&quot;,a,b,c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>scanf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main021 ()&#123;</span><br><span class="line">var age int</span><br><span class="line">fmt.Println(&quot;请输入你的年龄&quot;)</span><br><span class="line">//fmt.Scanf(&quot;%d&quot;,&amp;age)</span><br><span class="line">//fmt.Printf(&quot;a=%d&quot;,age)</span><br><span class="line">fmt.Scan(&amp;age)</span><br><span class="line">fmt.Printf(&quot;a=%d&quot;,age)</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">// 变量命名</span><br><span class="line">break default func interface select</span><br><span class="line">case defer go map struct</span><br><span class="line">chan else goto package switch</span><br><span class="line">const fallthrough if range type</span><br><span class="line">continue for import return var</span><br><span class="line"></span><br><span class="line">true false iota nil</span><br><span class="line">int int8 int16 int32 int64</span><br><span class="line">unit unit6 unit16  unit32 unit64 unitptr</span><br><span class="line">float32 float64 complex128 complex64</span><br><span class="line">bool byte rune string error</span><br><span class="line"></span><br><span class="line">make len cap new append copy close delete</span><br><span class="line">comlexrealimag</span><br><span class="line">painc recover</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></p><p>type<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">var a bool</span><br><span class="line">//a = 10</span><br><span class="line">fmt.Println(&quot;a0 = &quot;,a )</span><br><span class="line">a = true</span><br><span class="line">fmt.Println(&quot;a1 = &quot;,a)</span><br><span class="line">// 自动推导类型</span><br><span class="line">var b = false</span><br><span class="line">fmt.Println(&quot;b0 = &quot;,b )</span><br><span class="line">c := true</span><br><span class="line">fmt.Println(&quot;c = &quot;,c)</span><br><span class="line">&#125;</span><br><span class="line">func main02 () &#123;</span><br><span class="line">//指定格式输出</span><br><span class="line">var b bool</span><br><span class="line">b = true</span><br><span class="line">fmt.Printf(&quot;b=%t&quot;,b)</span><br><span class="line">&#125;</span><br><span class="line">func main03 () &#123;</span><br><span class="line">// 浮点型</span><br><span class="line">var f1 float32</span><br><span class="line">f1 = 3.14</span><br><span class="line">fmt.Println(&quot;f1 = &quot;,f1)</span><br><span class="line">//自动推导</span><br><span class="line">f2 := 3.14</span><br><span class="line">fmt.Println(&quot;f2 = &quot;,f2)</span><br><span class="line">&#125;</span><br><span class="line">func main031 ()&#123;</span><br><span class="line">//浮点型  有格式的输入输出</span><br><span class="line">var f1 float32</span><br><span class="line">fmt.Scanf(&quot;%f&quot;,&amp;f1)</span><br><span class="line">fmt.Printf(&quot;f1 = %f&quot;,f1)</span><br><span class="line">&#125;</span><br><span class="line">func main04 () &#123;</span><br><span class="line">//字符类型</span><br><span class="line">var ch byte</span><br><span class="line">ch = &apos;a&apos;</span><br><span class="line">fmt.Printf(&quot;%c&quot;,ch)</span><br><span class="line">&#125;</span><br><span class="line">func main041 ()&#123;</span><br><span class="line">// 输入和输出的类型</span><br><span class="line">var ch byte</span><br><span class="line">fmt.Scanf(&quot;%c&quot;,&amp;ch)</span><br><span class="line">fmt.Printf(&quot;%c&quot;,ch)</span><br><span class="line">&#125;</span><br><span class="line">func main042 () &#123;</span><br><span class="line">//输入和输出类型</span><br><span class="line">var ch byte</span><br><span class="line">ch = 97</span><br><span class="line">fmt.Printf(&quot;ch = %c&quot;,ch)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">func main05()&#123;</span><br><span class="line">//转义字符</span><br><span class="line">//\&quot;表示英文半角的双引号</span><br><span class="line">fmt.Printf(&quot;传智播客\&quot;区块链\&quot; 课程&quot;)</span><br><span class="line">// \t  表示  table  键的 空格</span><br><span class="line">fmt.Printf(&quot;张三\t 李四\t 王五&quot;)</span><br><span class="line">//\\表示一个\  主要用在磁盘的根目录上</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func  main06 () &#123;</span><br><span class="line">//字符串类型</span><br><span class="line">var strl string</span><br><span class="line">strl = &quot;abc&quot;</span><br><span class="line">fmt.Println (&quot;strl= &quot;,strl)</span><br><span class="line">fmt.Printf(&quot;strl=%s &quot;,strl)</span><br><span class="line">&#125;</span><br><span class="line">func main061 ()&#123;</span><br><span class="line">var strl string</span><br><span class="line">fmt.Scanf(&quot;%s&quot;,&amp;strl)</span><br><span class="line">fmt.Printf(&quot;strl= %s&quot;,strl)</span><br><span class="line">&#125;</span><br><span class="line">func main07 () &#123;</span><br><span class="line">//字符与字符串的区别</span><br><span class="line">var ch byte</span><br><span class="line">var str string</span><br><span class="line">ch = &apos;a&apos;</span><br><span class="line">str = &quot;a&quot;</span><br><span class="line">fmt.Println(&quot;ch = &quot;,ch)</span><br><span class="line"></span><br><span class="line">fmt.Println(&quot;str = &quot;,str)</span><br><span class="line"></span><br><span class="line">str = &quot;hello&quot;</span><br><span class="line">fmt.Println(&quot;str长度是&quot;,len(str))</span><br><span class="line"></span><br><span class="line">fmt.Printf(&quot;str[0] = %c ,str[1] = %c\n&quot;,str[0],str[1])</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line"> fmt 输出输入</span><br><span class="line">%% 一个%的字面量</span><br><span class="line">%b一个二进制整数值  或者是科学计数法表示指数为2的浮点数</span><br><span class="line">%c 字符型  按照输入的数字按照对应ASCII码相应 的转换为对应的字符</span><br><span class="line">%d 一个十进制数值（基数为10）</span><br><span class="line">%f 以标准计数法的表示浮点数或者复数</span><br><span class="line">%o一个八进制数值</span><br><span class="line">%p以十六进制(基数为16）表示一个值的地址，前缀为ox 字母使用小写a-f 表示</span><br><span class="line">%q使用Go语法以及必须时使用转义，以双引号括起来的字符串或者字节切片[]byte,或者是以单引号括起来的数字</span><br><span class="line">%s字符串。输出字符串中的值至子串传中的空字符 \0</span><br><span class="line">%t以true或false 输出的布尔值</span><br><span class="line">%T 使用Go语言语法输出的布尔值类型</span><br><span class="line">%x 以十六进制的整型值</span><br><span class="line">%X 以十六进制的整型值</span><br><span class="line">*/</span><br><span class="line">func main08 () &#123;</span><br><span class="line">var b bool</span><br><span class="line">b  = false</span><br><span class="line">fmt.Printf(&quot;b 的变量类型是 %T&quot;, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>const<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main01() &#123;</span><br><span class="line">const (</span><br><span class="line">a = iota</span><br><span class="line">b = iota</span><br><span class="line">c = iota</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;a = %d,b = %d,c = %d&quot;,a,b,c)</span><br><span class="line">//iota  遇到const  重置为0</span><br><span class="line">const d = iota</span><br><span class="line">fmt.Println(&quot;d = &quot;,d)</span><br><span class="line">//iota 可以只写一个</span><br><span class="line">const (</span><br><span class="line">a1 = iota</span><br><span class="line">b1</span><br><span class="line">c1</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;a1 = %d,b1 = %d,c1 = %d&quot;,a1,b1,c1)</span><br><span class="line">const (</span><br><span class="line">i = iota</span><br><span class="line">e,f,g = iota,iota,iota</span><br><span class="line">h = iota</span><br><span class="line">)</span><br><span class="line">fmt.Printf(&quot;i = %d,e = %d,f = %d,g = %d,h = %d&quot;,i,e,f,g,h)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习golang&lt;/p&gt;
&lt;h4 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello world&quot;&gt;&lt;/a&gt;Hello world&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main01() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Print(&amp;quot;Hello worlld&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面的太乱了，别看了&lt;br&gt;
    
    </summary>
    
    
      <category term="golang" scheme="https://hexo.dulada.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>yilia主题的hexo博客添加留言评论系统valine</title>
    <link href="https://hexo.dulada.com/hexo-comment-system.html"/>
    <id>https://hexo.dulada.com/hexo-comment-system.html</id>
    <published>2019-02-19T01:18:53.000Z</published>
    <updated>2019-02-19T04:00:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>yilia 主题的hexo博客 安装留言评论系统之valine</p><p>安装完yilia主题的hexo博客,自带的留言评论系统貌似都不能用，然后找到了<a href="https://valine.js.org/index.html" target="_blank" rel="noopener">valine</a>和<a href="http://www.disqus.com/" target="_blank" rel="noopener">disqus</a>（需要翻墙）</p><h5 id="首先打开valine-官网：https-valine-js-org"><a href="#首先打开valine-官网：https-valine-js-org" class="headerlink" title="首先打开valine 官网：https://valine.js.org/"></a>首先打开valine 官网：<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></h5><p>valine的介绍是：【是一款基于Leancloud的快速、简洁且高效的无后端评论系统。】</p><a id="more"></a><h5 id="按照官网的快速上手"><a href="#按照官网的快速上手" class="headerlink" title="按照官网的快速上手"></a>按照官网的<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">快速上手</a></h5><h4 id="前期准备操作"><a href="#前期准备操作" class="headerlink" title="前期准备操作"></a>前期准备操作</h4><h6 id="1-获取APP-ID-和-APP-Key"><a href="#1-获取APP-ID-和-APP-Key" class="headerlink" title="1.获取APP ID 和 APP Key"></a>1.获取APP ID 和 APP Key</h6><p>请先登录或注册 LeanCloud, 进入控制台后点击左下角创建应用：</p><p><img src="https://ws1.sinaimg.cn/large/006qRazegy1fkwo2fpoetj30h40coaak.jpg" alt="image"></p><p>应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了：<br><img src="https://ws1.sinaimg.cn/large/006qRazegy1fkwo6w2b6uj30xe0etjt4.jpg" alt="image"></p><h4 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h4><ol><li>首先在blog根目录下的_config.yml（==不是主题文件下的==）添加如下</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Valine https://valine.js.org</span><br><span class="line">valine: </span><br><span class="line"> appid:  #Leancloud应用的appId</span><br><span class="line"> appkey:  #Leancloud应用的appKey</span><br><span class="line"> verify: false #验证码</span><br><span class="line"> notify: false #评论回复提醒</span><br><span class="line"> avatar: mm #评论列表头像样式：&apos;&apos;/mm/identicon/monsterid/wavatar/retro/hide</span><br><span class="line"> placeholder: Just go go #评论框占位符</span><br></pre></td></tr></table></figure><ol start="2"><li>themes下yilia下layout/_partial/article.ejs文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey)&#123; %&gt;</span><br><span class="line">    &lt;section id=&quot;comments&quot; class=&quot;comments&quot;&gt;</span><br><span class="line">      &lt;style&gt;</span><br><span class="line">        .comments&#123;margin:30px;padding:10px;background:#fff&#125;</span><br><span class="line">        @media screen and (max-width:800px)&#123;.comments&#123;margin:auto;padding:10px;background:#fff&#125;&#125;</span><br><span class="line">      &lt;/style&gt;</span><br><span class="line">      &lt;%- partial(&apos;post/valine&apos;, &#123;</span><br><span class="line">        key: post.slug,</span><br><span class="line">        title: post.title,</span><br><span class="line">        url: config.url+url_for(post.path)</span><br><span class="line">        &#125;) %&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>themes下yilia下的layout/_partial/post/valine.ejs文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;vcomment&quot; class=&quot;comment&quot;&gt;&lt;/div&gt; </span><br><span class="line">&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   var notify = &apos;&lt;%= theme.valine.notify %&gt;&apos; == true ? true : false;</span><br><span class="line">   var verify = &apos;&lt;%= theme.valine.verify %&gt;&apos; == true ? true : false;</span><br><span class="line">    window.onload = function() &#123;</span><br><span class="line">        new Valine(&#123;</span><br><span class="line">            el: &apos;.comment&apos;,</span><br><span class="line">            notify: notify,</span><br><span class="line">            verify: verify,</span><br><span class="line">            app_id: &quot;&lt;%= theme.valine.appid %&gt;&quot;,</span><br><span class="line">            app_key: &quot;&lt;%= theme.valine.appkey %&gt;&quot;,</span><br><span class="line">            placeholder: &quot;&lt;%= theme.valine.placeholder %&gt;&quot;,</span><br><span class="line">            avatar:&quot;&lt;%= theme.valine.avatar %&gt;&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>容易出现的问题及解决办法</li></ol><ul><li>你好，我在博客中开启了valine，但是有一篇文章下评论块出现在了文章中间使我不得不关闭了评论块，对此毫无办法…<br><br>可以尝试性的将<code>layout/_partial/post/valine.ejs</code>文件中的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Valine(&#123;</span><br><span class="line">    el: &apos;.comment&apos;,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Valine(&#123;</span><br><span class="line">    el: &apos;#vcomment&apos;,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>不过我还有一个问题，为什么我在本地hexo server的页面上加载评论就很快，而在域名上评论块就加载的很慢甚至经常加载不出来…<br><br>可以尝试性的将<code>layout/_partial/post/valine.ejs</code>中的</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">        el: <span class="string">'#vcomment'</span>,</span><br><span class="line">        notify: notify,</span><br><span class="line">        verify: verify,</span><br><span class="line">        app_id: <span class="string">"&lt;%= theme.valine.appid %&gt;"</span>,</span><br><span class="line">        app_key: <span class="string">"&lt;%= theme.valine.appkey %&gt;"</span>,</span><br><span class="line">        placeholder: <span class="string">"&lt;%= theme.valine.placeholder %&gt;"</span>,</span><br><span class="line">        avatar:<span class="string">"&lt;%= theme.valine.avatar %&gt;"</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Valine(&#123;</span><br><span class="line">    el: <span class="string">'#vcomment'</span>,</span><br><span class="line">    notify: notify,</span><br><span class="line">    verify: verify,</span><br><span class="line">    app_id: <span class="string">"&lt;%= theme.valine.appid %&gt;"</span>,</span><br><span class="line">    app_key: <span class="string">"&lt;%= theme.valine.appkey %&gt;"</span>,</span><br><span class="line">    placeholder: <span class="string">"&lt;%= theme.valine.placeholder %&gt;"</span>,</span><br><span class="line">    avatar:<span class="string">"&lt;%= theme.valine.avatar %&gt;"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>请问各位，我的评论系统也在主页出现了，确定代码位置什么的都没放错，实在不知道问题出在哪里<br></li></ul><p>把article.ejs里的Valine评论系统代码往上移动一些，<br><br>移到&lt;% if (!index &amp;&amp; post.comments){ %&gt;下面试试</p><p><img src="/assets/blogImg/hexo-comment-system-1.png" alt="Picture by Matt Carlson"></p><h2 id="如果你实在不会-我帮你啊"><a href="#如果你实在不会-我帮你啊" class="headerlink" title="- 如果你实在不会  我帮你啊 ~~~"></a>- 如果你实在不会  我帮你啊 ~~~</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yilia 主题的hexo博客 安装留言评论系统之valine&lt;/p&gt;
&lt;p&gt;安装完yilia主题的hexo博客,自带的留言评论系统貌似都不能用，然后找到了&lt;a href=&quot;https://valine.js.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;valine&lt;/a&gt;和&lt;a href=&quot;http://www.disqus.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;disqus&lt;/a&gt;（需要翻墙）&lt;/p&gt;
&lt;h5 id=&quot;首先打开valine-官网：https-valine-js-org&quot;&gt;&lt;a href=&quot;#首先打开valine-官网：https-valine-js-org&quot; class=&quot;headerlink&quot; title=&quot;首先打开valine 官网：https://valine.js.org/&quot;&gt;&lt;/a&gt;首先打开valine 官网：&lt;a href=&quot;https://valine.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://valine.js.org/&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;valine的介绍是：【是一款基于Leancloud的快速、简洁且高效的无后端评论系统。】&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://hexo.dulada.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hexo.dulada.com/20190216.html"/>
    <id>https://hexo.dulada.com/20190216.html</id>
    <published>2019-02-16T12:00:00.000Z</published>
    <updated>2019-02-18T14:07:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个博客，终于还是安排上了…</p><p>间歇性拿起放下，折腾一周…</p><p>一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。当然这个农民确切来说是个码农。</p><p>感谢Litten提供的yilia主题。我很喜欢这种色调。</p><p>然后之前各处的笔记都可以转移过来了，有道云居多，在此感谢有道云笔记~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个博客，终于还是安排上了…&lt;/p&gt;
&lt;p&gt;间歇性拿起放下，折腾一周…&lt;/p&gt;
&lt;p&gt;一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。当然这个农民确切来说是个码农。&lt;/p&gt;
&lt;p&gt;感谢Litt
      
    
    </summary>
    
    
      <category term="杂谈" scheme="https://hexo.dulada.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Vue前后端分离项目3</title>
    <link href="https://hexo.dulada.com/Vue-node-3.html"/>
    <id>https://hexo.dulada.com/Vue-node-3.html</id>
    <published>2018-10-28T15:23:38.000Z</published>
    <updated>2019-07-23T07:09:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第3章-权限管理"><a href="#第3章-权限管理" class="headerlink" title="第3章 权限管理"></a>第3章 权限管理</h2><h3 id="3-1-权限列表"><a href="#3-1-权限列表" class="headerlink" title="3.1 权限列表"></a>3.1 权限列表</h3><p>添加路由及组件文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Rights <span class="keyword">from</span> <span class="string">'@/components/rights/rights'</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">'rights'</span>,<span class="attr">name</span>:<span class="string">'rights'</span>,<span class="attr">component</span>:Rights&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">    height=&quot;850&quot;</span><br><span class="line">    ref=&quot;singleTable&quot;</span><br><span class="line">    :data=&quot;tableData&quot;</span><br><span class="line">    highlight-current-row</span><br><span class="line">    style=&quot;width: 100%&quot;&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      type=&quot;index&quot;</span><br><span class="line">      width=&quot;50&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      property=&quot;authName&quot;</span><br><span class="line">      label=&quot;权限名称&quot;</span><br><span class="line">      width=&quot;120&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      property=&quot;path&quot;</span><br><span class="line">      label=&quot;路径&quot;</span><br><span class="line">      width=&quot;120&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column  property=&quot;一级&quot;  label=&quot;层级&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">  &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableData:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.getlist();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    getlist()&#123;</span><br><span class="line">      this.$myHttp(&#123;</span><br><span class="line">        url:&apos;rights/list&apos;,</span><br><span class="line">        method:&apos;get&apos;,</span><br><span class="line">        headers: &#123; Authorization: window.localStorage.getItem(&quot;token&quot;) &#125;</span><br><span class="line">      &#125;).then(backs=&gt;&#123;</span><br><span class="line">        // console.log(backs);</span><br><span class="line">        this.tableData = backs.data.data;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.el-main &#123;</span><br><span class="line">  line-height: 30px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只要在`el-table`元素中定义了`height=500`属性，即可实现固定表头的表格，而不需要额外的代码。</span><br></pre></td></tr></table></figure><p>修改层级展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column  property=&quot;level&quot;  label=&quot;层级&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;span v-if=&quot;scope.row.level===&apos;0&apos;&quot;&gt;一级&lt;/span&gt;</span><br><span class="line">        &lt;span v-else-if=&quot;scope.row.level===&apos;1&apos;&quot;&gt;二级&lt;/span&gt;</span><br><span class="line">        &lt;span v-if=&quot;scope.row.level===&apos;2&apos;&quot;&gt;三级&lt;/span&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-角色列表"><a href="#3-2-角色列表" class="headerlink" title="3.2 角色列表"></a>3.2 角色列表</h3><p>添加路由及组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Roles <span class="keyword">from</span> <span class="string">'@/components/roles/roles'</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">path</span>:<span class="string">'roles'</span>,<span class="attr">name</span>:<span class="string">'roles'</span>,<span class="attr">component</span>:Roles&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-table :data=&quot;tableData5&quot;  style=&quot;width: 100%&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 折叠内容 --&gt;</span><br><span class="line">    &lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;props&quot;&gt;</span><br><span class="line">        &lt;el-form label-position=&quot;left&quot; inline class=&quot;demo-table-expand&quot;&gt;</span><br><span class="line">          &lt;el-form-item label=&quot;商品名称&quot;&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; props.row.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">          &lt;el-form-item label=&quot;所属店铺&quot;&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; props.row.shop &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-form&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 表头及折叠按钮 --&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      label=&quot;角色名称&quot;</span><br><span class="line">      prop=&quot;id&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      label=&quot;角色描述&quot;</span><br><span class="line">      prop=&quot;name&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      label=&quot;操作&quot;</span><br><span class="line">      prop=&quot;desc&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/el-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        tableData5: [&#123;</span><br><span class="line">          id: &apos;12987122&apos;,</span><br><span class="line">          name: &apos;好滋好味鸡蛋仔&apos;,</span><br><span class="line">          category: &apos;江浙小吃、小吃零食&apos;,</span><br><span class="line">          desc: &apos;荷兰优质淡奶，奶香浓而不腻&apos;,</span><br><span class="line">          address: &apos;上海市普陀区真北路&apos;,</span><br><span class="line">          shop: &apos;王小虎夫妻店&apos;,</span><br><span class="line">          shopId: &apos;10333&apos;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: &apos;12987123&apos;,</span><br><span class="line">          name: &apos;好滋好味鸡蛋仔&apos;,</span><br><span class="line">          category: &apos;江浙小吃、小吃零食&apos;,</span><br><span class="line">          desc: &apos;荷兰优质淡奶，奶香浓而不腻&apos;,</span><br><span class="line">          address: &apos;上海市普陀区真北路&apos;,</span><br><span class="line">          shop: &apos;王小虎夫妻店&apos;,</span><br><span class="line">          shopId: &apos;10333&apos;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .demo-table-expand &#123;</span><br><span class="line">    font-size: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  .demo-table-expand label &#123;</span><br><span class="line">    width: 90px;</span><br><span class="line">    color: #99a9bf;</span><br><span class="line">  &#125;</span><br><span class="line">  .demo-table-expand .el-form-item &#123;</span><br><span class="line">    margin-right: 0;</span><br><span class="line">    margin-bottom: 0;</span><br><span class="line">    width: 50%;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-main&#123;</span><br><span class="line">    line-height:20px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 表头及折叠按钮 --&gt;</span><br><span class="line">&lt;el-table-column</span><br><span class="line">                 label=&quot;角色名称&quot;</span><br><span class="line">                 prop=&quot;roleName&quot;&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br><span class="line">&lt;el-table-column</span><br><span class="line">                 label=&quot;角色描述&quot;</span><br><span class="line">                 prop=&quot;roleDesc&quot;&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br><span class="line">&lt;el-table-column</span><br><span class="line">                 label=&quot;操作&quot;</span><br><span class="line">                 prop=&quot;desc&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;success&quot; icon=&quot;el-icon-check&quot; size=&quot;mini&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    roleList: []</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">  <span class="keyword">this</span>.getrolelist();</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  getrolelist() &#123;</span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">      url: <span class="string">"roles"</span>,</span><br><span class="line">      method: <span class="string">"get"</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">back</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.roleList = back.data.data;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Tag 标签-&gt;可移除标签`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 折叠内容 --&gt;</span><br><span class="line">&lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;props&quot;&gt;</span><br><span class="line">&lt;el-tag closable&gt;可移除&lt;/el-tag&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分析角色数据，`children` 为上级角色中的子级角色；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 折叠内容 --&gt;</span><br><span class="line">&lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">&#123;&#123;scope.row.children&#125;&#125;</span><br><span class="line">&lt;!-- &lt;el-tag closable&gt;&#123;&#123;scope.row.children&#125;&#125; &lt;/el-tag&gt; --&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/Snipaste_2018-10-27_14-52-21.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 折叠内容 --&gt;</span><br><span class="line">    &lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;!-- Layout 布局 --&gt;</span><br><span class="line">        &lt;el-row&gt;</span><br><span class="line">          &lt;!-- 一级区域 --&gt;</span><br><span class="line">          &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;!-- 一级内容展示 --&gt;</span><br><span class="line">            &lt;el-tag closable&gt;&#123;&#123;scope.row.children[1].authName&#125;&#125; &lt;/el-tag&gt; &gt;</span><br><span class="line">          &lt;/el-col&gt;</span><br><span class="line">          </span><br><span class="line">          &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">            &lt;!-- 二级区域 --&gt;</span><br><span class="line">            &lt;el-row&gt;</span><br><span class="line">              &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                  &lt;!-- 二级内容 --&gt;</span><br><span class="line">                  &lt;el-tag closable type=&quot;success&quot;&gt;&#123;&#123;scope.row.children[0].children[0].authName&#125;&#125; &lt;/el-tag&gt; &gt;</span><br><span class="line">              &lt;/el-col&gt;</span><br><span class="line">              &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">                  &lt;!-- 三级内容 --&gt;</span><br><span class="line">                  &lt;el-tag closable type=&quot;warning&quot;&gt;&#123;&#123;scope.row.children[1].children[0].children[0].authName&#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                  &lt;el-tag closable type=&quot;warning&quot;&gt;&#123;&#123;scope.row.children[1].children[0].children[1].authName&#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">                  &lt;el-tag closable type=&quot;warning&quot;&gt;&#123;&#123;scope.row.children[1].children[0].children[2].authName&#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">              &lt;/el-col&gt;</span><br><span class="line">            &lt;/el-row&gt;</span><br><span class="line">          &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><p>循环遍历所有层级角色</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">  &lt;!-- 折叠内容 --&gt;</span><br><span class="line">    &lt;el-table-column type=&quot;expand&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;!-- Layout 布局 --&gt;</span><br><span class="line">        &lt;el-row class=&quot;rowmargin&quot; v-for=&quot;item1 in scope.row.children&quot; :key=&quot;item1.id&quot;&gt;</span><br><span class="line">          &lt;!-- 一级区域 --&gt;</span><br><span class="line">          &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;!-- 一级内容展示 --&gt;</span><br><span class="line">            &lt;el-tag closable&gt;&#123;&#123;item1.authName&#125;&#125; &lt;/el-tag&gt; &gt;</span><br><span class="line">          &lt;/el-col&gt;</span><br><span class="line">          </span><br><span class="line">          &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">            &lt;!-- 二级区域 --&gt;</span><br><span class="line">            &lt;el-row  v-for=&quot;item2 in item1.children&quot; :key=&quot;item2.id&quot;&gt;</span><br><span class="line">              &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">                  &lt;!-- 二级内容 --&gt;</span><br><span class="line">                  &lt;el-tag closable type=&quot;success&quot;&gt;&#123;&#123;item2.authName&#125;&#125; &lt;/el-tag&gt; &gt;</span><br><span class="line">              &lt;/el-col&gt;</span><br><span class="line">              &lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">                  &lt;!-- 三级内容 --&gt;</span><br><span class="line">                  &lt;el-tag v-for=&quot;item3 in item2.children&quot; :key=&quot;item3.id&quot; closable type=&quot;warning&quot;&gt;&#123;&#123;item3.authName&#125;&#125; &lt;/el-tag&gt;</span><br><span class="line">              &lt;/el-col&gt;</span><br><span class="line">            &lt;/el-row&gt;</span><br><span class="line">          &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 判断没有权限 --&gt;</span><br><span class="line">    &lt;el-row v-if=&quot;scope.row.children.length==0&quot;&gt;</span><br><span class="line">          &lt;template&gt;&lt;el-tag type=&quot;danger&quot;&gt;木有权限&lt;/el-tag&gt;&lt;/template&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">.el-tag&#123;</span><br><span class="line">  margin-top: 10px;</span><br><span class="line">  margin-right:5px; </span><br><span class="line">&#125;</span><br><span class="line">&lt;style&gt;</span><br></pre></td></tr></table></figure><h3 id="3-3-删除角色权限"><a href="#3-3-删除角色权限" class="headerlink" title="3.3 删除角色权限"></a>3.3 删除角色权限</h3><p>绑定close事件</p><p>页面元素删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 三级内容 --&gt;</span><br><span class="line">&lt;el-tag @close=&quot;closeTag(item2,key3)&quot;  v-for=&quot;(item3,key3) in item2.children&quot; :key=&quot;item3.id&quot; closable type=&quot;warning&quot;&gt;&#123;&#123;item3.authName&#125;&#125; &lt;/el-tag&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除角色权限</span></span><br><span class="line">closeTag(item,key)&#123;</span><br><span class="line">    <span class="comment">// 数组引用传递，直接删除即可</span></span><br><span class="line">    <span class="comment">// console.log(item,key)</span></span><br><span class="line">    item.children.splice(key,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-col :span=&quot;18&quot;&gt;</span><br><span class="line">&lt;!-- 三级内容 --&gt;</span><br><span class="line">&lt;el-tag @close=&quot;closeTag(item2,key3,scope.row.id,item3.id)&quot;  v-for=&quot;(item3,key3) in item2.children&quot; :key=&quot;item3.id&quot; closable type=&quot;warning&quot;&gt;&#123;&#123;item3.authName&#125;&#125; &lt;/el-tag&gt;</span><br><span class="line">&lt;/el-col&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除角色权限</span></span><br><span class="line">closeTag(item,key,roleId,rightId)&#123;</span><br><span class="line">    <span class="comment">// item 要删除元素所在父级数组</span></span><br><span class="line">    <span class="comment">// key 要删除元素所在父级数组下标</span></span><br><span class="line">    item.children.splice(key,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// roleid 角色ID，rightId权限ID</span></span><br><span class="line">    <span class="comment">// console.log(roleId,rightId);</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        url:<span class="string">`roles/<span class="subst">$&#123;roleId&#125;</span>/rights/<span class="subst">$&#123;rightId&#125;</span>`</span>,</span><br><span class="line">        method:<span class="string">'delete'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">back</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;meta&#125;  = back.data;</span><br><span class="line">        <span class="comment">// console.log(meta);</span></span><br><span class="line">        <span class="keyword">if</span>(meta.status == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="attr">message</span>:meta.msg,<span class="attr">type</span>:<span class="string">'success'</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-修改角色权限"><a href="#3-4-修改角色权限" class="headerlink" title="3.4 修改角色权限"></a>3.4 修改角色权限</h3><p>展示面板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;success&quot; icon=&quot;el-icon-check&quot; size=&quot;mini&quot; @click=&quot;rightsShow&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修改角色授权面板 --&gt;</span><br><span class="line">&lt;el-dialog title=&quot;修改角色权限&quot; :visible.sync=&quot;isrightsShow&quot;&gt;</span><br><span class="line">    &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-tree show-checkbox=&quot;true&quot; :data=&quot;rightsList&quot; :props=&quot;defaultProps&quot; &gt;&lt;/el-tree&gt;</span><br><span class="line">        &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">        &lt;el-button @click=&quot;isrightsShow = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;rightsPut&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 所有权限列表</span></span><br><span class="line">    rightsList:[],</span><br><span class="line">    <span class="comment">// 设置展示内容</span></span><br><span class="line">    defaultProps: &#123;</span><br><span class="line">        children: <span class="string">'children'</span>,</span><br><span class="line">        label: <span class="string">'authName'</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 展示修改角色权限面板</span></span><br><span class="line">rightsShow() &#123;</span><br><span class="line">    <span class="comment">// 获取所有角色权限</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        url:<span class="string">'rights/tree'</span>,</span><br><span class="line">        method:<span class="string">'get'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">back</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;data,meta&#125; = back.data;</span><br><span class="line">        <span class="keyword">this</span>.rightsList= data;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.isrightsShow = <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>选中角色拥有的权限：</p><p>在点击按钮式，将所有角色的所有信息传入展示面板事件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button @click=&quot;rightsShow(scope.row)&quot; type=&quot;success&quot; icon=&quot;el-icon-check&quot; size=&quot;mini&quot; circle&gt;&lt;/el-button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修改角色授权面板 --&gt;</span><br><span class="line">&lt;el-dialog title=&quot;修改角色权限&quot; :visible.sync=&quot;isrightsShow&quot;&gt;</span><br><span class="line">  &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">default-expand-all 默认展开所有节点</span><br><span class="line">      node-key=&quot;id&quot; 将id设置为节点的唯一主键</span><br><span class="line">      :default-checked-keys=[] 被选中主键的数组</span><br><span class="line">      :props=&quot;defaultProps&quot; 设置显示的内容</span><br><span class="line">show-checkbox 节点可被选中</span><br><span class="line">      --&gt;</span><br><span class="line">    &lt;el-tree </span><br><span class="line">        default-expand-all</span><br><span class="line">        node-key=&quot;id&quot;  </span><br><span class="line">        :default-checked-keys=&quot;defaultChecked&quot;</span><br><span class="line">        show-checkbox</span><br><span class="line">        :data=&quot;rightsList&quot; </span><br><span class="line">        :props=&quot;defaultProps&quot; &gt;&lt;/el-tree&gt;</span><br><span class="line">    &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">    &lt;el-button @click=&quot;isrightsShow = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;rightsPut&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// 所有权限列表</span></span><br><span class="line">      rightsList: [],</span><br><span class="line">      <span class="comment">// 设置展示内容</span></span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: <span class="string">"children"</span>,</span><br><span class="line">        label: <span class="string">"authName"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 默认选中的节点数组</span></span><br><span class="line">      defaultChecked: [],</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 控制角色权限面板</span></span><br><span class="line">      isrightsShow: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 所有角色数据列表</span></span><br><span class="line">      roleList: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,  </span><br><span class="line"></span><br><span class="line">…… </span><br><span class="line"></span><br><span class="line"><span class="comment">// 展示修改角色权限面板</span></span><br><span class="line">      rightsShow(row) &#123;</span><br><span class="line">          <span class="comment">// 获取所有角色权限</span></span><br><span class="line">          <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">              url: <span class="string">"rights/tree"</span>,</span><br><span class="line">              method: <span class="string">"get"</span></span><br><span class="line">          &#125;).then(<span class="function"><span class="params">back</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> &#123; data, meta &#125; = back.data;</span><br><span class="line">              <span class="comment">// 显示所有权限</span></span><br><span class="line">              <span class="keyword">this</span>.rightsList = data;</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 遍历row,获取当前角色选中的所有权限，写入数组</span></span><br><span class="line">          <span class="keyword">this</span>.defaultChecked = [];</span><br><span class="line">          <span class="comment">// 在遍历赋值前，先清空数据，以免受其他数据影响</span></span><br><span class="line">          <span class="keyword">var</span> rr = row.children;</span><br><span class="line">          rr.forEach(<span class="function"><span class="params">item1</span> =&gt;</span> &#123;</span><br><span class="line">              item1.children.forEach(<span class="function"><span class="params">item2</span>=&gt;</span>&#123;</span><br><span class="line">                  item2.children.forEach(<span class="function"><span class="params">item3</span>=&gt;</span>&#123;</span><br><span class="line">                      <span class="comment">// 只获取第三季选中即可</span></span><br><span class="line">                      <span class="keyword">this</span>.defaultChecked.push(item3.id);</span><br><span class="line">                  &#125;)</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.defaultChecked);</span><br><span class="line">          <span class="comment">// 控制显示窗口</span></span><br><span class="line">          <span class="keyword">this</span>.isrightsShow = <span class="literal">true</span>;</span><br><span class="line">      &#125;,</span><br></pre></td></tr></table></figure><p>提交数据入库：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提交修改角色权限</span></span><br><span class="line">rightsPut() &#123;</span><br><span class="line">  <span class="comment">// 在树形控件 中添加 ref="tree" 的属性，在此使用</span></span><br><span class="line">  <span class="comment">// elUI 中提供两个方法getCheckedKeys、getHalfCheckedKeys</span></span><br><span class="line">  <span class="comment">// 获取已选中的节点key </span></span><br><span class="line">  <span class="keyword">var</span> arr1 = <span class="keyword">this</span>.$refs.tree.getCheckedKeys();</span><br><span class="line">  <span class="keyword">var</span> arr2 = <span class="keyword">this</span>.$refs.tree.getHalfCheckedKeys();</span><br><span class="line">  <span class="comment">// concat() 合并两个数组的元素</span></span><br><span class="line">  <span class="comment">// join() 将数组的值以逗号隔开转为字符串</span></span><br><span class="line">  <span class="keyword">var</span> checkedKeys = arr1.concat(arr2).join();</span><br><span class="line">  <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">    <span class="comment">// 点击打开窗口是，保存角色id,在此获取使用</span></span><br><span class="line">    url:<span class="string">`roles/<span class="subst">$&#123;<span class="keyword">this</span>.roleId&#125;</span>/rights`</span>,</span><br><span class="line">    method:<span class="string">'post'</span>,</span><br><span class="line">    data:&#123;<span class="attr">rids</span>:checkedKeys&#125;</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">back</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123;data,meta&#125; = back.data;</span><br><span class="line">    <span class="keyword">if</span>(meta.status == <span class="number">200</span>)&#123;</span><br><span class="line">      <span class="keyword">this</span>.isrightsShow = <span class="literal">false</span>; <span class="comment">// 关闭窗口</span></span><br><span class="line">      <span class="keyword">this</span>.getrolelist(); <span class="comment">// 刷新数据</span></span><br><span class="line">      <span class="keyword">this</span>.$message(&#123;<span class="attr">message</span>:meta.msg,<span class="attr">type</span>:<span class="string">'success'</span>&#125;); <span class="comment">// 提示成功</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="3-5-权限限制"><a href="#3-5-权限限制" class="headerlink" title="3.5 权限限制"></a>3.5 权限限制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对角色分配了权限后，我们并没有做限制，其实接口文档中`左侧菜单权限` 已经提供了相应的接口：</span><br><span class="line"></span><br><span class="line">`src/components/home/home.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu </span><br><span class="line">        unique-opened</span><br><span class="line">        :router=&quot;true&quot;</span><br><span class="line">        class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">        &gt;</span><br><span class="line">    &lt;el-submenu </span><br><span class="line">                v-for=&quot;item in menusList&quot; </span><br><span class="line">                :key=&quot;item.id&quot; </span><br><span class="line">                :index=&quot;item.id.toString()&quot; &gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;el-icon-location&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123;item.authName&#125;&#125; &#123;&#123;item.id&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;el-menu-item </span><br><span class="line">                      v-for=&quot;item2 in item.children&quot; </span><br><span class="line">                      :key=&quot;item2.id&quot;  </span><br><span class="line">                      :index=&quot;item2.path&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &#123;&#123;item2.authName&#125;&#125;  &#123;&#123;item2.path&#125;&#125;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;/el-submenu&gt;</span><br><span class="line">&lt;/el-menu&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // 使用生命周期的钩子函数，判断token</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 获取token</span><br><span class="line">    var token = window.localStorage.getItem(&quot;token&quot;);</span><br><span class="line">    if (!token) &#123;</span><br><span class="line">      // 错误提示</span><br><span class="line">      this.$message.error(&quot;请登录&quot;);</span><br><span class="line">      // 跳转到登录页面</span><br><span class="line">      this.$router.push(&#123; name: &quot;Login&quot; &#125;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      // 登录后，获取左侧菜单权限</span><br><span class="line">      this.$myHttp(&#123;</span><br><span class="line">        url:&apos;menus&apos;,</span><br><span class="line">        method:&apos;get&apos;,</span><br><span class="line">      &#125;).then(back=&gt;&#123;</span><br><span class="line">        let &#123;data,meta&#125; = back.data;</span><br><span class="line">        if(meta.status == 200)&#123;</span><br><span class="line">          console.log(data);</span><br><span class="line">          this.menusList = data</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      menusList:[],</span><br><span class="line">      msg: &quot;we&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    loginOut()&#123;</span><br><span class="line">      window.localStorage.removeItem(&apos;token&apos;)</span><br><span class="line">      this.$message(&#123;</span><br><span class="line">              message: &quot;您已经退出，继续操作请重新登录&quot;,</span><br><span class="line">              type: &quot;success&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">      this.$router.push(&#123; name: &quot;Login&quot; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-6-导航守卫"><a href="#3-6-导航守卫" class="headerlink" title="3.6 导航守卫"></a>3.6 导航守卫</h3><p>导航守卫: <a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html" target="_blank" rel="noopener">https://router.vuejs.org/zh/guide/advanced/navigation-guards.html</a></p><p><img src="/assets/blogImg/Snipaste_2018-10-27_22-15-01.png" alt=""></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> Router(&#123;……&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置路由的导航守卫</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 如果访问登录的路由地址，放过</span></span><br><span class="line">  <span class="keyword">if</span> (to.name === <span class="string">'Login'</span>) &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 如果请求的不是登录页面，验证token</span></span><br><span class="line">    <span class="comment">// 1. 获取本地存储中的token</span></span><br><span class="line">    <span class="keyword">const</span> token = localStorage.getItem(<span class="string">'token'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">      <span class="comment">// 2. 如果没有token，跳转到登录</span></span><br><span class="line">      next(&#123;</span><br><span class="line">        name: <span class="string">'Login'</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 3. 如果有token，继续往下执行</span></span><br><span class="line">      next();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h2 id="第99章-项目打包及加载优化"><a href="#第99章-项目打包及加载优化" class="headerlink" title="第99章 项目打包及加载优化"></a>第99章 项目打包及加载优化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打包命令：`npm run build`</span><br></pre></td></tr></table></figure><p>打包完成后，直接将dist文件夹内容复制到服务器根目录即可；</p><p><img src="/assets/blogImg/Snipaste_2018-10-27_11-43-51.png" alt=""></p><p>我们的项目是很多组件组成的页面，但是，每次发送请求不管请求的是哪个路由的那个组件，很明显的都会将所有内容一次性全部加载出来，影响网站加载速度；如果我们可以在用户请求不同路由时，根据请求加载不同的页面，就会很大程度上提高页面的加载速度；</p><p>路由懒加载： <a href="https://router.vuejs.org/zh/guide/advanced/lazy-loading.html" target="_blank" rel="noopener">https://router.vuejs.org/zh/guide/advanced/lazy-loading.html</a></p><p>路由懒加载的工作就是在打包时，将路由文件分离出来，在请求时，需要哪个路由，再去请求相关文件；</p><p>用法：将路由引入的组件分别打包到不同的 js 文件；</p><p><img src="/assets/blogImg/Snipaste_2018-10-27_11-02-37.png" alt=""></p><p>打包完成后，很明显的在 JS 文件夹中多了一个js文件；</p><p>然后我们可以将所有的组件全部改为路由懒加载模式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Login = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/login/login'</span>);</span><br><span class="line"><span class="keyword">const</span> Home = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/home/home'</span>);</span><br><span class="line"><span class="keyword">const</span> UserList = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/userlist/user-list'</span>);</span><br><span class="line"><span class="keyword">const</span> RoleList = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/rolelist/role-list'</span>);</span><br><span class="line"><span class="keyword">const</span> RightsList = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/rightslist/rights-list'</span>);</span><br><span class="line"><span class="keyword">const</span> GoodsList = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/goodslist/goods-list'</span>);</span><br><span class="line"><span class="keyword">const</span> GoodsCategories = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/goodscategories/goods-categories'</span>);</span><br><span class="line"><span class="keyword">const</span> GoodsAdd = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/goodsadd/goods-add'</span>);</span><br><span class="line"><span class="keyword">const</span> Report = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/report/report'</span>);</span><br><span class="line"><span class="keyword">const</span> Order = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/orders/orders'</span>);</span><br><span class="line"><span class="keyword">const</span> Params = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/components/params/params'</span>);</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/Snipaste_2018-10-27_11-44-17.png" alt=""></p><p>但这是不够的，我们知道，很多组件都是可以用 CDN 加载的；</p><p>1：找到 cdn 地址，直接在index.html 中加入地址，注意，cdn 引入版本要和项目中的版本保持一致；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/vue/2.5.2/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2：修改 webpack 配置文件  <a href="https://www.webpackjs.com/configuration/externals/" target="_blank" rel="noopener">https://www.webpackjs.com/configuration/externals/</a></p><p><img src="/assets/blogImg/Snipaste_2018-10-27_11-33-20.png" alt=""></p><p><img src="/assets/blogImg/Snipaste_2018-10-27_11-36-38.png" alt=""></p><p><img src="/assets/blogImg/Snipaste_2018-10-27_13-11-09.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第3章-权限管理&quot;&gt;&lt;a href=&quot;#第3章-权限管理&quot; class=&quot;headerlink&quot; title=&quot;第3章 权限管理&quot;&gt;&lt;/a&gt;第3章 权限管理&lt;/h2&gt;&lt;h3 id=&quot;3-1-权限列表&quot;&gt;&lt;a href=&quot;#3-1-权限列表&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://hexo.dulada.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue前后端分离项目2</title>
    <link href="https://hexo.dulada.com/Vue-node-2.html"/>
    <id>https://hexo.dulada.com/Vue-node-2.html</id>
    <published>2018-10-27T11:03:30.000Z</published>
    <updated>2019-07-23T07:10:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2章-用户管理"><a href="#第2章-用户管理" class="headerlink" title="第2章 用户管理"></a>第2章 用户管理</h2><h3 id="2-1-路由及组件"><a href="#2-1-路由及组件" class="headerlink" title="2.1 路由及组件"></a>2.1 路由及组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`/src/components/home/home.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-menu-item index=&quot;users&quot;&gt;</span><br><span class="line">     &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">     用户列表</span><br><span class="line">&lt;/el-menu-item&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`src/router/index.js`</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Users <span class="keyword">from</span> <span class="string">'@/components/users/users'</span></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">children:[</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">'index'</span>,<span class="attr">name</span>:<span class="string">'index'</span>,<span class="attr">component</span>:Index&#125;,</span><br><span class="line">    &#123;<span class="attr">path</span>:<span class="string">'users'</span>,<span class="attr">name</span>:<span class="string">'users'</span>,<span class="attr">component</span>:Users&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">`src/components/users/users.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;展示用户列表表格&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-面包屑导航及搜索框"><a href="#2-2-面包屑导航及搜索框" class="headerlink" title="2.2 面包屑导航及搜索框"></a>2.2 面包屑导航及搜索框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`src/components/users/users.vue`   `Card 卡片`     `Breadcrumb 面包屑`  `Input 输入框`  ` Button 按钮`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;!-- 面包鞋 --&gt;</span><br><span class="line">  &lt;el-card&gt;</span><br><span class="line">  &lt;el-breadcrumb separator-class=&quot;el-icon-arrow-right&quot;&gt;</span><br><span class="line">    &lt;el-breadcrumb-item :to=&quot;&#123; path: &apos;/index&apos; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">    &lt;el-breadcrumb-item&gt;用户管理&lt;/el-breadcrumb-item&gt;</span><br><span class="line">    &lt;el-breadcrumb-item&gt;用户列表&lt;/el-breadcrumb-item&gt;</span><br><span class="line">  &lt;/el-breadcrumb&gt;</span><br><span class="line">&lt;/el-card&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">……</span><br><span class="line">&lt;/el-card&gt;</span><br><span class="line"></span><br><span class="line">&lt;el-row&gt;</span><br><span class="line">  &lt;el-col :span=&quot;6&quot; class=&quot;sou&quot;&gt;</span><br><span class="line">    &lt;el-input placeholder=&quot;请输入内容&quot; v-model=&quot;input5&quot; class=&quot;input-with-select&quot;&gt;</span><br><span class="line">      &lt;el-button slot=&quot;append&quot; icon=&quot;el-icon-search&quot;&gt;&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-input&gt;</span><br><span class="line">  &lt;/el-col&gt;</span><br><span class="line">  &lt;el-col :span=&quot;1&quot; class=&quot;sou&quot;&gt;</span><br><span class="line">      &lt;el-button type=&quot;success&quot; plain&gt;添加用户&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-col&gt;</span><br><span class="line">&lt;/el-row&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    // 不想看到报错</span><br><span class="line">    return&#123;input5:&apos;&apos;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.sou&#123;</span><br><span class="line">  line-height:30px</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-展示用户列表"><a href="#2-3-展示用户列表" class="headerlink" title="2.3 展示用户列表"></a>2.3 展示用户列表</h3><h4 id="2-3-4-组件展示"><a href="#2-3-4-组件展示" class="headerlink" title="2.3.4 组件展示"></a>2.3.4 组件展示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`src/components/users/users.vue`  `Table 表格-&gt;自定义索引`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 表格 自定义索引 --&gt;</span><br><span class="line">&lt;el-table</span><br><span class="line">    :data=&quot;tableData&quot;</span><br><span class="line">    style=&quot;width: 100% ;&quot;&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      type=&quot;index&quot;</span><br><span class="line">      :index=&quot;indexMethod&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      prop=&quot;date&quot;</span><br><span class="line">      label=&quot;日期&quot;</span><br><span class="line">      width=&quot;180&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      prop=&quot;name&quot;</span><br><span class="line">      label=&quot;姓名&quot;</span><br><span class="line">      width=&quot;180&quot;&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br><span class="line">  &lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      input5:&apos;&apos;,</span><br><span class="line">      tableData: [</span><br><span class="line">        &#123;</span><br><span class="line">          date: &quot;2016-05-03&quot;,</span><br><span class="line">          name: &quot;王小虎&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.sou &#123;</span><br><span class="line">  line-height: 30px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-main&#123;</span><br><span class="line">  line-height:30px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="2-3-5-获取数据"><a href="#2-3-5-获取数据" class="headerlink" title="2.3.5 获取数据"></a>2.3.5 获取数据</h4><blockquote><p>出登录接口，其他接口发送http请求，必须携带token值</p></blockquote><p>Axios : <a href="https://www.kancloud.cn/yunye/axios/234845" target="_blank" rel="noopener">https://www.kancloud.cn/yunye/axios/234845</a>  —&gt; 请求配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        input5:<span class="string">''</span>,<span class="comment">// 不想看到报错</span></span><br><span class="line">        <span class="comment">// 设置页码及条数</span></span><br><span class="line">        pagenum:<span class="number">1</span>,</span><br><span class="line">        pagesize:<span class="number">5</span>,</span><br><span class="line">        tableData: []</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 利用钩子函数，获取数据</span></span><br><span class="line">mounted() &#123;</span><br><span class="line">    <span class="comment">// 获取token</span></span><br><span class="line">    <span class="keyword">let</span> token = <span class="built_in">window</span>.localStorage.getItem(<span class="string">'token'</span>);</span><br><span class="line">    <span class="comment">// 通过配置选项发送请求</span></span><br><span class="line">    <span class="comment">// 携带token</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        <span class="comment">// 设置链接地址 es6新语法</span></span><br><span class="line">        url:<span class="string">`users?pagenum=<span class="subst">$&#123;<span class="keyword">this</span>.pagenum&#125;</span>&amp;pagesize=<span class="subst">$&#123;<span class="keyword">this</span>.pagesize&#125;</span>`</span>,</span><br><span class="line">        method:<span class="string">'get'</span>,</span><br><span class="line">        <span class="comment">// 配置token</span></span><br><span class="line">        headers: &#123;<span class="string">'Authorization'</span>: token&#125;</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 修改数据  展示页面</span></span><br><span class="line">        <span class="keyword">this</span>.tableData = res.data.data.users;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>修改组件参数，展示数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`&lt;el-table-column  prop=&quot;username&quot;  label=&quot;姓名&quot; &gt; &lt;/el-table-column&gt;`</span><br></pre></td></tr></table></figure></p><h4 id="2-3-6-操作按钮"><a href="#2-3-6-操作按钮" class="headerlink" title="2.3.6 操作按钮"></a>2.3.6 操作按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Button 按钮`  `Table 表格-&gt;自定义列模板`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column label=&quot;操作&quot;  width=&quot;210&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot;  plain&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-check&quot; size=&quot;mini&quot;  plain&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-delete&quot; size=&quot;mini&quot;  plain&gt;&lt;/el-button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><p>表格中加入按钮等元素时，需要使用 <code>template</code> 进行包裹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column label=&quot;用户状态&quot; width=&quot;210&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;el-switch </span><br><span class="line">                   v-model=&quot;value2&quot; </span><br><span class="line">                   active-color=&quot;#13ce66&quot; </span><br><span class="line">                   inactive-color=&quot;#ff4949&quot;&gt;</span><br><span class="line">          &lt;/el-switch&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><h4 id="2-3-7-状态显示"><a href="#2-3-7-状态显示" class="headerlink" title="2.3.7 状态显示"></a>2.3.7 状态显示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">而在`template` 标签中有一个 `slot-scope=&quot;scope&quot;` 属性，`scope` 的值就是本列中所有数据的值，参考： `Table 表格-&gt;固定列`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column label=&quot;用户状态&quot; width=&quot;210&quot;&gt;</span><br><span class="line">      &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;!-- 利用scope 中的值，争取显示用户状态 --&gt;</span><br><span class="line">        &lt;el-switch v-model=&quot;scope.row.mg_state&quot; active-color=&quot;#13ce66&quot;  inactive-color=&quot;#ff4949&quot;&gt;&lt;/el-switch&gt;</span><br><span class="line">        &lt;!-- 测试事件，查看 scope 数据 --&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot; @click=&quot;showScope(scope)&quot;&gt;显示scope&lt;/el-button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    <span class="comment">// 测试 方法 显示scope</span></span><br><span class="line">    showScope(scope)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(scope);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h4 id="2-3-8-分页展示"><a href="#2-3-8-分页展示" class="headerlink" title="2.3.8 分页展示"></a>2.3.8 分页展示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Pagination 分页-&gt;附加功能`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">  &lt;!-- 分页 --&gt;</span><br><span class="line">  &lt;!-- </span><br><span class="line">      current-page  当前页码数 </span><br><span class="line">      page-sizes  显示条数选项</span><br><span class="line">      page-size 当前每页条数</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;el-pagination    </span><br><span class="line">      @size-change=&quot;handleSizeChange&quot;</span><br><span class="line">      @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">      :current-page=&quot;pagenum&quot; </span><br><span class="line">      :page-sizes=&quot;[2, 20, 40]&quot;</span><br><span class="line">      :page-size=&quot;pagesize&quot;</span><br><span class="line">      layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">      :total=&quot;total&quot;&gt;</span><br><span class="line">    &lt;/el-pagination&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   ……</span><br><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      input5:&apos;&apos;,// 不想看到报错</span><br><span class="line">      </span><br><span class="line">      pagenum:1, //设置页码</span><br><span class="line">      pagesize:2, // 设置页条数</span><br><span class="line">      total:0,  //显示总条数</span><br><span class="line">      </span><br><span class="line">      tableData: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">      ……</span><br><span class="line">      ……</span><br><span class="line">     // 获取总条数 修改数据展示</span><br><span class="line">        this.total = res.data.data.total;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">但点击页码时，会触发 `size-change` 事件</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      input5: <span class="string">""</span>, <span class="comment">// 不想看到报错</span></span><br><span class="line">      pagenum: <span class="number">1</span>, <span class="comment">//设置页码</span></span><br><span class="line">      pagesize: <span class="number">2</span>, <span class="comment">// 设置页条数</span></span><br><span class="line">      total: <span class="number">0</span>, <span class="comment">//显示总条数</span></span><br><span class="line">      tableData: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 获取用户数据</span></span><br><span class="line">    getUserData() &#123;</span><br><span class="line">      <span class="comment">// 获取token</span></span><br><span class="line">      <span class="keyword">let</span> token = <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>);</span><br><span class="line">      <span class="comment">// 通过配置选项发送请求</span></span><br><span class="line">      <span class="comment">// 携带token</span></span><br><span class="line">      <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        <span class="comment">// 设置链接地址 es6新语法</span></span><br><span class="line">        url: <span class="string">`users?pagenum=<span class="subst">$&#123;<span class="keyword">this</span>.pagenum&#125;</span>&amp;pagesize=<span class="subst">$&#123;<span class="keyword">this</span>.pagesize&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">"get"</span>,</span><br><span class="line">        <span class="comment">// 配置token</span></span><br><span class="line">        headers: &#123; <span class="attr">Authorization</span>: token &#125;</span><br><span class="line">      &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 修改数据  展示页面</span></span><br><span class="line">        <span class="keyword">this</span>.tableData = res.data.data.users;</span><br><span class="line">        <span class="comment">// 获取总条数 修改数据展示</span></span><br><span class="line">        <span class="keyword">this</span>.total = res.data.data.total;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击页码触发</span></span><br><span class="line">    handleCurrentChange(pages) &#123;</span><br><span class="line">        <span class="comment">// console.log(pages);</span></span><br><span class="line">        <span class="comment">// 修改data数据，重新发送请求</span></span><br><span class="line">        <span class="keyword">this</span>.pagenum = pages;</span><br><span class="line">        <span class="keyword">this</span>.getUserData();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 改变显示条数时触发</span></span><br><span class="line">    handleSizeChange(numbers)&#123;</span><br><span class="line">      <span class="keyword">this</span>.pagesize = numbers;</span><br><span class="line">      <span class="keyword">this</span>.getUserData();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 利用钩子函数，获取数据</span></span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.getUserData();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-模糊搜索"><a href="#2-4-模糊搜索" class="headerlink" title="2.4 模糊搜索"></a>2.4 模糊搜索</h3><p>请求地址中加入 query 请求参数，获取条件结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input placeholder=&quot;请输入内容&quot; v-model=&quot;search&quot; class=&quot;input-with-select&quot;&gt;</span><br><span class="line">      &lt;el-button slot=&quot;append&quot; </span><br><span class="line">                 @click=&quot;searchUsers&quot; </span><br><span class="line">       icon=&quot;el-icon-search&quot;&gt;&lt;/el-button&gt;</span><br><span class="line">&lt;/el-input&gt;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      search: &quot;&quot;, // 搜索关键字</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">      </span><br><span class="line">      // 请求地址中加入关键字</span><br><span class="line">      url: `users?pagenum=$&#123;this.pagenum&#125;&amp;pagesize=$&#123;this.pagesize&#125;&amp;query=$&#123;this.search&#125;`,</span><br><span class="line">      </span><br><span class="line">          </span><br><span class="line">      // 点击搜索事件</span><br><span class="line">      searchUsers()&#123;</span><br><span class="line">          this.getUserData();</span><br><span class="line">      &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-5-切换用户状态"><a href="#2-5-切换用户状态" class="headerlink" title="2.5 切换用户状态"></a>2.5 切换用户状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 利用scope 中的值，争取显示用户状态 --&gt;</span><br><span class="line">&lt;!-- 组件自带change事件 --&gt;</span><br><span class="line">&lt;el-switch v-model=&quot;scope.row.mg_state&quot; @change=&quot;change(scope)&quot; active-color=&quot;#13ce66&quot;  inactive-color=&quot;#ff4949&quot;&gt;&lt;/el-switch&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Switch 开关 组件自带事件</span></span><br><span class="line">change(scope)&#123;</span><br><span class="line">    <span class="comment">// 接受本条全部信息</span></span><br><span class="line">    <span class="comment">// console.log(scope)</span></span><br><span class="line">    <span class="keyword">let</span> id = scope.row.id; <span class="comment">// 获取id</span></span><br><span class="line">    <span class="keyword">var</span> state = scope.row.mg_state; <span class="comment">// 获取修改后的状态</span></span><br><span class="line">    <span class="comment">// 请求接口</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp.put(<span class="string">`users/<span class="subst">$&#123;id&#125;</span>/state/<span class="subst">$&#123;state&#125;</span>`</span>)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 修改失败，将状态改为原始值</span></span><br><span class="line">        <span class="keyword">if</span>(!res.data.data)&#123;</span><br><span class="line">            <span class="keyword">this</span>.tableData[scope.$index].mg_state = !state;</span><br><span class="line">            <span class="keyword">this</span>.$message.error(<span class="string">"修改失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改失败是因为没有token:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Switch 开关 组件自带事件</span></span><br><span class="line">change(scope)&#123;</span><br><span class="line">    <span class="comment">// 接受本条全部信息</span></span><br><span class="line">    <span class="comment">// console.log(scope)</span></span><br><span class="line">    <span class="keyword">let</span> id = scope.row.id; <span class="comment">// 获取id</span></span><br><span class="line">    <span class="keyword">var</span> state = scope.row.mg_state; <span class="comment">// 获取修改后的状态</span></span><br><span class="line">    <span class="comment">// 请求接口</span></span><br><span class="line">    <span class="comment">// 需要使用配置参数请求，设置token</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        url:<span class="string">`users/<span class="subst">$&#123;id&#125;</span>/state/<span class="subst">$&#123;state&#125;</span>`</span>,</span><br><span class="line">        method:<span class="string">'put'</span>,</span><br><span class="line">        headers: &#123; <span class="attr">Authorization</span>: <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>) &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// 修改失败，将状态改为原始值</span></span><br><span class="line">        <span class="keyword">if</span>(!res.data.data)&#123;</span><br><span class="line">            <span class="keyword">this</span>.tableData[scope.$index].mg_state = !state;</span><br><span class="line">            <span class="keyword">this</span>.$message.error(<span class="string">"修改失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-删除用户"><a href="#2-6-删除用户" class="headerlink" title="2.6 删除用户"></a>2.6 删除用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`MessageBox 弹框-&gt;确认消息`</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件中绑定点击按钮</span></span><br><span class="line">&lt;el-button type=<span class="string">"primary"</span> icon=<span class="string">"el-icon-delete"</span> size=<span class="string">"mini"</span> @click=<span class="string">"deleteUser(scope.row.id)"</span> plain&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">// 删除用户</span></span><br><span class="line"><span class="xml">deleteUser(id) &#123;</span></span><br><span class="line"><span class="xml">    //   this.$myHttp(&#123;</span></span><br><span class="line"><span class="xml">    //     url: `users/$&#123;id&#125;`,</span></span><br><span class="line"><span class="xml">    //     method: "delete",</span></span><br><span class="line"><span class="xml">    //     headers: &#123; Authorization: window.localStorage.getItem("token") &#125;</span></span><br><span class="line"><span class="xml">    //   &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="xml">    //     this.getUserData();</span></span><br><span class="line"><span class="xml">    //     this.$message(&#123;</span></span><br><span class="line"><span class="xml">    //       message: "删除成功",</span></span><br><span class="line"><span class="xml">    //       type: "success"</span></span><br><span class="line"><span class="xml">    //     &#125;);</span></span><br><span class="line"><span class="xml">    //   &#125;);</span></span><br><span class="line"><span class="xml">    this.$confirm("此操作将永久删除该用户, 是否继续?", "提示", &#123;</span></span><br><span class="line"><span class="xml">        confirmButtonText: "确定",</span></span><br><span class="line"><span class="xml">        cancelButtonText: "取消",</span></span><br><span class="line"><span class="xml">        type: "warning"</span></span><br><span class="line"><span class="xml">    &#125;)</span></span><br><span class="line"><span class="xml">        .then(() =&gt; &#123;</span></span><br><span class="line"><span class="xml">        this.$myHttp(&#123;</span></span><br><span class="line"><span class="xml">            url: `users/$&#123;id&#125;`,</span></span><br><span class="line"><span class="xml">            method: "delete",</span></span><br><span class="line"><span class="xml">            headers: &#123; Authorization: window.localStorage.getItem("token") &#125;</span></span><br><span class="line"><span class="xml">        &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="xml">            this.getUserData();</span></span><br><span class="line"><span class="xml">            this.$message(&#123;</span></span><br><span class="line"><span class="xml">                message: "删除成功",</span></span><br><span class="line"><span class="xml">                type: "success"</span></span><br><span class="line"><span class="xml">            &#125;);</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;)</span></span><br><span class="line"><span class="xml">        .catch(() =&gt; &#123;</span></span><br><span class="line"><span class="xml">        this.$message(&#123;</span></span><br><span class="line"><span class="xml">            type: "info",</span></span><br><span class="line"><span class="xml">            message: "已取消删除"</span></span><br><span class="line"><span class="xml">        &#125;);</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-7-添加用户"><a href="#2-7-添加用户" class="headerlink" title="2.7 添加用户"></a>2.7 添加用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Dialog对话框-&gt;自定义内容-&gt;打开嵌套表单的 Dialog` ` Form 表单`</span><br></pre></td></tr></table></figure><p>表单弹窗：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-col :span=&quot;1&quot; class=&quot;sou&quot;&gt;</span><br><span class="line">  &lt;!-- 绑定按钮点击事件 直接将 dialogFormVisible值设置为true显示窗口  --&gt;</span><br><span class="line">  &lt;el-button type=&quot;success&quot; @click=&quot;dialogFormVisible = true&quot; &gt;添加用户&lt;/el-button&gt;</span><br><span class="line">  &lt;!-- </span><br><span class="line">    :visible.sync属性 控制窗口显示隐藏</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;el-dialog title=&quot;收货地址&quot; :visible.sync=&quot;dialogFormVisible&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;form&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;活动名称&quot; :label-width=&quot;formLabelWidth&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">      &lt;el-button @click=&quot;dialogFormVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; @click=&quot;dialogFormVisible = false&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/el-col&gt;</span><br><span class="line">&lt;/el-row&gt;</span><br></pre></td></tr></table></figure><p>修改表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-col :span=&quot;1&quot; class=&quot;sou&quot;&gt;</span><br><span class="line">  &lt;!-- 绑定按钮点击事件 直接将 dialogFormVisible值设置为true显示窗口  --&gt;</span><br><span class="line">  &lt;el-button type=&quot;success&quot; @click=&quot;dialogFormVisible = true&quot; &gt;添加用户&lt;/el-button&gt;</span><br><span class="line">  &lt;!-- </span><br><span class="line">    :visible.sync属性 控制窗口显示隐藏</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;el-dialog title=&quot;添加用户&quot; :visible.sync=&quot;dialogFormVisible&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;form&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;姓名&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.username&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;密码&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.password&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;邮箱&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.email&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;电话&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.mobile&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">      &lt;el-button @click=&quot;dialogFormVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">       &lt;!-- 修改点击事件，在数据入库成功后关闭窗口 --&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; @click=&quot;addUser&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/el-col&gt;</span><br></pre></td></tr></table></figure><p>添加数据及方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      dialogFormVisible: <span class="literal">false</span>,</span><br><span class="line">      form: &#123;</span><br><span class="line">        username: <span class="string">''</span>,</span><br><span class="line">        password:<span class="string">''</span>,</span><br><span class="line">        email:<span class="string">''</span>,</span><br><span class="line">        mobile:<span class="string">''</span></span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">             </span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">methods 方法</span><br><span class="line">        </span><br><span class="line"> <span class="comment">// 添加用户</span></span><br><span class="line">    addUser()&#123;</span><br><span class="line">      <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        url:<span class="string">'users'</span>,</span><br><span class="line">        method:<span class="string">'post'</span>,</span><br><span class="line">        <span class="comment">// post数据提交</span></span><br><span class="line">        data:<span class="keyword">this</span>.form,</span><br><span class="line">        headers: &#123; <span class="attr">Authorization</span>: <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>) &#125;</span><br><span class="line">      &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">          <span class="keyword">let</span> &#123;data&#125; = res;</span><br><span class="line">          <span class="keyword">if</span>(data.meta.status == <span class="number">201</span>)&#123;</span><br><span class="line">              <span class="comment">// 将数据更新到页面</span></span><br><span class="line">              <span class="keyword">this</span>.tableData.push(data.data);</span><br><span class="line">              <span class="keyword">this</span>.$message(&#123;<span class="attr">message</span>: <span class="string">"添加用户成功"</span>,<span class="attr">type</span>: <span class="string">"success"</span>&#125;);</span><br><span class="line">              <span class="comment">// 关闭窗口 </span></span><br><span class="line">              <span class="keyword">this</span>.dialogFormVisible = <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="2-8-修改用户信息"><a href="#2-8-修改用户信息" class="headerlink" title="2.8 修改用户信息"></a>2.8 修改用户信息</h3><p>绑定表单事件，传入 scope.row 以显示现有用户数据，做表单读入展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot; @click=&quot;editUserShow(scope.row)&quot; plain&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-check&quot; size=&quot;mini&quot;  plain&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-delete&quot; size=&quot;mini&quot; @click=&quot;deleteUser(scope.row.id)&quot; plain&gt;&lt;/el-button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br></pre></td></tr></table></figure><p>添加修改用户信息的弹窗，并在弹窗表单中展示用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 修改用户弹窗 --&gt;</span><br><span class="line">&lt;el-dialog title=&quot;添加用户&quot; :visible.sync=&quot;editUser&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;edit&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;姓名&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">            &lt;el-input disabled v-model=&quot;edit.username&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;邮箱&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">            &lt;el-input v-model=&quot;edit.email&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;电话&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">            &lt;el-input v-model=&quot;edit.mobile&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">        &lt;el-button @click=&quot;editUser = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;editUserPut&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 弹窗并显示用户数据 用于修改表单</span></span><br><span class="line">editUserShow(users)&#123;</span><br><span class="line">    <span class="keyword">this</span>.editUser = <span class="literal">true</span>; <span class="comment">// 弹窗</span></span><br><span class="line">    <span class="keyword">this</span>.edit = users; <span class="comment">// 直接使用表单数据</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改用户信息 入库</span></span><br><span class="line">editUserPut()&#123;</span><br><span class="line">    <span class="keyword">var</span> id = <span class="keyword">this</span>.edit.id;</span><br><span class="line">    <span class="keyword">var</span> email = <span class="keyword">this</span>.edit.email;</span><br><span class="line">    <span class="keyword">var</span> mobile = <span class="keyword">this</span>.edit.mobile;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.$myHttp(&#123;</span><br><span class="line">        url: <span class="string">`users/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">"put"</span>,</span><br><span class="line">        data:&#123;email,mobile&#125;,</span><br><span class="line">        headers: &#123; <span class="attr">Authorization</span>: <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>) &#125;</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(res);</span></span><br><span class="line">        <span class="keyword">if</span>(res.data.meta.status == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.editUser = <span class="literal">false</span>; <span class="comment">// 关闭窗口</span></span><br><span class="line">            <span class="keyword">this</span>.getUserData(); <span class="comment">// 重新获取数据</span></span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="attr">message</span>: <span class="string">"修改用户成功"</span>,<span class="attr">type</span>: <span class="string">"success"</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-9-修改用户角色"><a href="#2-9-修改用户角色" class="headerlink" title="2.9 修改用户角色"></a>2.9 修改用户角色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Select 选择器-&gt;基础用法` 下拉框</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 分配角色弹窗 --&gt;</span><br><span class="line">&lt;el-dialog title=&quot;分配角色&quot; :visible.sync=&quot;showRole&quot;&gt;</span><br><span class="line">    &lt;el-form :model=&quot;role&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;当前用户&quot; label-width=&quot;90px&quot;&gt;</span><br><span class="line">            &lt;el-input disabled v-model=&quot;role.username&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;活动区域&quot;&gt;</span><br><span class="line">            &lt;el-select v-model=&quot;roleId&quot;  placeholder=&quot;请选择活动区域&quot;&gt;</span><br><span class="line">                &lt;el-option</span><br><span class="line">                           v-for=&quot;item in roleList&quot;</span><br><span class="line">                           :key=&quot;item.key&quot;</span><br><span class="line">                           :label=&quot;item.roleName&quot;</span><br><span class="line">                           :value=&quot;item.id&quot;&gt;</span><br><span class="line">                &lt;/el-option&gt;</span><br><span class="line">            &lt;/el-select&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &#123;&#123;roleId&#125;&#125;</span><br><span class="line">        &lt;!-- 点击取消或确定修改dialogFormVisible=false关闭窗口 --&gt;</span><br><span class="line">        &lt;el-button @click=&quot;showRole = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;roleUserPut&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">弹窗后，获取全部角色遍历到 `el-option` ，获取用户id及修改后的角色，请求接口即可；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第2章-用户管理&quot;&gt;&lt;a href=&quot;#第2章-用户管理&quot; class=&quot;headerlink&quot; title=&quot;第2章 用户管理&quot;&gt;&lt;/a&gt;第2章 用户管理&lt;/h2&gt;&lt;h3 id=&quot;2-1-路由及组件&quot;&gt;&lt;a href=&quot;#2-1-路由及组件&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://hexo.dulada.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue前后端分离项目</title>
    <link href="https://hexo.dulada.com/Vue-node-1.html"/>
    <id>https://hexo.dulada.com/Vue-node-1.html</id>
    <published>2018-10-25T10:23:10.000Z</published>
    <updated>2019-07-23T07:10:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第0章-项目如何开始的"><a href="#第0章-项目如何开始的" class="headerlink" title="第0章 项目如何开始的"></a>第0章 项目如何开始的</h2><h3 id="0-1-总体流程"><a href="#0-1-总体流程" class="headerlink" title="0.1 总体流程"></a>0.1 总体流程</h3><p>需求调研–&gt;需求转为需求文档–&gt;将需求文档转为开发文档–&gt;前端文档–&gt;后台文档–&gt;项目测试–&gt;打包上线</p><h3 id="0-2-数据服务器构建"><a href="#0-2-数据服务器构建" class="headerlink" title="0.2 数据服务器构建"></a>0.2 数据服务器构建</h3><h4 id="0-2-1-技术栈"><a href="#0-2-1-技术栈" class="headerlink" title="0.2.1 技术栈"></a>0.2.1 技术栈</h4><p>Vue+elementUI+NodeJS+MySQL<br><a id="more"></a></p><h4 id="0-2-2-数据服务器准备"><a href="#0-2-2-数据服务器准备" class="headerlink" title="0.2.2 数据服务器准备"></a>0.2.2 数据服务器准备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">导入数据库数据：打开数据库服务器，新建名为  `itcast `  的库；</span><br><span class="line"></span><br><span class="line">后台为我们提供了 `/api-server/db/mydb.sql` 数据文件，打开复制 sql 语句直接运行即可；</span><br><span class="line"></span><br><span class="line">然后在 api-server 中执行 `npm install` 安装服务器所需扩展模块；</span><br><span class="line"></span><br><span class="line">`node app.js` 将服务器启动起来;</span><br></pre></td></tr></table></figure><h3 id="0-3-接口测试"><a href="#0-3-接口测试" class="headerlink" title="0.3  接口测试"></a>0.3  接口测试</h3><h4 id="0-3-1-登录"><a href="#0-3-1-登录" class="headerlink" title="0.3.1 登录"></a>0.3.1 登录</h4><p>后台已经写好接口文档，根据文档中的表述，我们测试登录接口：</p><p><img src="/assets/blogImg/Snipaste_2018-10-21_15-34-13.png" alt=""></p><h4 id="0-3-2-获取用户信息"><a href="#0-3-2-获取用户信息" class="headerlink" title="0.3.2 获取用户信息"></a>0.3.2 获取用户信息</h4><p>请求用户列表数据；但是，并没有返回相应的数据；</p><p><img src="/assets/blogImg/Snipaste_2018-10-21_15-42-57.png" alt=""></p><p><img src="/assets/blogImg/Snipaste_2018-10-21_15-44-14.png" alt=""></p><p><img src="/assets/blogImg/Snipaste_2018-10-21_15-45-34.png" alt=""></p><blockquote><p>使用 token 替换 cookie 的功能</p></blockquote><h3 id="0-4-Vue项目初始化"><a href="#0-4-Vue项目初始化" class="headerlink" title="0.4 Vue项目初始化"></a>0.4 Vue项目初始化</h3><p>使用 vue-cli 工具初始化项目：</p><p><img src="/assets/blogImg/Snipaste_2018-10-21_15-56-43.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">初始化成功，使用 ` npm run dev ` 启动项目；</span><br></pre></td></tr></table></figure><h3 id="0-5-项目预览"><a href="#0-5-项目预览" class="headerlink" title="0.5 项目预览"></a>0.5 项目预览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解压 `my-project(Vue项目).rar ` 后进入目录，使用 ` npm run dev ` 启动项目；</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/Snipaste_2018-10-21_16-09-59.png" alt=""></p><h2 id="第1章-开始项目"><a href="#第1章-开始项目" class="headerlink" title="第1章 开始项目"></a>第1章 开始项目</h2><h3 id="1-1-添加用户登录路由组件"><a href="#1-1-添加用户登录路由组件" class="headerlink" title="1.1 添加用户登录路由组件"></a>1.1 添加用户登录路由组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加路由：`myapp-code/src/router/index.js`</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'@/components/login/login'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path:<span class="string">'/login'</span>,</span><br><span class="line">      name:<span class="string">'Login'</span>,</span><br><span class="line">      component:Login</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加组件：`myapp-code/src/components/login/login.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;msg:&apos;我是登录页面&apos;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>修改Vue 项目运行端口： myapp-code/config/index.js  </p><h3 id="1-2-使用-ElementUI"><a href="#1-2-使用-ElementUI" class="headerlink" title="1.2 使用 ElementUI"></a>1.2 使用 ElementUI</h3><p><a href="http://element-cn.eleme.io/#/zh-CN" target="_blank" rel="noopener">http://element-cn.eleme.io/#/zh-CN</a></p><p><img src="/assets/blogImg/Snipaste_2018-10-21_16-51-06.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改 `src/main.js` 代码，全局引入 ElementUI ；</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 ElementUI </span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span>;</span><br><span class="line"><span class="comment">// 将 ElementUI 注册为 vue的全局组件</span></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在我们登录页面中尝试一下：` src/components/login/login.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-button type=&quot;success&quot;&gt;成功按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;info&quot;&gt;信息按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;warning&quot;&gt;警告按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;danger&quot;&gt;危险按钮&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-搭建登录页面"><a href="#1-3-搭建登录页面" class="headerlink" title="1.3 搭建登录页面"></a>1.3 搭建登录页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">把公共样式写到 `src/assets/css/style.css` ：     ` Form 表单`</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后在 `src/main.js` 加载公共样式：</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码略...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入我们的公共样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./assets/css/style.css'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 代码略...</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为了让登陆组件的背景色撑满，所以我们需要让他们的父盒子 `div#app` 高度设置为 `100%`。</span><br><span class="line"></span><br><span class="line">所以我们在 `src/App.vue` ：</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来我们开始调整 `src/components/login/login.vue` 组件样式：</span><br></pre></td></tr></table></figure><ul><li>注意：这里遵循一个原则，不要直接去使用 Element 组件自带的类名</li><li>如果你想为 Element 组件添加自定义样式，那么建议你给它加你自己的类名来控制</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;login-wrap&quot;&gt;</span><br><span class="line">  &lt;el-form ref=&quot;form&quot; :label-position=&quot;labelPosition&quot; :model=&quot;form&quot; label-width=&quot;80px&quot; class=&quot;login-from&quot; &gt;</span><br><span class="line">    &lt;h2&gt;用户登录&lt;/h2&gt;</span><br><span class="line">    &lt;el-form-item  label=&quot;用户名&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;form.name&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item label-position=&quot;top&quot; label=&quot;密码&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;form.pwd&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;onSubmit&quot; class=&quot;login-btn&quot; &gt;登录&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      labelPosition:&apos;top&apos;,</span><br><span class="line">      form: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        pwd: &quot;&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    onSubmit()&#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.login-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#324152</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-wrap</span> <span class="selector-class">.login-from</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-wrap</span> <span class="selector-class">.login-from</span> <span class="selector-class">.login-btn</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="1-4-完成登录功能"><a href="#1-4-完成登录功能" class="headerlink" title="1.4 完成登录功能"></a>1.4 完成登录功能</h3><h4 id="1-4-1-封装axios"><a href="#1-4-1-封装axios" class="headerlink" title="1.4.1 封装axios"></a>1.4.1 封装axios</h4><p>vue 插件语法： <a href="https://cn.vuejs.org/v2/guide/plugins.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/plugins.html</a></p><p>Axios : <a href="https://www.kancloud.cn/yunye/axios/234845" target="_blank" rel="noopener">https://www.kancloud.cn/yunye/axios/234845</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`npm install axios` ,将 axios 进行模块化封装，以 Vue 插件的方式，全局引入：</span><br><span class="line"></span><br><span class="line">将插件的封装写入 `src/assets/js/myaxios.js`</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入axios</span></span><br><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span>;</span><br><span class="line"><span class="comment">// 自定义插件对象</span></span><br><span class="line"><span class="keyword">var</span> myaxios = &#123;&#125;;</span><br><span class="line">myaxios.install = <span class="function"><span class="keyword">function</span>(<span class="params">vue</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 设置axios请求的URL，此后axios发送的请求全部执行本地址</span></span><br><span class="line">  <span class="keyword">var</span> axios_obj = Axios.create(&#123;</span><br><span class="line">    baseURL:<span class="string">'http://localhost:8888/api/private/v1/'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 将设置好的axios对象赋值给Vue实例的原型</span></span><br><span class="line">  <span class="comment">// 之后可以在Vue中直接只用 this.$myHttp 使用axios发送请求</span></span><br><span class="line">  vue.prototype.$myHttp = axios_obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将插件以 模块 方式导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> myaxios;</span><br></pre></td></tr></table></figure><p>在 main.js 引入axios插件，并注册为全局插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入 myaxios 模块</span></span><br><span class="line"><span class="keyword">import</span> myaxios <span class="keyword">from</span> <span class="string">'@/assets/js/myaxios.js'</span></span><br><span class="line">Vue.use(myaxios) <span class="comment">// 注册使用 axios 插件</span></span><br></pre></td></tr></table></figure><h4 id="1-4-2-完成登录功能"><a href="#1-4-2-完成登录功能" class="headerlink" title="1.4.2 完成登录功能"></a>1.4.2 完成登录功能</h4><p><strong>发送post请求</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      labelPosition:<span class="string">'top'</span>,</span><br><span class="line">      form: &#123;</span><br><span class="line">        username: <span class="string">""</span>,</span><br><span class="line">        password: <span class="string">""</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    <span class="comment">// 修改组件中绑定的按钮名称为 onLogin </span></span><br><span class="line">    onLogin()&#123;</span><br><span class="line">      <span class="comment">// 使用axios 发送post 请求，传入data中的form数据</span></span><br><span class="line">      <span class="keyword">this</span>.$myHttp.post(<span class="string">'login'</span>,<span class="keyword">this</span>.form)</span><br><span class="line">      .then(<span class="function"><span class="params">backdata</span>=&gt;</span>&#123; <span class="comment">// 异步执行成功后</span></span><br><span class="line">        <span class="built_in">console</span>.log(backdata);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>继续修改代码，完成登录逻辑</strong>：</p><p>vue-router编程式导航： <a href="https://router.vuejs.org/zh/guide/essentials/navigation.html" target="_blank" rel="noopener">https://router.vuejs.org/zh/guide/essentials/navigation.html</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">onLogin()&#123;</span><br><span class="line">    <span class="comment">// 使用axios 发送post 请求，传入data中的form数据</span></span><br><span class="line">    <span class="keyword">this</span>.$myHttp.post(<span class="string">'login'</span>,<span class="keyword">this</span>.form)</span><br><span class="line">        .then(<span class="function"><span class="params">backdata</span>=&gt;</span>&#123; <span class="comment">// 异步执行成功后</span></span><br><span class="line">        <span class="comment">//console.log(backdata.data);</span></span><br><span class="line">        <span class="comment">// 结构赋值，获取返回的数据</span></span><br><span class="line">        <span class="keyword">var</span> &#123;data,meta&#125;  = backdata.data;</span><br><span class="line">        <span class="comment">// 判断数据状态</span></span><br><span class="line">        <span class="keyword">if</span>(meta.status == <span class="number">200</span>)&#123;</span><br><span class="line">            alert(<span class="string">'登录成功'</span>);</span><br><span class="line">            <span class="comment">// 使用vue-router编程式导航跳转到home</span></span><br><span class="line">            <span class="keyword">this</span>.$router.push(<span class="string">'home'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改提示弹窗</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> &#123; data, meta &#125; = backdata.data;</span><br><span class="line"><span class="comment">// 判断数据状态</span></span><br><span class="line"><span class="keyword">if</span> (meta.status == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        message: <span class="string">"恭喜你，登录成功"</span>,</span><br><span class="line">        type: <span class="string">"success"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 使用vue-router编程式导航跳转到home</span></span><br><span class="line">    <span class="keyword">this</span>.$router.push(<span class="string">"home"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.$message.error(<span class="string">'错了哦'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4-3-表单验证"><a href="#1-4-3-表单验证" class="headerlink" title="1.4.3 表单验证"></a>1.4.3 表单验证</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Form 组件提供了表单验证的功能，只需要通过 `rules` 属性传入约定的验证规则，并将 Form-Item 的 `prop` 属性设置为需校验的字段名即可。</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      labelPosition: <span class="string">"top"</span>,</span><br><span class="line">      form: &#123;</span><br><span class="line">        username: <span class="string">""</span>,</span><br><span class="line">        password: <span class="string">""</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 与 el-form 中的 :rules="rules"  对应</span></span><br><span class="line">      rules: &#123;</span><br><span class="line">        <span class="comment">//与 el-form-item 中的 prop="username" 对应</span></span><br><span class="line">        username: [</span><br><span class="line">          <span class="comment">// 验证规则  是否必须        提示信息            触发时机</span></span><br><span class="line">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请输入用户名"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">        ],</span><br><span class="line">        password: [</span><br><span class="line">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">"请输入密码"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;,</span><br><span class="line">          &#123; <span class="attr">min</span>: <span class="number">3</span>, <span class="attr">max</span>: <span class="number">5</span>, <span class="attr">message</span>: <span class="string">"长度在 3 到 5 个字符"</span>, <span class="attr">trigger</span>: <span class="string">"blur"</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/Snipaste_2018-10-21_21-49-00.png" alt=""></p><h4 id="1-4-4-阻止数据提交"><a href="#1-4-4-阻止数据提交" class="headerlink" title="1.4.4 阻止数据提交"></a>1.4.4 阻止数据提交</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">onLogin() &#123;</span><br><span class="line">    <span class="comment">// 因为要获取form表单的节点对象，</span></span><br><span class="line">    <span class="comment">// 所以 el-form 中要加入 ref="ruleForm" </span></span><br><span class="line">    <span class="keyword">this</span>.$refs.ruleForm.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// elementUI 会将 validate 方法加入到节点对象，</span></span><br><span class="line">        <span class="comment">// 在提交是，如果表单的验证未通过，会将错误信息传入回调函数</span></span><br><span class="line">        <span class="keyword">if</span> (!valid) &#123;</span><br><span class="line">            <span class="comment">// 如果有表单错误信息，则无反应</span></span><br><span class="line">            <span class="keyword">this</span>.$message.error(<span class="string">"输入有误"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用axios 发送post 请求，传入data中的form数据</span></span><br><span class="line">        <span class="keyword">this</span>.$myHttp.post(<span class="string">"login"</span>, <span class="keyword">this</span>.form).then(<span class="function"><span class="params">backdata</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 结构赋值，获取返回的数据</span></span><br><span class="line">            <span class="keyword">var</span> &#123; data, meta &#125; = backdata.data;</span><br><span class="line">            <span class="comment">// 判断数据状态</span></span><br><span class="line">            <span class="keyword">if</span> (meta.status == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">                    message: <span class="string">"恭喜你，登录成功"</span>,</span><br><span class="line">                    type: <span class="string">"success"</span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 使用vue-router编程式导航跳转到home</span></span><br><span class="line">                <span class="keyword">this</span>.$router.push(<span class="string">"home"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.$message.error(<span class="string">"错了哦"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-首页"><a href="#1-5-首页" class="headerlink" title="1.5 首页"></a>1.5 首页</h3><h4 id="1-5-1-添加路由及页面布局"><a href="#1-5-1-添加路由及页面布局" class="headerlink" title="1.5.1 添加路由及页面布局"></a>1.5.1 添加路由及页面布局</h4><p>修改登录成功后逻辑，使用路由名称表示进行跳转：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用vue-router编程式导航跳转到home</span></span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">"home"</span>&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">导入组件，添加路由 `src/router/index.js`</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'@/components/home/home'</span></span><br><span class="line"> ……</span><br><span class="line">&#123;</span><br><span class="line">    path:<span class="string">'/'</span>,</span><br><span class="line">    name:<span class="string">'home'</span>,</span><br><span class="line">    component:Home</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加一个home组件`src/components/home/home.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      msg:&apos;we&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改一个home组件`src/components/home/home.vue `   ` Container 布局容器`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-container class=&quot;height100&quot;&gt;</span><br><span class="line">    &lt;el-header&gt;Header&lt;/el-header&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">        &lt;el-aside width=&quot;200px&quot;&gt;Aside&lt;/el-aside&gt;</span><br><span class="line">        &lt;el-main&gt;Main&lt;/el-main&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">&lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.height100</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.el-header</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#B3C0D1</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.el-aside</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#D3DCE6</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.el-main</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#E9EEF3</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">160px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-2-头部样式"><a href="#1-5-2-头部样式" class="headerlink" title="1.5.2 头部样式"></a>1.5.2 头部样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`/src/components/home/home.vue`</span><br><span class="line"></span><br><span class="line">`Layout 布局`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-header&gt;</span><br><span class="line">    &lt;el-row&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;grid-content bg-purple&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;/static/logo.png&quot; alt=&quot;&quot;&gt; </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;12&quot;&gt;&lt;div class=&quot;grid-content bg-purple-light&quot;&gt;电商后台管理系统&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;&lt;div class=&quot;grid-content bg-purple&quot;&gt;&lt;el-button type=&quot;warning&quot;&gt;退出&lt;/el-button&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/el-header&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">// 标题文本样式</span><br><span class="line">.bg-purple-light &#123;</span><br><span class="line">  font-size: 25px;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-3-左侧样式"><a href="#1-5-3-左侧样式" class="headerlink" title="1.5.3 左侧样式"></a>1.5.3 左侧样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`/src/components/home/home.vue`</span><br><span class="line"></span><br><span class="line">` NavMenu 导航菜单`  `Icon 图标`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-container&gt;</span><br><span class="line">   &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">     &lt;!-- </span><br><span class="line">       el-menu 侧边导航栏组件</span><br><span class="line">unique-opened=&quot;true&quot; 只保持一个导航开启</span><br><span class="line">           router=&quot;true&quot; 开启导航路由</span><br><span class="line">       el-submenu 导航栏的顶级项</span><br><span class="line">       template 导航栏中需要展示的内容</span><br><span class="line">           i 图标</span><br><span class="line">           span 文字</span><br><span class="line">       el-menu-item-group 次级导航组 内容与导航的组标识 可直接删除</span><br><span class="line">       el-menu-item  导航栏选项</span><br><span class="line"></span><br><span class="line">         index属性 控制收起展开+路由标识:</span><br><span class="line">             在el-menu中加入router=“true”属性;</span><br><span class="line">             index=&quot;1-1&quot; 点击时路由跳转到1-1 ;</span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;el-menu </span><br><span class="line">       :unique-opened=&quot;true&quot;</span><br><span class="line">       :router=&quot;true&quot; </span><br><span class="line">       default-active=&quot;2&quot;</span><br><span class="line">       class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">       @open=&quot;handleOpen&quot;</span><br><span class="line">       @close=&quot;handleClose&quot;&gt;</span><br><span class="line">       &lt;el-submenu index=&quot;1&quot; &gt;</span><br><span class="line">         &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">           &lt;i class=&quot;el-icon-location&quot;&gt;&lt;/i&gt;</span><br><span class="line">           &lt;span&gt;用户管理&lt;/span&gt;</span><br><span class="line">         &lt;/template&gt;</span><br><span class="line">         &lt;el-menu-item index=&quot;1-1&quot;&gt;</span><br><span class="line">           &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">           用户列表</span><br><span class="line">         &lt;/el-menu-item&gt;</span><br><span class="line">       &lt;/el-submenu&gt;</span><br><span class="line"></span><br><span class="line">       &lt;el-submenu index=&quot;2&quot; &gt;</span><br><span class="line">         &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">           &lt;i class=&quot;el-icon-location&quot;&gt;&lt;/i&gt;</span><br><span class="line">           &lt;span&gt;权限管理&lt;/span&gt;</span><br><span class="line">         &lt;/template&gt;</span><br><span class="line">         &lt;el-menu-item index=&quot;2-1&quot;&gt;</span><br><span class="line">           &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">           角色列表</span><br><span class="line">         &lt;/el-menu-item&gt;</span><br><span class="line">         &lt;el-menu-item index=&quot;2-2&quot;&gt;</span><br><span class="line">           &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">           权限列表</span><br><span class="line">         &lt;/el-menu-item&gt;</span><br><span class="line">       &lt;/el-submenu&gt;</span><br><span class="line">       </span><br><span class="line">     &lt;/el-menu&gt;</span><br><span class="line">   &lt;/el-aside&gt;</span><br><span class="line">   &lt;el-main&gt;Main&lt;/el-main&gt;</span><br><span class="line"> &lt;/el-container&gt;</span><br></pre></td></tr></table></figure><p>我们发现，大部分组件，在浏览器渲染后，都会在标签内部自动添加一个标签名为名字的 class 属性 ，我们可以利用这个属性，设置样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-menu</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-submenu</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-4-右侧内容"><a href="#1-5-4-右侧内容" class="headerlink" title="1.5.4 右侧内容"></a>1.5.4 右侧内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加组件内容 `/src/components/home/home.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-main&gt;</span><br><span class="line">    &lt;!-- 路由组件 --&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/el-main&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加组件：`src/components/index.vue`</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;p&gt;我是首页内容&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>添加路由：<code>/src/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path:<span class="string">'/index'</span>,</span><br><span class="line">    name:<span class="string">'index'</span>,</span><br><span class="line">    component:Index</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意: 我们希望index.vue 组件的内容,展示到home组件的 <router-view></router-view>中</p></blockquote><p><strong>知识补充：</strong></p><p>此时，我们需要借助嵌套路由:  <a href="https://router.vuejs.org/zh/guide/essentials/nested-routes.html" target="_blank" rel="noopener">https://router.vuejs.org/zh/guide/essentials/nested-routes.html</a></p><p>嵌套路由(子路由的基本用法)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./vue-router.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1:定义路由组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> login = &#123;</span></span><br><span class="line"><span class="undefined">        template: `</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是登录页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/zi"</span>&gt;</span>子路由<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="comment">&lt;!--路由组件中继续使用路由组件--&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="undefined">            `</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> zi = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h4</span>&gt;</span>我是嵌套路由的组件<span class="tag">&lt;/<span class="name">h4</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2:获取路由对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 定义路由规则</span></span></span><br><span class="line"><span class="undefined">        routes: [</span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="javascript">                name: <span class="string">'login'</span>,</span></span><br><span class="line"><span class="javascript">                path: <span class="string">"/login"</span>,</span></span><br><span class="line"><span class="undefined">                component: login,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 路由中的 children 属性，定义嵌套路由(子路由)</span></span></span><br><span class="line"><span class="undefined">                children: [</span></span><br><span class="line"><span class="javascript">                    &#123; <span class="attr">name</span>: <span class="string">'zi'</span>, <span class="attr">path</span>: <span class="string">"/zi"</span>, <span class="attr">component</span>: zi &#125;</span></span><br><span class="line"><span class="undefined">                ]</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">        ]</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        router</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>再谈 代码加载流程 </strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(main.js-&gt;template: &apos;&lt;App/&gt;&apos;)替换 (index.html-&gt;div#app);</span><br><span class="line"></span><br><span class="line">(index.html-&gt;&lt;App/&gt;) --&gt; (components: &#123; App &#125;)</span><br><span class="line"></span><br><span class="line">( components: &#123; App &#125;) --&gt; (import App from &apos;./App&apos; -&gt; src/App.vue)</span><br><span class="line"></span><br><span class="line">(App.vue -&gt; &lt;router-view/&gt; -&gt; 路由组件) --&gt; (main.js-&gt; router)</span><br><span class="line">========此项决定了页面展示那个组件内容 ========</span><br><span class="line"></span><br><span class="line">(&#123;path: &apos;/&apos;,name: &apos;HelloWorld&apos;, component: HelloWorld &#125;) --&gt; (import HelloWorld from &apos;@/components/HelloWorld&apos;)</span><br><span class="line"></span><br><span class="line">(src/components/HelloWorld.vue) --&gt; &lt;router-view/&gt;</span><br></pre></td></tr></table></figure><p>因此，我们需要让 index 成为 home 的子路由组件 <code>src/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">  &#123;</span><br><span class="line">    path:<span class="string">'/login'</span>,</span><br><span class="line">    name:<span class="string">'Login'</span>,</span><br><span class="line">    component:Login</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path:<span class="string">'/'</span>,</span><br><span class="line">    name:<span class="string">'home'</span>,</span><br><span class="line">    component:Home,</span><br><span class="line">    <span class="comment">// 添加子路由</span></span><br><span class="line">    children:[</span><br><span class="line">      &#123;<span class="attr">path</span>:<span class="string">'index'</span>,<span class="attr">name</span>:<span class="string">'index'</span>,<span class="attr">component</span>:Index&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>登录完成后，跳转到 home–&gt;index  <code>src/components/login/login.vue</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (meta.status == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        message: <span class="string">"恭喜你，登录成功"</span>,</span><br><span class="line">        type: <span class="string">"success"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 使用vue-router编程式导航跳转到home-&gt;index</span></span><br><span class="line">    <span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">"index"</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-验证首页登录"><a href="#1-6-验证首页登录" class="headerlink" title="1.6 验证首页登录"></a>1.6 验证首页登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`src/components/login/login.vue`</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (meta.status == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        message: <span class="string">"恭喜你，登录成功"</span>,</span><br><span class="line">        type: <span class="string">"success"</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 登录成功后，将token信息保存到 localStorage </span></span><br><span class="line">    <span class="built_in">window</span>.localStorage.setItem(<span class="string">'token'</span>,data.token);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用vue-router编程式导航跳转到home-&gt;index</span></span><br><span class="line">    <span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">"index"</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 `src/components/home/home.vue` 验证登录</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 使用生命周期的钩子函数，判断token</span></span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="comment">// 获取token</span></span><br><span class="line">    <span class="keyword">var</span> token = <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">      <span class="comment">// 错误提示</span></span><br><span class="line">      <span class="keyword">this</span>.$message.error(<span class="string">"请登录"</span>);</span><br><span class="line">      <span class="comment">// 跳转到登录页面</span></span><br><span class="line">      <span class="keyword">this</span>.$router.push(&#123; <span class="attr">name</span>: <span class="string">"Login"</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      msg: <span class="string">"we"</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="1-7-用户退出"><a href="#1-7-用户退出" class="headerlink" title="1.7 用户退出"></a>1.7 用户退出</h3><p>绑定点击事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-col :span=&quot;6&quot;&gt;&lt;div class=&quot;grid-content bg-purple&quot;&gt;&lt;el-button @click=&quot;loginOut&quot; type=&quot;warning&quot;&gt;退出&lt;/el-button&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    loginOut()&#123;</span><br><span class="line">        <span class="comment">// 清楚token</span></span><br><span class="line">        <span class="built_in">window</span>.localStorage.removeItem(<span class="string">'token'</span>)</span><br><span class="line">        <span class="comment">// 退出提示</span></span><br><span class="line">        <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">            message: <span class="string">"您已经退出，继续操作请重新登录"</span>,</span><br><span class="line">            type: <span class="string">"success"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 页面路由跳转</span></span><br><span class="line">        <span class="keyword">this</span>.$router.push(&#123; <span class="attr">name</span>: <span class="string">"Login"</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第0章-项目如何开始的&quot;&gt;&lt;a href=&quot;#第0章-项目如何开始的&quot; class=&quot;headerlink&quot; title=&quot;第0章 项目如何开始的&quot;&gt;&lt;/a&gt;第0章 项目如何开始的&lt;/h2&gt;&lt;h3 id=&quot;0-1-总体流程&quot;&gt;&lt;a href=&quot;#0-1-总体流程&quot; class=&quot;headerlink&quot; title=&quot;0.1 总体流程&quot;&gt;&lt;/a&gt;0.1 总体流程&lt;/h3&gt;&lt;p&gt;需求调研–&amp;gt;需求转为需求文档–&amp;gt;将需求文档转为开发文档–&amp;gt;前端文档–&amp;gt;后台文档–&amp;gt;项目测试–&amp;gt;打包上线&lt;/p&gt;
&lt;h3 id=&quot;0-2-数据服务器构建&quot;&gt;&lt;a href=&quot;#0-2-数据服务器构建&quot; class=&quot;headerlink&quot; title=&quot;0.2 数据服务器构建&quot;&gt;&lt;/a&gt;0.2 数据服务器构建&lt;/h3&gt;&lt;h4 id=&quot;0-2-1-技术栈&quot;&gt;&lt;a href=&quot;#0-2-1-技术栈&quot; class=&quot;headerlink&quot; title=&quot;0.2.1 技术栈&quot;&gt;&lt;/a&gt;0.2.1 技术栈&lt;/h4&gt;&lt;p&gt;Vue+elementUI+NodeJS+MySQL&lt;br&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://hexo.dulada.com/tags/Vue/"/>
    
  </entry>
  
</feed>
