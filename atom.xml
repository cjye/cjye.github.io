<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arley的博客</title>
  <icon>https://www.gravatar.com/avatar/bb3e4a0e4b3e62f4a48d83d31d4aa8cd</icon>
  <subtitle>道可道，非常道，名可名，非常名</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hexo.dulada.com/"/>
  <updated>2019-02-19T04:00:36.000Z</updated>
  <id>https://hexo.dulada.com/</id>
  
  <author>
    <name>Arley</name>
    <email>arleylee@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>yilia主题的hexo博客添加留言评论系统valine</title>
    <link href="https://hexo.dulada.com/hexo-comment-system.html"/>
    <id>https://hexo.dulada.com/hexo-comment-system.html</id>
    <published>2019-02-19T01:18:53.000Z</published>
    <updated>2019-02-19T04:00:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>yilia 主题的hexo博客 安装留言评论系统之valine</p><p>安装完yilia主题的hexo博客,自带的留言评论系统貌似都不能用，然后找到了<a href="https://valine.js.org/index.html" target="_blank" rel="noopener">valine</a>和<a href="http://www.disqus.com/" target="_blank" rel="noopener">disqus</a>（需要翻墙）</p><h5 id="首先打开valine-官网：https-valine-js-org"><a href="#首先打开valine-官网：https-valine-js-org" class="headerlink" title="首先打开valine 官网：https://valine.js.org/"></a>首先打开valine 官网：<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></h5><p>valine的介绍是：【是一款基于Leancloud的快速、简洁且高效的无后端评论系统。】</p><a id="more"></a><h5 id="按照官网的快速上手"><a href="#按照官网的快速上手" class="headerlink" title="按照官网的快速上手"></a>按照官网的<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">快速上手</a></h5><h4 id="前期准备操作"><a href="#前期准备操作" class="headerlink" title="前期准备操作"></a>前期准备操作</h4><h6 id="1-获取APP-ID-和-APP-Key"><a href="#1-获取APP-ID-和-APP-Key" class="headerlink" title="1.获取APP ID 和 APP Key"></a>1.获取APP ID 和 APP Key</h6><p>请先登录或注册 LeanCloud, 进入控制台后点击左下角创建应用：</p><p><img src="https://ws1.sinaimg.cn/large/006qRazegy1fkwo2fpoetj30h40coaak.jpg" alt="image"></p><p>应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了：<br><img src="https://ws1.sinaimg.cn/large/006qRazegy1fkwo6w2b6uj30xe0etjt4.jpg" alt="image"></p><h4 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h4><ol><li>首先在blog根目录下的_config.yml（==不是主题文件下的==）添加如下</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Valine https://valine.js.org</span><br><span class="line">valine: </span><br><span class="line"> appid:  #Leancloud应用的appId</span><br><span class="line"> appkey:  #Leancloud应用的appKey</span><br><span class="line"> verify: false #验证码</span><br><span class="line"> notify: false #评论回复提醒</span><br><span class="line"> avatar: mm #评论列表头像样式：&apos;&apos;/mm/identicon/monsterid/wavatar/retro/hide</span><br><span class="line"> placeholder: Just go go #评论框占位符</span><br></pre></td></tr></table></figure><ol start="2"><li>themes下yilia下layout/_partial/article.ejs文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey)&#123; %&gt;</span><br><span class="line">    &lt;section id=&quot;comments&quot; class=&quot;comments&quot;&gt;</span><br><span class="line">      &lt;style&gt;</span><br><span class="line">        .comments&#123;margin:30px;padding:10px;background:#fff&#125;</span><br><span class="line">        @media screen and (max-width:800px)&#123;.comments&#123;margin:auto;padding:10px;background:#fff&#125;&#125;</span><br><span class="line">      &lt;/style&gt;</span><br><span class="line">      &lt;%- partial(&apos;post/valine&apos;, &#123;</span><br><span class="line">        key: post.slug,</span><br><span class="line">        title: post.title,</span><br><span class="line">        url: config.url+url_for(post.path)</span><br><span class="line">        &#125;) %&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>themes下yilia下的layout/_partial/post/valine.ejs文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;vcomment&quot; class=&quot;comment&quot;&gt;&lt;/div&gt; </span><br><span class="line">&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   var notify = &apos;&lt;%= theme.valine.notify %&gt;&apos; == true ? true : false;</span><br><span class="line">   var verify = &apos;&lt;%= theme.valine.verify %&gt;&apos; == true ? true : false;</span><br><span class="line">    window.onload = function() &#123;</span><br><span class="line">        new Valine(&#123;</span><br><span class="line">            el: &apos;.comment&apos;,</span><br><span class="line">            notify: notify,</span><br><span class="line">            verify: verify,</span><br><span class="line">            app_id: &quot;&lt;%= theme.valine.appid %&gt;&quot;,</span><br><span class="line">            app_key: &quot;&lt;%= theme.valine.appkey %&gt;&quot;,</span><br><span class="line">            placeholder: &quot;&lt;%= theme.valine.placeholder %&gt;&quot;,</span><br><span class="line">            avatar:&quot;&lt;%= theme.valine.avatar %&gt;&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>容易出现的问题及解决办法</li></ol><ul><li>你好，我在博客中开启了valine，但是有一篇文章下评论块出现在了文章中间使我不得不关闭了评论块，对此毫无办法…<br><br>可以尝试性的将<code>layout/_partial/post/valine.ejs</code>文件中的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Valine(&#123;</span><br><span class="line">    el: &apos;.comment&apos;,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Valine(&#123;</span><br><span class="line">    el: &apos;#vcomment&apos;,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>不过我还有一个问题，为什么我在本地hexo server的页面上加载评论就很快，而在域名上评论块就加载的很慢甚至经常加载不出来…<br><br>可以尝试性的将<code>layout/_partial/post/valine.ejs</code>中的</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">        el: <span class="string">'#vcomment'</span>,</span><br><span class="line">        notify: notify,</span><br><span class="line">        verify: verify,</span><br><span class="line">        app_id: <span class="string">"&lt;%= theme.valine.appid %&gt;"</span>,</span><br><span class="line">        app_key: <span class="string">"&lt;%= theme.valine.appkey %&gt;"</span>,</span><br><span class="line">        placeholder: <span class="string">"&lt;%= theme.valine.placeholder %&gt;"</span>,</span><br><span class="line">        avatar:<span class="string">"&lt;%= theme.valine.avatar %&gt;"</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Valine(&#123;</span><br><span class="line">    el: <span class="string">'#vcomment'</span>,</span><br><span class="line">    notify: notify,</span><br><span class="line">    verify: verify,</span><br><span class="line">    app_id: <span class="string">"&lt;%= theme.valine.appid %&gt;"</span>,</span><br><span class="line">    app_key: <span class="string">"&lt;%= theme.valine.appkey %&gt;"</span>,</span><br><span class="line">    placeholder: <span class="string">"&lt;%= theme.valine.placeholder %&gt;"</span>,</span><br><span class="line">    avatar:<span class="string">"&lt;%= theme.valine.avatar %&gt;"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>请问各位，我的评论系统也在主页出现了，确定代码位置什么的都没放错，实在不知道问题出在哪里<br></li></ul><p>把article.ejs里的Valine评论系统代码往上移动一些，<br><br>移到&lt;% if (!index &amp;&amp; post.comments){ %&gt;下面试试</p><p><img src="/assets/blogImg/hexo-comment-system-1.png" alt="Picture by Matt Carlson"></p><h2 id="如果你实在不会-我帮你啊"><a href="#如果你实在不会-我帮你啊" class="headerlink" title="- 如果你实在不会  我帮你啊 ~~~"></a>- 如果你实在不会  我帮你啊 ~~~</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yilia 主题的hexo博客 安装留言评论系统之valine&lt;/p&gt;
&lt;p&gt;安装完yilia主题的hexo博客,自带的留言评论系统貌似都不能用，然后找到了&lt;a href=&quot;https://valine.js.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;valine&lt;/a&gt;和&lt;a href=&quot;http://www.disqus.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;disqus&lt;/a&gt;（需要翻墙）&lt;/p&gt;
&lt;h5 id=&quot;首先打开valine-官网：https-valine-js-org&quot;&gt;&lt;a href=&quot;#首先打开valine-官网：https-valine-js-org&quot; class=&quot;headerlink&quot; title=&quot;首先打开valine 官网：https://valine.js.org/&quot;&gt;&lt;/a&gt;首先打开valine 官网：&lt;a href=&quot;https://valine.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://valine.js.org/&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;valine的介绍是：【是一款基于Leancloud的快速、简洁且高效的无后端评论系统。】&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://hexo.dulada.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hexo.dulada.com/20190216.html"/>
    <id>https://hexo.dulada.com/20190216.html</id>
    <published>2019-02-16T12:00:00.000Z</published>
    <updated>2019-02-18T14:07:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个博客，终于还是安排上了…</p><p>间歇性拿起放下，折腾一周…</p><p>一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。当然这个农民确切来说是个码农。</p><p>感谢Litten提供的yilia主题。我很喜欢这种色调。</p><p>然后之前各处的笔记都可以转移过来了，有道云居多，在此感谢有道云笔记~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个博客，终于还是安排上了…&lt;/p&gt;
&lt;p&gt;间歇性拿起放下，折腾一周…&lt;/p&gt;
&lt;p&gt;一个农民，通过自身努力终于分到了一块地，不再需要在地主的土地上创造流量价值时，于是翻身作主的他可以宣告说：Hello World。当然这个农民确切来说是个码农。&lt;/p&gt;
&lt;p&gt;感谢Litt
      
    
    </summary>
    
    
      <category term="杂谈" scheme="https://hexo.dulada.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>1.验证码实例化</title>
    <link href="https://hexo.dulada.com/php-Advanced-combat-1.html"/>
    <id>https://hexo.dulada.com/php-Advanced-combat-1.html</id>
    <published>2018-01-11T01:10:10.000Z</published>
    <updated>2019-02-18T09:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="封装类原则"><a href="#封装类原则" class="headerlink" title="封装类原则"></a>封装类原则</h4><ol><li>对外公开的方法只有一个，只要调用这个方法，就可以将验证码显示到浏览器，其他的为这个类服务的方法设置为protected，供子类来继承和重写</li><li>有些变量在该类里面会被反复的使用到，我们将其保存为成员属性，将不用的成员属性设置为protected</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">验证码个数 $number;</span><br><span class="line">验证码类型 $codeType;</span><br><span class="line">验证码图像的宽度 $width;</span><br><span class="line">验证码图像的高度 $height;</span><br><span class="line">验证码 $code;</span><br><span class="line">图像资源 $image;</span><br></pre></td></tr></table></figure><a id="more"></a><p>验证码类步骤</p><ol><li>生成验证码</li><li>创建画布</li><li>填充背景色</li><li>将验证码画到画布中</li><li>添加干扰元素</li><li>输出显示</li><li></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$code = new Code();</span><br><span class="line">echo $code -&gt;outImage();</span><br><span class="line">class Code </span><br><span class="line">&#123;</span><br><span class="line">    // 验证码个数 $number;</span><br><span class="line">    protected $number;</span><br><span class="line">    // 验证码类型 $codeType;</span><br><span class="line">    protected $codeType;</span><br><span class="line">    // 验证码图像的宽度 $width;</span><br><span class="line">    protected $width;</span><br><span class="line">    // 验证码图像的高度 $height;</span><br><span class="line">    protected $height;</span><br><span class="line">    // 验证码 $code;</span><br><span class="line">    protected $code;</span><br><span class="line">    // 图像资源 $image;</span><br><span class="line">    protected $image;</span><br><span class="line"></span><br><span class="line">    public function __construct($number = 4,$codeType = 2,$width = 100,$height =50)</span><br><span class="line">    &#123;</span><br><span class="line">        //初始化自己的成员属性</span><br><span class="line">        $this-&gt;number = $number;</span><br><span class="line">        $this-&gt;codeType = $codeType;</span><br><span class="line">        $this-&gt;width = $width;</span><br><span class="line">        $this-&gt;height = $height;</span><br><span class="line"></span><br><span class="line">        //生成验证码函数</span><br><span class="line">        $this-&gt;code = $this-&gt;createCode();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        imagedestroy($this-&gt;image);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($name)</span><br><span class="line">    &#123;</span><br><span class="line">        if($name == &apos;code&apos;) &#123;</span><br><span class="line">            return $this-&gt;code;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function createCode()&#123;</span><br><span class="line">        //通过你的验证码类型给你生成不同的验证码</span><br><span class="line">        switch ($this-&gt;codeType)&#123;</span><br><span class="line">            case 0: //纯数字</span><br><span class="line">                $code = $this-&gt;getNumberCode();</span><br><span class="line">                break;</span><br><span class="line">            case 1: //纯字母</span><br><span class="line">                $code = $this-&gt;getCharCode();</span><br><span class="line">                break;</span><br><span class="line">            case 2: //字母和数字混合</span><br><span class="line">                $code = $this-&gt;getNumCharCode();</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                die(&apos;不支持这种验证码类型&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        return $code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function getNumberCode()&#123;</span><br><span class="line">        $str = join(&apos;&apos;,range(0,9));</span><br><span class="line">        return substr(str_shuffle($str),0,$this-&gt;number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function getCharCode()&#123;</span><br><span class="line">        $str = join(&apos;&apos;,range(&apos;a&apos;,&apos;z&apos;));</span><br><span class="line">        $str = $str.strtoupper($str);</span><br><span class="line">        return substr(str_shuffle($str),0,$this-&gt;number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function getNumCharCode()</span><br><span class="line">    &#123;</span><br><span class="line">        $numStr = join(&apos;&apos;,range(0,9));</span><br><span class="line">        $str = join(&apos;&apos;,range(&apos;a&apos;,&apos;z&apos;));</span><br><span class="line">        $str = $numStr.$str.strtoupper($str);</span><br><span class="line">        return substr(str_shuffle($str),0,$this-&gt;number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected function createImage()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;image = imagecreatetruecolor($this-&gt;width,$this-&gt;height);</span><br><span class="line">    &#125;</span><br><span class="line">    protected function fillBack()</span><br><span class="line">    &#123;</span><br><span class="line">        imagefill($this-&gt;image,0,0,$this-&gt;lightColor());</span><br><span class="line">    &#125;</span><br><span class="line">    protected function lightColor()</span><br><span class="line">    &#123;</span><br><span class="line">        return imagecolorallocate($this-&gt;image,mt_rand(130,255),mt_rand(130,255),mt_rand(130,255));</span><br><span class="line">    &#125;</span><br><span class="line">    protected function darkColor()&#123;</span><br><span class="line">        return imagecolorallocate($this-&gt;image,mt_rand(0,120),mt_rand(0,120),mt_rand(0,120));</span><br><span class="line">    &#125;   </span><br><span class="line">    protected function drawChar()</span><br><span class="line">    &#123;</span><br><span class="line">        $width = ceil($this-&gt;width / $this-&gt;number);</span><br><span class="line">        for($i = 0;$i &lt;$this-&gt;number;$i++)&#123;</span><br><span class="line">            $x = mt_rand($i * $width +5 ,($i+1) * $width -10);</span><br><span class="line">            $y = mt_rand(0,$this-&gt;height -15);</span><br><span class="line">            imagechar($this-&gt;image,5,$x,$y,$this-&gt;code[$i],$this-&gt;darkColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    protected function drawDisturb()</span><br><span class="line">    &#123;</span><br><span class="line">        for($i = 0;$i &lt; 150;$i++)&#123;</span><br><span class="line">            $x = mt_rand(0,$this-&gt;width);</span><br><span class="line">            $y = mt_rand(0,$this-&gt;height);</span><br><span class="line">            imagesetpixel($this-&gt;image,$x,$y,$this-&gt;lightColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    protected function show()</span><br><span class="line">    &#123;</span><br><span class="line">        //设置输出类型</span><br><span class="line">        header(&apos;Content-Type:image/png&apos;);</span><br><span class="line">        // 准备输出图片</span><br><span class="line">        imagepng($this-&gt;image);</span><br><span class="line">    &#125;</span><br><span class="line">    public function outImage()</span><br><span class="line">    &#123;</span><br><span class="line">        // 2. 创建画布</span><br><span class="line">        $this-&gt;createImage();</span><br><span class="line">        // 3. 填充背景色</span><br><span class="line">        $this-&gt;fillBack();</span><br><span class="line">        // 4. 将验证码画到画布中</span><br><span class="line">        $this-&gt;drawChar();</span><br><span class="line">        // 5. 添加干扰元素</span><br><span class="line">        $this-&gt;drawDisturb();</span><br><span class="line">        // 6. 输出显示</span><br><span class="line">        $this-&gt;show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;封装类原则&quot;&gt;&lt;a href=&quot;#封装类原则&quot; class=&quot;headerlink&quot; title=&quot;封装类原则&quot;&gt;&lt;/a&gt;封装类原则&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;对外公开的方法只有一个，只要调用这个方法，就可以将验证码显示到浏览器，其他的为这个类服务的方法设置为protected，供子类来继承和重写&lt;/li&gt;
&lt;li&gt;有些变量在该类里面会被反复的使用到，我们将其保存为成员属性，将不用的成员属性设置为protected&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;验证码个数 $number;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;验证码类型 $codeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;验证码图像的宽度 $width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;验证码图像的高度 $height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;验证码 $code;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;图像资源 $image;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>6.trait与命名空间</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-6.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-6.html</id>
    <published>2017-12-11T01:10:10.000Z</published>
    <updated>2019-02-18T09:56:18.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="trait"><a href="#trait" class="headerlink" title="trait"></a>trait</h4><p>用来模拟实现多继承的<br>instance：实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">定义trait 要以trait关键字开头，然后里面的写法和类的写法一模一样</span><br><span class="line">一般情况下，在trait中我们不加成员属性，只有成员方法</span><br><span class="line">trait 不能实例化</span><br><span class="line">trait 中的方法想让（子类）来使用，该方法必须是public</span><br><span class="line">trait 可以嵌套trait</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>方法名冲突：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use Shiled,Sword&#123;</span><br><span class="line">    Shiled::attack insteadof Sword; //用Shiled 的attack代替sword的</span><br><span class="line">    Shiled::attack as ShiledAttack;//shiled的attack改名</span><br><span class="line">    Sword::attack as Sattack;//sword的attack改名</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">trait Test &#123;</span><br><span class="line">    function demo ()&#123;</span><br><span class="line">        echo &apos;this is a demo ...&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">trait Shield&#123;</span><br><span class="line">    use Test;</span><br><span class="line">    function defense()&#123;</span><br><span class="line">        echo &apos;I can defend against 100 attacks &lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">trait Sword &#123;</span><br><span class="line">     function attack()&#123;</span><br><span class="line">         echo &apos;I can add 100 attacks&lt;br/&gt;&apos;;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Hero</span><br><span class="line">&#123;</span><br><span class="line">    use Shield,Sword;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$gailun = new Hero();</span><br><span class="line">$gailun -&gt; defense();</span><br><span class="line">$gailun -&gt; demo();</span><br><span class="line">$gailun -&gt; attack();</span><br></pre></td></tr></table></figure><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p>不同的命名空间下有相同的类名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">namespace hello;</span><br><span class="line">class Person &#123;</span><br><span class="line">    function eat()&#123;</span><br><span class="line">        echo &apos;hello,eat&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">namespace world\test;</span><br><span class="line">class Person &#123;</span><br><span class="line">     function eat()&#123;</span><br><span class="line">        echo &apos;world,eat&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$niu = new \hello\Person();</span><br><span class="line">$niu -&gt;eat();</span><br><span class="line"></span><br><span class="line">$ming = new \world\test\Person();</span><br><span class="line">$ming-&gt;eat();</span><br></pre></td></tr></table></figure><p>namespace:命名空间</p><ol><li>第一个命名空间的命名：前面不能有任何的代码</li><li>根空间、子空间</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根空间 \</span><br></pre></td></tr></table></figure><ol start="3"><li>use使用  as使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">include &apos;namespace.php&apos;;</span><br><span class="line">use \hello\Person as Person1;</span><br><span class="line">use \world\test\Person as Person2;</span><br><span class="line"></span><br><span class="line">$niu = new Person1();</span><br><span class="line">$niu -&gt;eat();</span><br><span class="line"></span><br><span class="line">$ming = new Person2();</span><br><span class="line">$ming-&gt;eat();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;trait&quot;&gt;&lt;a href=&quot;#trait&quot; class=&quot;headerlink&quot; title=&quot;trait&quot;&gt;&lt;/a&gt;trait&lt;/h4&gt;&lt;p&gt;用来模拟实现多继承的&lt;br&gt;instance：实例&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;定义trait 要以trait关键字开头，然后里面的写法和类的写法一模一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一般情况下，在trait中我们不加成员属性，只有成员方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trait 不能实例化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trait 中的方法想让（子类）来使用，该方法必须是public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trait 可以嵌套trait&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>5.抽象类与接口</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-5.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-5.html</id>
    <published>2017-12-10T01:10:10.000Z</published>
    <updated>2019-02-18T09:55:40.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">oracle</span><br><span class="line">sqlserver</span><br><span class="line">db2</span><br><span class="line">通用的东西放在一块，写一个父类</span><br><span class="line">不同的东西各自的子类自己来实现</span><br></pre></td></tr></table></figure><a id="more"></a><p>注意事项</p><ol><li>抽象类不能实例化对象</li><li>抽象类存在的目的是为了让子类继承</li><li>抽象类的定义和普通类的定义一样，只不过前面加了一个关键字，abstract</li><li>抽象类里面一般都要有抽象方法，抽象方法是用来让子类实现的，而且子类必须实现，不实现报错</li><li>抽象方法只能是public 或者 protected</li><li>抽象方法如果有参数，参数有默认值，那么实现该方法的时候参数和默认值也都要有</li><li>抽象类可以继承抽象类，子类在实现的时候所有的抽象的方法都得实现</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">abstract public Boint &#123;</span><br><span class="line">    abstract public function sleep()&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract   class Person extends Boint&#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo &apos;the function about say..&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    abstract public function eat($name);</span><br><span class="line">&#125;</span><br><span class="line">class Man extends Person &#123;</span><br><span class="line">    public fucntion eat($name)&#123;</span><br><span class="line">        echo &apos;eating....&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function sleep()&#123;</span><br><span class="line">        echo &apos;all of boint need sleep?&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><p>interface：接口<br><br>implements:实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">interface Test &#123;</span><br><span class="line">    function demo();</span><br><span class="line">&#125;</span><br><span class="line">interface Eat extends Test&#123;</span><br><span class="line">    function eatBread();</span><br><span class="line">&#125;</span><br><span class="line">interface Bungee &#123;</span><br><span class="line">    function jump();</span><br><span class="line">&#125;</span><br><span class="line">class Animal &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">class Person extends Animal implements Eat,Bungee &#123;</span><br><span class="line">    function eatBread()&#123;</span><br><span class="line">        echo &apos;I had bread and milk. &apos;; </span><br><span class="line">    &#125;</span><br><span class="line">    function jump ()&#123;</span><br><span class="line">        echo &apos;jump...&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    fucntion demo ()&#123;</span><br><span class="line">         echo&apos;demo....&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>接口中的方法都是抽象的方法，所以abstract课可以省略不写</li><li>接口中的方法必须是public</li><li>接口中只能规定方法，不能写属性（接口中可以写常量）</li><li>一个类可以实现多个接口中间用逗号隔开</li><li>接口可以继承接口，但是里面的方法都要实现</li></ol><p>面向接口开发</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;抽象类&quot;&gt;&lt;a href=&quot;#抽象类&quot; class=&quot;headerlink&quot; title=&quot;抽象类&quot;&gt;&lt;/a&gt;抽象类&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oracle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;通用的东西放在一块，写一个父类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;不同的东西各自的子类自己来实现&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>4.常量、静态属性、静态方法</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-4.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-4.html</id>
    <published>2017-12-09T01:10:10.000Z</published>
    <updated>2019-02-18T09:55:08.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>常量</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const   PI = 3.14;</span><br><span class="line">调用方法：</span><br><span class="line">    类外部：  类名::常量名 （或者 $obj::常量名）</span><br><span class="line">    类内部：  self::常量名  （或者 $this::常量名）</span><br><span class="line">self ： 就是当前类名</span><br><span class="line">在类外部可以使用define和const定义常量。但是在类内部只能使用const定义常量</span><br><span class="line">【注】常量前面不能加修饰符</span><br></pre></td></tr></table></figure><a id="more"></a><p>调用方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Person </span><br><span class="line">&#123;</span><br><span class="line">    const ABC = 1000;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line">    function test()&#123;</span><br><span class="line">        echo self::ABC;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo Person::ABC;</span><br><span class="line">$niu = new Person();</span><br><span class="line">$niu -&gt; test();</span><br></pre></td></tr></table></figure></p><ol start="2"><li>静态属性和方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 静态属性、静态方法</span><br><span class="line">对象属性、对象方法</span><br><span class="line">static 如果用来修饰属性和方法之后，那么 该属性和方法是属于整个类，不是属于某个对象的</span><br><span class="line">静态属性调用方法：</span><br><span class="line">    类外部：  类名::静态属性名 （或者 $obj::静态属性名）</span><br><span class="line">    类内部：  self::静态属性名  （或者 $this::静态属性名）</span><br><span class="line">静态方法调用方法</span><br><span class="line">    类外部：  类名::静态方法名 （或者 $obj::静态方法名 $obj -&gt; 静态方法名）</span><br><span class="line">    类内部：  self::静态方法名  （或者 $this::静态方法名 $this -&gt; 静态方法名）</span><br></pre></td></tr></table></figure></li></ol><p>静态方法注意项</p><ul><li>静态属性和方法前面可以加属性修饰符</li><li>静态属性和静态方法的效率高（不用new对象）</li><li>通过静态方法；来创建单例对象</li><li>静态方法中不能出现$this关键字</li><li></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Person </span><br><span class="line">&#123;</span><br><span class="line">    static public $name = &apos;littleFang&apos;;</span><br><span class="line">    public static function test()&#123;</span><br><span class="line">        echo &apos;这是静态方法&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public function demo ()</span><br><span class="line">    &#123;</span><br><span class="line">        echo self::$name;</span><br><span class="line">        self::test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$niu = new Person();</span><br><span class="line">$niu -&gt; demo();</span><br></pre></td></tr></table></figure><ol start="3"><li>静态方法<br>在一个静态方法里面可以调用另一个静态方法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//静态方法，根据图片的路径得到图片的信息，宽度，高度，mime类型</span><br><span class="line">   static function getImageInfo($imagePath)</span><br><span class="line">   &#123;</span><br><span class="line">       //得到图片信息</span><br><span class="line">       $info = getimagesize($imagePath);</span><br><span class="line">       //保存图片宽度 </span><br><span class="line">       $data[&apos;width&apos;] = $info[0];</span><br><span class="line">       //保存图片高度</span><br><span class="line">       $data[&apos;height&apos;] = $info[1];</span><br><span class="line">       //保存图片mime</span><br><span class="line">       $data[&apos;mime&apos;] = $info[&apos;mime&apos;];</span><br><span class="line">       //将图片信息返回</span><br><span class="line">       return $data;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">//打开图片</span><br><span class="line">   static function openAnyImage($imagePath)</span><br><span class="line">   &#123;</span><br><span class="line">       //得到图片的mime类型</span><br><span class="line">       $mime = self::getImageInfo($imagePath)[&apos;mime&apos;];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;常量&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const   PI = 3.14;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;调用方法：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    类外部：  类名::常量名 （或者 $obj::常量名）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    类内部：  self::常量名  （或者 $this::常量名）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self ： 就是当前类名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在类外部可以使用define和const定义常量。但是在类内部只能使用const定义常量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;【注】常量前面不能加修饰符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>3.魔术方法</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-3.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-3.html</id>
    <published>2017-12-08T01:10:10.000Z</published>
    <updated>2019-02-18T09:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="系统在特定的时机自动调用的方法"><a href="#系统在特定的时机自动调用的方法" class="headerlink" title="系统在特定的时机自动调用的方法"></a>系统在特定的时机自动调用的方法</h4><ol><li>常用的魔术方法</li></ol><ul><li>get /set<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__get </span><br><span class="line">    触发时机：对象在外部访问私有成员或者受保护的属性时调用</span><br><span class="line">    该方法有一个参数：参数就是属性名</span><br><span class="line">__set</span><br><span class="line">    触发时机：对象在外部设置私有或者受保护成员值得时候调用</span><br><span class="line">    该方法有两个参数：</span><br><span class="line">    参数1：成员的属性名</span><br><span class="line">    参数2：要设置的值</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><p>__get</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Person </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    public $name = &apos;小明&apos;；</span><br><span class="line">    protected  $age = 18;</span><br><span class="line">    private $height = 187;</span><br><span class="line">    public function __get($name)</span><br><span class="line">    &#123;</span><br><span class="line">        if($name == &apos;age&apos;) &#123;</span><br><span class="line">            return $this -&gt; age ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //__set</span><br><span class="line">    public function  __set($name,$value)</span><br><span class="line">    &#123;</span><br><span class="line">        //var_dump($name ,$value);</span><br><span class="line">        if($name ==&apos;age &apos;)&#123;</span><br><span class="line">            $this -&gt; age = $value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$niu  = new Person ();</span><br><span class="line">echo $niu -&gt; age;</span><br><span class="line">&lt;!--__set:--&gt;</span><br><span class="line">$niu-&gt;age = 30;</span><br></pre></td></tr></table></figure><ul><li>unset /isset</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在外部可以通过unset 销毁对象中public属性</span><br><span class="line">__unset</span><br><span class="line">    触发时机：对象在外部销毁私有或者受保护成员属性的时候调用</span><br><span class="line">    该方法有一个参数：参数就是私有的成员属性名</span><br><span class="line">__isset </span><br><span class="line">    触发时机：对象在外部判断私有或者受保护成员属性的时候调用</span><br><span class="line">    该方法有一个参数：参数就是私有成员的属性名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    protected $age;</span><br><span class="line">    private $height;</span><br><span class="line">    </span><br><span class="line">    public function __unset($name)&#123;</span><br><span class="line">        if($name ==&apos;age&apos;)&#123;</span><br><span class="line">            unset($this-&gt;age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$niu = new Person();</span><br><span class="line">//unset($niu-&gt; name);</span><br><span class="line">unset($niu -&gt;age);</span><br></pre></td></tr></table></figure><p>__isset:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class Person </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    public $name = &apos;小明&apos;；</span><br><span class="line">    protected  $age = 18;</span><br><span class="line">    private $height = 187;</span><br><span class="line">    public function __get($name)</span><br><span class="line">    &#123;</span><br><span class="line">        if($name == &apos;age&apos;) &#123;</span><br><span class="line">            return $this -&gt; age ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //__set</span><br><span class="line">    public function  __set($name,$value)</span><br><span class="line">    &#123;</span><br><span class="line">        //var_dump($name ,$value);</span><br><span class="line">        if($name ==&apos;age &apos;)&#123;</span><br><span class="line">            $this -&gt; age = $value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __isset ($name)</span><br><span class="line">    &#123;</span><br><span class="line">        if($name == &apos;age&apos;)&#123;</span><br><span class="line">            return isset($this -&gt;$name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$niu = new Person();</span><br><span class="line"></span><br><span class="line">$niu -&gt; age  = 100;</span><br><span class="line">var_dump(isset($niu-&gt;age));</span><br></pre></td></tr></table></figure><ul><li>析构方法__destruct:对象被销毁时自动调用</li><li>__toString(了解)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机：echo 一个对象的时候被调用</span><br><span class="line">该函数需要return一个字符串</span><br></pre></td></tr></table></figure><ul><li>__debugInfo</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机：var_dump 一个对象的时候触发（控制打印的信息）</span><br><span class="line">该函数需要return 一个数组</span><br></pre></td></tr></table></figure><ul><li>__call</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">触发时机：当调用一个不存在对象方法的时候触发</span><br><span class="line">参数1：函数名</span><br><span class="line">参数2：是一个数组，函数中的参数都被存放到这个数组中</span><br></pre></td></tr></table></figure><ul><li>__callStatic</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">触发时机：当调用一个不存在静态方法的时候触发</span><br><span class="line">参数1：函数名</span><br><span class="line">参数2：是一个数组，函数中的参数都被存放到这个数组中</span><br></pre></td></tr></table></figure><ul><li>序列化serialize</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">class Person</span><br><span class="line">&#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    public $height;</span><br><span class="line">    public $age;</span><br><span class="line">    </span><br><span class="line">    fucntion __construct($name,$value)&#123;</span><br><span class="line">        $this -&gt; name = $name;</span><br><span class="line">        $this -&gt; age = $age;</span><br><span class="line">        $this - $height = $height;</span><br><span class="line">    &#125;</span><br><span class="line">    //如果只想序列化&apos;age&apos;,&apos;height&apos;;</span><br><span class="line">    function __sleep()&#123;</span><br><span class="line">        return[&apos;age&apos;,&apos;height&apos;];</span><br><span class="line">    &#125;</span><br><span class="line">    function __weakup()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &apos;__weakup&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function __clone()</span><br><span class="line">    &#123;</span><br><span class="line">        $this -&gt;age  = 22;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$niu = new Person (&apos;xiaoming&apos;,18,180);</span><br><span class="line"></span><br><span class="line">$str = serialize($niu);</span><br><span class="line">file_put_contents(&apos;niu.txt&apos;,$str);</span><br><span class="line">//反序列化</span><br><span class="line">$str = file_get_contents(&apos;niu.txt&apos;);</span><br><span class="line">$obj = unserialize($str);</span><br><span class="line"></span><br><span class="line">//clone</span><br><span class="line">$obj = clone $niu;</span><br></pre></td></tr></table></figure><ul><li><p>反序列化 unserialize</p></li><li><p><strong>sleep(了解)<br>通过序列化的字符串  反序列化一个对象  在执行反序列化的时候先执行 </strong>wekup()方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机:在序列化一个对象的时候调用</span><br><span class="line">返回值：必须是一个数组，数组中写你想要的序列化的成员的属性名</span><br></pre></td></tr></table></figure></li><li><p>__wekeup</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机：在发序列化一个对象的时候</span><br><span class="line">反序列化成功后，想要让对象执行一些初始化方法 可以写到这个函数中</span><br></pre></td></tr></table></figure><ul><li>__clone</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机：在克隆一个对象的时候调用 </span><br><span class="line">在这里面可以对克隆出来的对象的属性做一些操作</span><br></pre></td></tr></table></figure><ul><li>__autoload(这是唯一的一个卸载类外的魔术方法)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">触发时机：  new 一个对象的时候，当前脚本没有这个类，那么就会触发这个方法</span><br><span class="line">参数：就是该类的类名字符串</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Person</span><br><span class="line">&#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    public $height;</span><br><span class="line">    public $age;</span><br><span class="line">    </span><br><span class="line">    fucntion __construct($name,$value)&#123;</span><br><span class="line">        $this -&gt; name = $name;</span><br><span class="line">        $this -&gt; age = $age;</span><br><span class="line">        $this - $height = $height;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">function __autoload($className)&#123;</span><br><span class="line">    $file = $className .&apos;.php&apos;;</span><br><span class="line">    include $file;</span><br><span class="line">&#125;</span><br><span class="line">$dog = new Dog();</span><br></pre></td></tr></table></figure><p>2. </p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;系统在特定的时机自动调用的方法&quot;&gt;&lt;a href=&quot;#系统在特定的时机自动调用的方法&quot; class=&quot;headerlink&quot; title=&quot;系统在特定的时机自动调用的方法&quot;&gt;&lt;/a&gt;系统在特定的时机自动调用的方法&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;常用的魔术方法&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;get /set&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;__get &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    触发时机：对象在外部访问私有成员或者受保护的属性时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    该方法有一个参数：参数就是属性名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    触发时机：对象在外部设置私有或者受保护成员值得时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    该方法有两个参数：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    参数1：成员的属性名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    参数2：要设置的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>2.继承</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-2.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-2.html</id>
    <published>2017-12-07T01:10:10.000Z</published>
    <updated>2019-02-19T00:37:48.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><h6 id="认识理解"><a href="#认识理解" class="headerlink" title="认识理解"></a>认识理解</h6><p>子类属性多于父类</p><h6 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h6><p>继承  派生<br><br>父类 ==》 子类</p><p>基类 ==》 派生类</p><p>单继承  子类只能有一个父类</p><a id="more"></a><h6 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h6><p>子类继承了父类  那么 就拥有了父类的属性和方法<br>子类拥有父类的所有属性，还有自己独有的属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Animal </span><br><span class="line">&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public function eat()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &apos;我会吃饭&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Person extends Animal </span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>访问权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public  公共的</span><br><span class="line">protected 受保护的</span><br><span class="line">private  私有的</span><br><span class="line"></span><br><span class="line">在类的外部  只可以直=直接访问 public</span><br><span class="line">public  和 protected 都可以被子类继承</span><br><span class="line">private  不可以被子类继承</span><br></pre></td></tr></table></figure><h6 id="重写（重载）"><a href="#重写（重载）" class="headerlink" title="重写（重载）"></a>重写（重载）</h6><p>完全重写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Father </span><br><span class="line">&#123;</span><br><span class="line">    public function jump()&#123;</span><br><span class="line">        echo &apos;我能跳3米&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Son extends Father</span><br><span class="line">&#123;</span><br><span class="line">    public function jump()&#123;</span><br><span class="line">        echo &apos;我能跳5米&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">$ming = new Son ();</span><br><span class="line">$ming -&gt; jump();</span><br></pre></td></tr></table></figure><!-- more --><p>重写分两种</p><pre><code>完全重写在父类的基础上增加一定的功能</code></pre><p>子类调用父类的方法是子类重写后的方法，父类还是调用父类的方法</p><p>在父类的基础上增加功能</p><p>parent::work();<br>先执行父类的方法  再执行自己的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">class Father </span><br><span class="line">&#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    public $age ;</span><br><span class="line">    public function __construct($name,$age)</span><br><span class="line">    &#123;</span><br><span class="line">        $this -&gt; name = $name ;</span><br><span class="line">        $this -&gt; age = $age;</span><br><span class="line">    &#125;</span><br><span class="line">    public function jump()&#123;</span><br><span class="line">        echo &apos;我能跳3米&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function work ()&#123;</span><br><span class="line">        echo &apos;接受偶尔加班&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Son extends Father</span><br><span class="line">&#123;   </span><br><span class="line">    public $height;</span><br><span class="line">    public $weight;</span><br><span class="line">    public function __construct($name,$age,$height,$weight)</span><br><span class="line">    &#123;</span><br><span class="line">        parent::__construct($name,$age);</span><br><span class="line">        $this -&gt;height = $height;</span><br><span class="line">        $this -&gt;weight = $weight;</span><br><span class="line">    &#125;</span><br><span class="line">    public function jump()&#123;</span><br><span class="line">        echo &apos;我能跳5米&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     public function work ()&#123;</span><br><span class="line">        parent::work();</span><br><span class="line">        echo &apos;不影响玩耍的情况下&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ming = new Son (&apos;ming&apos;,12,185,140);</span><br><span class="line">$ming -&gt; jump();</span><br><span class="line">$ming -&gt; work();</span><br><span class="line">var_dump($ming -&gt; name);</span><br><span class="line">var_dump($ming -&gt; age);</span><br><span class="line">var_dump($ming -&gt; height);</span><br><span class="line">var_dump($ming -&gt; weight);</span><br></pre></td></tr></table></figure></p><p>parent 关键字 (普通方法、构造方法)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parent::work();</span><br><span class="line">先调用父类的方法,然后增加自己功能</span><br></pre></td></tr></table></figure><p>final 关键字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">final :  修饰class , 代表这个类不能被继承</span><br><span class="line">final: 修饰method ,  代表这个方法不能被重写</span><br></pre></td></tr></table></figure></p><p>重写中的方法权限的修改<br>public ===&gt; public<br>protected ===&gt; protected public<br>重写的时候权限只能放大不能缩小</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h4&gt;&lt;h6 id=&quot;认识理解&quot;&gt;&lt;a href=&quot;#认识理解&quot; class=&quot;headerlink&quot; title=&quot;认识理解&quot;&gt;&lt;/a&gt;认识理解&lt;/h6&gt;&lt;p&gt;子类属性多于父类&lt;/p&gt;
&lt;h6 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h6&gt;&lt;p&gt;继承  派生&lt;br&gt;&lt;br&gt;父类 ==》 子类&lt;/p&gt;
&lt;p&gt;基类 ==》 派生类&lt;/p&gt;
&lt;p&gt;单继承  子类只能有一个父类&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>1.类和对象的概念</title>
    <link href="https://hexo.dulada.com/php-high-level-syntax-1.html"/>
    <id>https://hexo.dulada.com/php-high-level-syntax-1.html</id>
    <published>2017-12-06T01:10:10.000Z</published>
    <updated>2019-02-18T09:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类是抽象的概念，对象才是具体的事物"><a href="#类是抽象的概念，对象才是具体的事物" class="headerlink" title="类是抽象的概念，对象才是具体的事物"></a>类是抽象的概念，对象才是具体的事物</h1><p>人类：抽象的概念；<br>对象：科比、韦德；</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">----类-------|  对象</span><br><span class="line">汽车  | 路虎 |  你的路虎</span><br><span class="line">电脑  | Mac  |  你的mac</span><br></pre></td></tr></table></figure><p>官方概念：类是对象的抽象，对象是类的具象；</p><h4 id="类的简单使用"><a href="#类的简单使用" class="headerlink" title="类的简单使用"></a>类的简单使用</h4><p>属性和行为：<br>属性==&gt; 变量<br>行为==&gt; 方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">人类</span><br><span class="line">&#123;</span><br><span class="line">    年龄；</span><br><span class="line">    吃饭；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--定义类--&gt;</span><br><span class="line">class Person &#123;</span><br><span class="line">    public $age;</span><br><span class="line">    public function eat()&#123;</span><br><span class="line">        echo &apos;我在吃饭&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--定义对象--&gt;</span><br><span class="line">&lt;!--方法一--&gt;</span><br><span class="line">&lt;!--通过new关键字来创建一个对象--&gt;</span><br><span class="line">$xiaoming = new Person();</span><br><span class="line"></span><br><span class="line">&lt;!--方法二--&gt;</span><br><span class="line">通过类名子符串来创建对象</span><br><span class="line">$name = &apos;Person&apos;;</span><br><span class="line">$xiaoming = new $name();</span><br><span class="line"></span><br><span class="line">&lt;!--访问属性或方法：--&gt;</span><br><span class="line">&lt;!--访问属性----不加$符号--&gt;</span><br><span class="line">$xiaoming -&gt; age;</span><br><span class="line">&lt;!--访问方法---函数名 以小括号结尾--&gt;</span><br><span class="line">$xiaoming -&gt; eat();</span><br><span class="line"></span><br><span class="line">&lt;!--设置属性--&gt;</span><br><span class="line">$xiaoming -&gt; age = 18;</span><br></pre></td></tr></table></figure><p>大驼峰命名原则</p><h6 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h6><p>创建对象的时候初始化自动调用的魔术方法<br>__construct();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Person </span><br><span class="line">&#123;</span><br><span class="line">    public $name ;</span><br><span class="line">    public $age ;</span><br><span class="line">    </span><br><span class="line">    public function __construct($name,$age)</span><br><span class="line">    &#123;</span><br><span class="line">        &lt;!--在类里面访问自己的成员属性--&gt;</span><br><span class="line">        &lt;!--$this 代表的就是当前的对象--&gt;</span><br><span class="line">        $this -&gt; name = $name ;</span><br><span class="line">        $this -&gt; age = $age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public function test1 ()&#123;</span><br><span class="line">        echo &apos;今天天气真好&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function test2 ()&#123;</span><br><span class="line">        $this -&gt; test1();</span><br><span class="line">        eho &apos;适合出去走走~~&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$NIU = new Person (&apos;大牛&apos;，22)；</span><br><span class="line"></span><br><span class="line">&lt;!--$ming  = new Person(&apos;小明&apos;18)；--&gt;</span><br><span class="line">&lt;!--$niu = new Person(&apos;牛&apos;，20)--&gt;</span><br></pre></td></tr></table></figure><h6 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h6>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;类是抽象的概念，对象才是具体的事物&quot;&gt;&lt;a href=&quot;#类是抽象的概念，对象才是具体的事物&quot; class=&quot;headerlink&quot; title=&quot;类是抽象的概念，对象才是具体的事物&quot;&gt;&lt;/a&gt;类是抽象的概念，对象才是具体的事物&lt;/h1&gt;&lt;p&gt;人类：抽象的概念；&lt;br&gt;对象：科比、韦德；&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>13.正则</title>
    <link href="https://hexo.dulada.com/php-basics-13.html"/>
    <id>https://hexo.dulada.com/php-basics-13.html</id>
    <published>2017-11-26T01:18:10.000Z</published>
    <updated>2019-02-18T01:19:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h4><h6 id="定界符-推荐使用"><a href="#定界符-推荐使用" class="headerlink" title="定界符 推荐使用//"></a>定界符 推荐使用//</h6><blockquote><p>以下   不能做定界符<br><br>a-z A-Z 0-9 空格 \</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$str = &apos;abede&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/abc/&apos;;</span><br><span class="line"></span><br><span class="line">var_dump(preg_match($pattern,$str,$match));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var_dump();</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="原子-单位最小的"><a href="#原子-单位最小的" class="headerlink" title="原子(单位最小的 )"></a>原子(单位最小的 )</h6><p>a-z A-Z 0-9 空格 _</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$str = &apos;abede&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/abc/&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/\d/&apos;; //0-9</span><br><span class="line">$pattern = &apos;/\D/&apos;; //非0-9</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/\w/&apos;; //a-z A-Z 0-9  _</span><br><span class="line">$pattern = &apos;/\W/&apos;; //非a-z A-Z 0-9  _</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/\w/&apos;; //空格  回车  换行</span><br><span class="line">$pattern = &apos;/\W/&apos;; //非空格  回车  换行</span><br><span class="line"></span><br><span class="line">preg_match($pattern,$str,$match);</span><br><span class="line"></span><br><span class="line">var_dump($match);</span><br></pre></td></tr></table></figure><h6 id="原子表"><a href="#原子表" class="headerlink" title="原子表"></a>原子表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$str = &apos;aaaabedef&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/[a-z]/&apos;;// 指定范围  a-z</span><br><span class="line">$pattern = &apos;/[^a-z]/&apos;;// 指定范围 非 a-z</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--原子修饰符--&gt;</span><br><span class="line">$pattern = &apos;/./&apos;; //除了回车符以外的</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/A*/&apos;; //以A开头的(没有返回的数组的值为空)</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/a+/&apos;; //依次或多次匹配 a</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/a？/&apos;; //零次或者1次 </span><br><span class="line"></span><br><span class="line">$pattern = &apos;/a&#123;0,2&#125;/&apos;; //零次到2次 aa</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/a&#123;0,&#125;/&apos;; //零次到多次  aaaa</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/^a/&apos;; //以a开头的</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/^a.+f$/&apos;; //以a开头的 除回车符 依次 以f结尾的   aaaabedef </span><br><span class="line"></span><br><span class="line">&lt;!--模式修饰符--&gt;</span><br><span class="line">$pattern = &apos;/ABC/i&apos;; //不区分大小写    abc</span><br><span class="line"></span><br><span class="line">$str = &quot;bcd \nabc&quot;;</span><br><span class="line"></span><br><span class="line">$pattern= &apos;/^abc/m&apos;; //视为多行进行匹配  </span><br><span class="line"></span><br><span class="line">$str = &quot;bcdfg hh</span><br><span class="line">abc&quot;; </span><br><span class="line">$pattern= &apos;/^bcd.+abc$/s&apos;; //视为单行进行匹配  结果是：</span><br><span class="line">“bcdfg hh</span><br><span class="line">abc”</span><br><span class="line"></span><br><span class="line">$str = &quot;bcdfg hhhhh&quot;;</span><br><span class="line">$pattern= &apos;/h+/U&apos;; //取消依次匹配  只匹配一次</span><br><span class="line"></span><br><span class="line">preg_match($pattern,$str,$match);</span><br><span class="line"></span><br><span class="line">var_dump($match);</span><br></pre></td></tr></table></figure><p>简单的url匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">// $str = &apos;http://www.baidu.com&apos;;</span><br><span class="line">$str = &apos;www.baidu.com&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/(htttp|https)?(:\/\/)?(\w+.?)(\w+.?)(\w+.?)/&apos;;</span><br><span class="line"></span><br><span class="line">if(preg_match($pattern,$str,$match)) &#123;</span><br><span class="line">    echo &apos;匹配成功&apos;;</span><br><span class="line">    var_dump($match);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &apos;failed&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>preg_match_all — 执行一个全局正则表达式匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int preg_match_all( string $pattern, string $subject[, array &amp;$matches[, int $flags = PREG_PATTERN_ORDER[, int $offset = 0]]] )</span><br><span class="line"></span><br><span class="line">搜索subject中所有匹配pattern给定正则表达式的匹配结果并且将它们以flag指定顺序输出到matches中. </span><br><span class="line"></span><br><span class="line">在第一个匹配找到后, 子序列继续从最后一次匹配位置搜索.</span><br></pre></td></tr></table></figure><p>preg_replace — 执行一个正则表达式的搜索和替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace( mixed $pattern, mixed $replacement, mixed $subject[, int $limit = -1[, int &amp;$count]] )</span><br><span class="line"></span><br><span class="line">搜索subject中匹配pattern的部分，以replacement进行替换。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$string = &apos;&lt;div&gt;hello,world&lt;/div&gt;&apos;;</span><br><span class="line"></span><br><span class="line">$pattern = &apos;/&lt;div&gt;.*&lt;/div&gt;/&apos;;</span><br><span class="line"></span><br><span class="line">$replace = &apos;&lt;h1&gt; this is the replace&lt;/h1&gt;&apos;;</span><br><span class="line"></span><br><span class="line">$newStr = preg_replace($pattern,$replace,$string);</span><br><span class="line">var_dump($newStr);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;正则&quot;&gt;&lt;a href=&quot;#正则&quot; class=&quot;headerlink&quot; title=&quot;正则&quot;&gt;&lt;/a&gt;正则&lt;/h4&gt;&lt;h6 id=&quot;定界符-推荐使用&quot;&gt;&lt;a href=&quot;#定界符-推荐使用&quot; class=&quot;headerlink&quot; title=&quot;定界符 推荐使用//&quot;&gt;&lt;/a&gt;定界符 推荐使用//&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;以下   不能做定界符&lt;br&gt;&lt;br&gt;a-z A-Z 0-9 空格 \&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$str = &amp;apos;abede&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$pattern = &amp;apos;/abc/&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump(preg_match($pattern,$str,$match));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>12.文件上传</title>
    <link href="https://hexo.dulada.com/php-basics-12.html"/>
    <id>https://hexo.dulada.com/php-basics-12.html</id>
    <published>2017-11-26T01:10:10.000Z</published>
    <updated>2019-02-18T01:17:58.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><h6 id="常见的错误号"><a href="#常见的错误号" class="headerlink" title="常见的错误号"></a>常见的错误号</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">UPLOAD_ERR_OK</span><br><span class="line">其值为 0，没有错误发生，文件上传成功。 </span><br><span class="line">UPLOAD_ERR_INI_SIZE</span><br><span class="line">其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。 </span><br><span class="line">UPLOAD_ERR_FORM_SIZE</span><br><span class="line">其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。 </span><br><span class="line">UPLOAD_ERR_PARTIAL</span><br><span class="line">其值为 3，文件只有部分被上传。 </span><br><span class="line">UPLOAD_ERR_NO_FILE</span><br><span class="line">其值为 4，没有文件被上传。 </span><br><span class="line">UPLOAD_ERR_NO_TMP_DIR</span><br><span class="line">其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。 </span><br><span class="line">UPLOAD_ERR_CANT_WRITE</span><br><span class="line">其值为 7，文件写入失败。PHP 5.1.0 引进。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Note: </span><br><span class="line"></span><br><span class="line">以上值在 PHP 4.3.0 之后变成了 PHP 常量。</span><br></pre></td></tr></table></figure><a id="more"></a><p>html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=&quot;32.upload.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot;   value = &quot;10&quot;&gt; --&gt;</span><br><span class="line">        &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;上传&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    var_dump($_FILES);</span><br><span class="line"></span><br><span class="line">    //根据 错误号 判断</span><br><span class="line">    // var_dump($_FILES[&apos;file&apos;][&apos;tmp_name&apos;]);</span><br><span class="line"></span><br><span class="line">    if($_FILES[&apos;file&apos;][&apos;error&apos;])&#123;</span><br><span class="line">        switch($_FILES[&apos;file&apos;][&apos;error&apos;])&#123;</span><br><span class="line">            case 1:</span><br><span class="line">                $str = &apos;上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。 &apos;;</span><br><span class="line">                break;</span><br><span class="line">            case 2:</span><br><span class="line">                $str = &apos;上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。 &apos;;</span><br><span class="line">                break;</span><br><span class="line">            case 3:</span><br><span class="line">                $str = &apos;文件只有部分被上传。 &apos;;</span><br><span class="line">                break;</span><br><span class="line">            case 4:</span><br><span class="line">                $str = &apos;没有文件被上传。 &apos;;</span><br><span class="line">                break;</span><br><span class="line">            case 6:</span><br><span class="line">                $str = &apos;找不到临时文件夹。&apos;;</span><br><span class="line">                break;</span><br><span class="line">            case 7:</span><br><span class="line">                $str = &apos;文件写入失败。&apos;;</span><br><span class="line">                break;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        echo $str;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //判断准许的文件的大小</span><br><span class="line">    $file_Size = (pow(1024,2)*2);</span><br><span class="line">    // echo $file_Size;</span><br><span class="line">    if($_FILES[&apos;file&apos;][&apos;size&apos;]&gt;$file_Size)&#123;</span><br><span class="line">        exit(&apos;文件的大小超过了准许的范围&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    //判断准许的Mime类型 文件的后缀</span><br><span class="line">    $allowMime = [&apos;image/png&apos;,&apos;image/jpeg&apos;,&apos;image/gif&apos;,&apos;image/wbmp&apos;];</span><br><span class="line"></span><br><span class="line">    $allowSubFix = [&apos;png&apos;,&apos;jpeg&apos;,&apos;gif&apos;,&apos;wbmp&apos;,&apos;jpg&apos;];</span><br><span class="line"></span><br><span class="line">    $info = pathinfo($_FILES[&apos;file&apos;][&apos;name&apos;]);</span><br><span class="line">    // var_dump($info);</span><br><span class="line">    $subFix = $info[&apos;extension&apos;];</span><br><span class="line"></span><br><span class="line">    if(!in_array($subFix,$allowSubFix))&#123;</span><br><span class="line">        exit (&apos;不准许的文件后缀&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(!in_array($_FILES[&apos;file&apos;][&apos;type&apos;],$allowMime))&#123;</span><br><span class="line">        exit(&apos;不准许的mime类型&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //拼接上传路径</span><br><span class="line"></span><br><span class="line">    $path = &apos;upload/&apos;;</span><br><span class="line"></span><br><span class="line">    if(!file_exists($path))&#123;</span><br><span class="line">        mkdir($path);</span><br><span class="line">    &#125;</span><br><span class="line">    var_dump($path);</span><br><span class="line">    //文件名随机</span><br><span class="line">    $name = uniqid().&apos;.&apos;.$subFix;</span><br><span class="line"></span><br><span class="line">    //判断是否是上传文件</span><br><span class="line">    // var_dump(is_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;]));</span><br><span class="line">    </span><br><span class="line">    if (is_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;])) &#123;</span><br><span class="line">        if(move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;], $path.$name))&#123;</span><br><span class="line">            echo &apos;上传文件成功&apos;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &apos;上传文件失败&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &apos;不是上传文件&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;文件上传&quot;&gt;&lt;a href=&quot;#文件上传&quot; class=&quot;headerlink&quot; title=&quot;文件上传&quot;&gt;&lt;/a&gt;文件上传&lt;/h4&gt;&lt;h6 id=&quot;常见的错误号&quot;&gt;&lt;a href=&quot;#常见的错误号&quot; class=&quot;headerlink&quot; title=&quot;常见的错误号&quot;&gt;&lt;/a&gt;常见的错误号&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 0，没有错误发生，文件上传成功。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_INI_SIZE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 1，上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_FORM_SIZE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 2，上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_PARTIAL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 3，文件只有部分被上传。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_NO_FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 4，没有文件被上传。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_NO_TMP_DIR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 6，找不到临时文件夹。PHP 4.3.10 和 PHP 5.0.3 引进。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UPLOAD_ERR_CANT_WRITE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其值为 7，文件写入失败。PHP 5.1.0 引进。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;以上值在 PHP 4.3.0 之后变成了 PHP 常量。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>11.文件操作</title>
    <link href="https://hexo.dulada.com/php-basics-11.html"/>
    <id>https://hexo.dulada.com/php-basics-11.html</id>
    <published>2017-11-25T01:10:10.000Z</published>
    <updated>2019-02-18T01:17:08.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">readfile(a.txt);</span><br><span class="line"></span><br><span class="line">var_dump(file(&apos;a.txt&apos;));//输出文本内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file_get_contents();</span><br><span class="line"></span><br><span class="line">var_dump(file_get_contents())//原样输出文本内容</span><br><span class="line"></span><br><span class="line">file_put_contents(&apos;a.txt&apos;,&apos;这是新写入的内容&apos;);</span><br><span class="line">var_dump(file_put_contents());//文本（没有新建）  覆盖添加内容</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//fopen() 将 filename 指定的名字资源绑定到一个流上。 </span><br><span class="line">$fp = fopen(&apos;a.txt&apos;,&apos;r&apos;);</span><br><span class="line"></span><br><span class="line">var_dump($fp);//打开目录文件  返回的是一个资源</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mode 参数指定了所要求到该流的访问类型。可以是以下： </span><br><span class="line"></span><br><span class="line">fopen() 中 mode 的可能值列表 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mode</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&apos;r&apos; 只读方式打开，将文件指针指向文件头。  </span><br><span class="line">&apos;r+&apos; 读写方式打开，将文件指针指向文件头。  </span><br><span class="line">&apos;w&apos; 写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。  </span><br><span class="line">&apos;w+&apos; 读写方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。  </span><br><span class="line">&apos;a&apos; 写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。  </span><br><span class="line">&apos;a+&apos; 读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。  </span><br><span class="line">&apos;x&apos; 创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则 fopen() 调用失败并返回 FALSE，并生成一条 E_WARNING 级别的错误信息。如果文件不存在则尝试创建之。这和给底层的 open(2) 系统调用指定 O_EXCL|O_CREAT 标记是等价的。  </span><br><span class="line">&apos;x+&apos; 创建并以读写方式打开，其他的行为和 &apos;x&apos; 一样。</span><br></pre></td></tr></table></figure><p>f系列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> fwrite( resource $handle, string $string[, int $length] )</span><br><span class="line"></span><br><span class="line">fwrite() 把 string 的内容写入文件指针 handle 处。 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$filename = &apos;test.txt&apos;;</span><br><span class="line">$somecontent = &quot;添加这些文字到文件\n&quot;;</span><br><span class="line"></span><br><span class="line">// 首先我们要确定文件存在并且可写。</span><br><span class="line">if (is_writable($filename)) &#123;</span><br><span class="line"></span><br><span class="line">    // 在这个例子里，我们将使用添加模式打开$filename，</span><br><span class="line">    // 因此，文件指针将会在文件的末尾，</span><br><span class="line">    // 那就是当我们使用fwrite()的时候，$somecontent将要写入的地方。</span><br><span class="line">    if (!$handle = fopen($filename, &apos;a&apos;)) &#123;</span><br><span class="line">         echo &quot;不能打开文件 $filename&quot;;</span><br><span class="line">         exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 将$somecontent写入到我们打开的文件中。</span><br><span class="line">    if (fwrite($handle, $somecontent) === FALSE) &#123;</span><br><span class="line">        echo &quot;不能写入到文件 $filename&quot;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    echo &quot;成功地将 $somecontent 写入到文件$filename&quot;;</span><br><span class="line"></span><br><span class="line">    fclose($handle);</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;文件 $filename 不可写&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参见</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">•fread() - 读取文件（可安全用于二进制文件）</span><br><span class="line">•fopen() - 打开文件或者 URL</span><br><span class="line">•fsockopen() - 打开一个网络连接或者一个Unix套接字连接</span><br><span class="line">•popen() - 打开进程文件指针</span><br><span class="line">•file_get_contents() - 将整个文件读入一个字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">•fwrite() - 写入文件（可安全用于二进制文件）</span><br><span class="line"></span><br><span class="line">•fgets() - 从文件指针中读取一行</span><br><span class="line">•fgetss() - 从文件指针中读取一行并过滤掉 HTML 标记</span><br><span class="line">•fscanf() - 从文件中格式化输入</span><br><span class="line">•file() - 把整个文件读入一个数组中</span><br><span class="line">•fpassthru() - 输出文件指针处的所有剩余数据</span><br><span class="line">•ftell() - 返回文件指针读/写的位置</span><br><span class="line">•rewind() - 倒回文件指针的位置</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">fclose — 关闭一个已打开的文件指针</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line"></span><br><span class="line">bool fclose( resource $handle)</span><br><span class="line"></span><br><span class="line">将 handle 指向的文件关闭。</span><br></pre></td></tr></table></figure><p>pathinfo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$path_parts = pathinfo(&apos;/www/htdocs/inc/lib.inc.php&apos;);</span><br><span class="line"></span><br><span class="line">echo $path_parts[&apos;dirname&apos;], &quot;\n&quot;;</span><br><span class="line">echo $path_parts[&apos;basename&apos;], &quot;\n&quot;;</span><br><span class="line">echo $path_parts[&apos;extension&apos;], &quot;\n&quot;;</span><br><span class="line">echo $path_parts[&apos;filename&apos;], &quot;\n&quot;; // since PHP 5.2.0</span><br><span class="line">?&gt;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以上例程会输出：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/www/htdocs/inc</span><br><span class="line">lib.inc.php</span><br><span class="line">php</span><br><span class="line">lib.inc</span><br></pre></td></tr></table></figure></p><p>basename  获取的是文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">string dirname( string $path)</span><br><span class="line"></span><br><span class="line">给出一个包含有指向一个文件的全路径的字符串，本函数返回去掉文件名后的目录名。</span><br><span class="line">``` </span><br><span class="line">http_build_query</span><br></pre></td></tr></table></figure><p>http_build_query — 生成 URL-encode 之后的请求字符串</p><p>说明</p><p>string http_build_query( mixed $query_data[, string $numeric_prefix[, string $arg_separator[, int $enc_type = PHP_QUERY_RFC1738]]] )</p><p>使用给出的关联（或下标）数组生成一个经过 URL-encode 的请求字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parse_url</span><br></pre></td></tr></table></figure><p>parse_url — 解析 URL，返回其组成部分</p><p>说明</p><p>mixed parse_url( string $url[, int $component = -1] )</p><p>本函数解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。 </p><p>本函数不是用来验证给定 URL 的合法性的，只是将其分解为下面列出的部分。不完整的 URL 也被接受，parse_url() 会尝试尽量正确地将其解析。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parse_str</span><br></pre></td></tr></table></figure><p>parse_str — 将字符串解析成多个变量</p><p>说明</p><p>void parse_str( string $str[, array &amp;$arr] )</p><p>如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域。 </p><p>Note: </p><p>获取当前的 QUERY_STRING，你可以使用 $_SERVER[‘QUERY_STRING’] 变量。同时，你也许该阅读 来自 PHP 之外的变量 这一节。 </p><p>Note: </p><p>magic_quotes_gpc 影响到了 parse_str() 这个函数的输出，和 PHP 用于填充 $_GET、 $_POST 及其他变量的机制一致。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file_exists()//文件是否存在</p><p>is_file()//<br>is_dir();<br>is_writeable();<br>is_executable();//是否可执行</p><p>chmod();<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">关于目录</span><br></pre></td></tr></table></figure></p><p>mkdir(‘test1’);</p><p>mkdir(‘test/a/b/c’,0777,true);</p><p>rmdie  (‘test1’);//删除当前路径没有子目录的目录</p><p>$dir = opendir(‘test’);</p><p>/<em><br>echo readdir($dir); //.<br>echo readdir($dir); //..<br>echo readdir($dir); //a<br>closedir($dir);</em>/</p><p>unlink(‘a.txt’);//删除文件</p><p>copy(‘a.txt’,’b.txt’);</p><p>rename(‘bb.txt’,’ab.php’);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">递归删除多级目录</span><br></pre></td></tr></table></figure></p><p>rm(‘test’);<br>function rm($path){<br>//打开目录<br>    $dir = opendir($path);<br>    //跳过两层特殊目录 . ..<br>    readdir($dir);<br>    readdir($dir);</p><pre><code>//循环删除while($newFile = readdir($dir)) {    //判断是否是文件还是文件夹    $newPath  = $path .&apos;/&apos;.$newFile;    if(is_file($newFile){        unlink($newPath);    }else {        rm($newPath)    }}closedir($dir);rmdir($path);</code></pre><p>}<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;readfile(a.txt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump(file(&amp;apos;a.txt&amp;apos;));//输出文本内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_get_contents();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump(file_get_contents())//原样输出文本内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_put_contents(&amp;apos;a.txt&amp;apos;,&amp;apos;这是新写入的内容&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump(file_put_contents());//文本（没有新建）  覆盖添加内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>10.gd库</title>
    <link href="https://hexo.dulada.com/php-basics-10.html"/>
    <id>https://hexo.dulada.com/php-basics-10.html</id>
    <published>2017-11-24T01:10:10.000Z</published>
    <updated>2019-02-18T01:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>mime文件的类型</p><p>位置：</p><blockquote><p>wamp64&gt;bin&gt;apache&gt;apache2.4.17&gt;conf&gt;mime.types</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">image/bmpbmp</span><br><span class="line">image/cgmcgm</span><br><span class="line"># image/example</span><br><span class="line"># image/fits</span><br><span class="line">image/g3faxg3</span><br><span class="line">image/gifgif</span><br><span class="line">image/iefief</span><br><span class="line"># image/jp2</span><br><span class="line">image/jpegjpeg jpg jpe</span><br><span class="line"># image/jpm</span><br><span class="line"># image/jpx</span><br><span class="line">image/ktxktx</span><br><span class="line"># image/naplps</span><br><span class="line">image/pngpng</span><br><span class="line">image/prs.btifbtif</span><br><span class="line"># image/prs.pti</span><br><span class="line">image/sgisgi</span><br><span class="line">image/svg+xmlsvg svgz</span><br><span class="line"># image/t38</span><br><span class="line">image/tifftiff tif</span><br><span class="line"># image/tiff-fx</span><br><span class="line">image/vnd.adobe.photoshoppsd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># video/1d-interleaved-parityfec</span><br><span class="line">video/3gpp3gp</span><br><span class="line"># video/3gpp-tt</span><br><span class="line">video/3gpp23g2</span><br><span class="line"># video/bmpeg</span><br><span class="line"># video/bt656</span><br><span class="line"># video/celb</span><br><span class="line"># video/dv</span><br><span class="line"># video/example</span><br><span class="line">video/h261h261</span><br><span class="line">video/h263h263</span><br><span class="line"># video/h263-1998</span><br><span class="line"># video/h263-2000</span><br><span class="line">video/h264h264</span><br><span class="line"># video/h264-rcdo</span><br><span class="line"># video/h264-svc</span><br><span class="line">video/jpegjpgv</span><br><span class="line"># video/jpeg2000</span><br><span class="line">video/jpmjpm jpgm</span><br><span class="line">video/mj2mj2 mjp2</span><br><span class="line"># video/mp1s</span><br><span class="line"># video/mp2p</span><br><span class="line"># video/mp2t</span><br><span class="line">video/mp4mp4 mp4v mpg4</span><br><span class="line"># video/mp4v-es</span><br><span class="line">video/mpegmpeg mpg mpe m1v m2v</span><br><span class="line"># video/mpeg4-generic</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># audio/1d-interleaved-parityfec</span><br><span class="line"># audio/32kadpcm</span><br><span class="line"># audio/3gpp</span><br><span class="line"># audio/3gpp2</span><br><span class="line"># audio/ac3</span><br><span class="line">audio/adpcmadp</span><br><span class="line"># audio/amr</span><br><span class="line"># audio/amr-wb</span><br><span class="line"># audio/amr-wb+</span><br><span class="line"># audio/asc</span><br><span class="line"># audio/atrac-advanced-lossless</span><br><span class="line"># audio/atrac-x</span><br><span class="line"># audio/atrac3</span><br><span class="line">audio/basicau snd</span><br><span class="line"># audio/bv16</span><br><span class="line"># audio/bv32</span><br><span class="line"># audio/clearmode</span><br><span class="line"># audio/cn</span><br><span class="line"># audio/dat12</span><br><span class="line"># audio/dls</span><br><span class="line"># audio/dsr-es201108</span><br><span class="line"># audio/dsr-es202050</span><br><span class="line"># audio/dsr-es202211</span><br><span class="line"># audio/dsr-es202212</span><br><span class="line"># audio/dv</span><br><span class="line"># audio/dvi4</span><br><span class="line"># audio/eac3</span><br><span class="line"># audio/evrc</span><br><span class="line"># audio/evrc-qcp</span><br><span class="line"># audio/evrc0</span><br><span class="line"># audio/evrc1</span><br><span class="line"># audio/evrcb</span><br><span class="line"># audio/evrcb0</span><br><span class="line"># audio/evrcb1</span><br></pre></td></tr></table></figure><h4 id="GD"><a href="#GD" class="headerlink" title="GD"></a>GD</h4><p>图像处理函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//创建画布</span><br><span class="line">$image = imagecreatetruecolor(600,600);</span><br><span class="line">// var_dump($image);</span><br><span class="line">// 创建颜色</span><br><span class="line">$green = imagecolorallocate($image,0,255,0);</span><br><span class="line">$red = imagecolorallocate($image,255,0,0);</span><br><span class="line">// 用gd库给咱们的函数去画画</span><br><span class="line">imageline($image,0,0,600,600,$red);</span><br><span class="line">imagefilledrectangle($image,10,10,50,50,$green);</span><br><span class="line">// 告诉浏览器mime类型</span><br><span class="line">header(&quot;Content-type:image/png&quot;);</span><br><span class="line">// 输出到浏览器或者可以存放你的本地</span><br><span class="line">imagepng($image);</span><br><span class="line">// 销毁资源</span><br><span class="line">imagedestroy($image);</span><br></pre></td></tr></table></figure><p>关于gd的相关函数</p><ol><li>imagecreatetruecolor //创建一个画布</li><li>imagecolorallocate //为一副图像分配颜色</li><li>imagefill 填充</li><li>imageline 画线</li><li>输出</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">imagepng //输出（资源） 可以填写两个参数 一个：资源 两个：路径  文件名</span><br><span class="line">imagejpeg</span><br><span class="line">imagegif</span><br><span class="line">imagewbmp</span><br></pre></td></tr></table></figure><p>形状<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">imagereactangle   矩形</span><br><span class="line">imagefilledreactangle 矩形并填充</span><br><span class="line">imagesetpixel 画像素 </span><br><span class="line">imagepolygon   画多边形</span><br><span class="line">imageellipse 椭圆</span><br><span class="line">imagefilledpolygon 多边形并填充</span><br><span class="line">imagefilledellipse 椭圆并填充</span><br><span class="line">imagefilledarc 饼状图</span><br></pre></td></tr></table></figure></p><p>打开图片生成一个新的图片<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">imagecreatefromjpeg</span><br><span class="line">imagecreatefromgif</span><br><span class="line">imagecreatefrombmp</span><br><span class="line">imagecreatefrompng</span><br></pre></td></tr></table></figure></p><p>注意</p><p>告知浏览器文件的类型</p><blockquote><p>header(‘Content-type:image/png’);</p></blockquote><p>旋转</p><blockquote><p>imagerotate</p></blockquote><p>写字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imagestring 水平地画一行字符串， 不能写中文</span><br><span class="line">imagechar 画一个  不能中文</span><br><span class="line">imagettftext 可以写汉字（资源，字体大小，角度，坐标x,坐标y,颜色，样式（你从window,font),你要写的字符串）</span><br></pre></td></tr></table></figure></p><p>拷贝并且合并<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imagecopy</span><br><span class="line">imagecoopymerge</span><br><span class="line">   imagecopymerge ($dst,$src,152,305,0,0,266,280 ,100);</span><br><span class="line">   大图  戳 大图的开始坐标X,Y 小图 x y 小图的宽 高 透明度</span><br><span class="line">imagecopyresampled</span><br><span class="line">imagecopyresampled($dst, $src, 155, 310, 264,  300,  300, 144, 127);</span><br><span class="line">                    大图 小图  大X  大Y  小X  小Y 缩放 你测出来的宽 高</span><br></pre></td></tr></table></figure></p><p>获取图片的信息</p><blockquote><p>getimagesize(‘图片资源’)； 获取图片的信息</p></blockquote><p>相关函数 创建图片资源函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">imagecreatetruecolor</span><br><span class="line">imagecreatefromjpeg</span><br><span class="line">imagecreatefromgif</span><br><span class="line">imagecreatefromwbmp</span><br><span class="line">imagecreatefrompng</span><br><span class="line">imagecolorallocate</span><br><span class="line">imagefilledreactangle</span><br><span class="line">imagesetpixel</span><br><span class="line">imageline</span><br><span class="line">imagereactangle</span><br><span class="line">imagepolygon</span><br><span class="line">imageellipse</span><br><span class="line">imagearc</span><br><span class="line"> </span><br><span class="line">imagefelledreactangle</span><br><span class="line">imagefilledpolygon</span><br><span class="line">imagefilledellpse</span><br><span class="line">imagefilledarc</span><br><span class="line">imagerotate</span><br><span class="line">imagestring</span><br><span class="line">imagechar</span><br><span class="line">imagettftext</span><br><span class="line">imagepng($img,[&apos;path&apos;])</span><br><span class="line">imagejpeg</span><br><span class="line">imagegif</span><br><span class="line">imagedestroy</span><br><span class="line">imagecopy</span><br><span class="line">imagecopymerge</span><br><span class="line">imagecoopyresampled</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mime文件的类型&lt;/p&gt;
&lt;p&gt;位置：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wamp64&amp;gt;bin&amp;gt;apache&amp;gt;apache2.4.17&amp;gt;conf&amp;gt;mime.types&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>9.cookie 与  session</title>
    <link href="https://hexo.dulada.com/php-basics-9.html"/>
    <id>https://hexo.dulada.com/php-basics-9.html</id>
    <published>2017-11-24T01:09:10.000Z</published>
    <updated>2019-02-18T01:09:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>cookie<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&apos;name&apos;,&apos;zhangsan&apos;,time()+60,&apos;/&apos;);</span><br></pre></td></tr></table></figure></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var_dump($_GET);</span><br><span class="line"></span><br><span class="line">//  $username = $_GET[&apos;username&apos;];</span><br><span class="line">$username = &apos;susan&apos;;</span><br><span class="line">$password = &apos;123qwe&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_GET[&apos;username&apos;] == $username &amp;&amp; $_GET[&apos;password&apos;] == $password)&#123;</span><br><span class="line">    setcookie(&apos;username&apos;,$username,time()+60*60,&apos;/&apos;);</span><br><span class="line">    echo &apos;is ok&apos;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &apos;is failed&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&apos;username&apos;,&apos;&apos;,time()-1,&apos;/&apos;);</span><br><span class="line"></span><br><span class="line">var_dump($_COOKIE);</span><br></pre></td></tr></table></figure><p>session</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$_SESSION[&apos;username&apos;] =&apos;lisi&apos;;</span><br><span class="line"></span><br><span class="line">$_SESSION[&apos;password&apos;] = &apos;qweasd&apos;;</span><br><span class="line"></span><br><span class="line">var_dump($_SESSION);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// session_destroy();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var_dump($_GET);</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$username = &apos;quer&apos;;</span><br><span class="line">$password = &apos;qazwsx&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_GET[&apos;username&apos;] ==$username &amp;&amp; $_GET[&apos;password&apos;] == $password)&#123;</span><br><span class="line">    echo &apos; is ok&apos;;</span><br><span class="line">    $_SESSION[&apos;username&apos;] = $username;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &apos;was failed&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">unset($_SESSION[&apos;username&apos;]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session_destroy();</span><br><span class="line">// $_SESSION[&apos;username&apos;]</span><br><span class="line"></span><br><span class="line">var_dump($_SESSION);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cookie&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setcookie(&amp;apos;name&amp;apos;,&amp;apos;zhangsan&amp;apos;,time()+60,&amp;apos;/&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>8.php操作mysql</title>
    <link href="https://hexo.dulada.com/php-basics-8.html"/>
    <id>https://hexo.dulada.com/php-basics-8.html</id>
    <published>2017-11-23T01:05:10.000Z</published>
    <updated>2019-02-18T01:06:58.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="php-mysqli操作mysql"><a href="#php-mysqli操作mysql" class="headerlink" title="php  mysqli操作mysql"></a>php  mysqli操作mysql</h4><ol><li><p>链接数据库<br>$link = mysqli_connect(‘localhost’,’root’,’123456’);</p></li><li><p>判断是否链接成功</p></li></ol><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(!$link)&#123;</span><br><span class="line">    exit(&apos;数据库链接失败&apos;)；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>设置字符集</li></ol><p>mysqli_set_charset($link , ‘utf-8’);</p><ol start="4"><li>选择数据库</li></ol><p>mysqli_select_db($link,’koa’);</p><ol start="5"><li>准备sql语句</li></ol><p>$sql = “select * from bbs_user”;</p><ol start="6"><li>发送sql语句</li></ol><p>$res = mysqli_query($link,$sql);</p><ol start="7"><li>处理结果集</li></ol><p>$result = mysqli_fetch_assoc($res);</p><ol start="8"><li>关闭数据库</li></ol><p>mysqli_close($link);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//链接数据库</span><br><span class="line">$link = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;toor&apos;);</span><br><span class="line">// 判断是否链接成功</span><br><span class="line">if(!$link)&#123;</span><br><span class="line">    exit (&apos;数据库连接失败&apos;);</span><br><span class="line">&#125;</span><br><span class="line">//设置字符</span><br><span class="line">mysqli_set_charset($link , &apos;utf-8&apos;);</span><br><span class="line">//选择数据库</span><br><span class="line">mysqli_select_db($link,&apos;koa&apos;);</span><br><span class="line">//准备sql语句</span><br><span class="line">$sql = &quot;select * from bbs_user&quot;;</span><br><span class="line">// 发送sql语句</span><br><span class="line">$res = mysqli_query($link,$sql);</span><br><span class="line">//处理结果集</span><br><span class="line">$result = mysqli_fetch_assoc($res);</span><br><span class="line">//关闭数据库</span><br><span class="line">mysqli_close($link);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;php-mysqli操作mysql&quot;&gt;&lt;a href=&quot;#php-mysqli操作mysql&quot; class=&quot;headerlink&quot; title=&quot;php  mysqli操作mysql&quot;&gt;&lt;/a&gt;php  mysqli操作mysql&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;链接数据库&lt;br&gt;$link = mysqli_connect(‘localhost’,’root’,’123456’);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;判断是否链接成功&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>7.MySQL</title>
    <link href="https://hexo.dulada.com/php-basics-7.html"/>
    <id>https://hexo.dulada.com/php-basics-7.html</id>
    <published>2017-11-22T01:05:10.000Z</published>
    <updated>2019-02-18T01:09:10.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><p>windows 下 我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 里面path : 修改  （复制 php环境下 的  mysql 的bin 目录  复制  -&gt;黏贴 （注意分号））;</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">//链接mysql cmd</span><br><span class="line"> mysql -uroot -p</span><br><span class="line"> 输入密码</span><br><span class="line"> </span><br><span class="line"> //退出</span><br><span class="line"> quit</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> //直接后面跟密码的方式：</span><br><span class="line"> mysql -uroot -p password</span><br><span class="line"> </span><br><span class="line"> //清空</span><br><span class="line"> cls</span><br><span class="line"> //结束</span><br><span class="line"> \c</span><br><span class="line"> </span><br><span class="line"> //帮助</span><br><span class="line"> \h</span><br><span class="line"> //查看当前库</span><br><span class="line"> show databases;</span><br><span class="line"> </span><br><span class="line"> //创建库</span><br><span class="line"> create database name;</span><br><span class="line"> </span><br><span class="line"> //删除库</span><br><span class="line"> drop database name;</span><br><span class="line"> </span><br><span class="line"> //使用库</span><br><span class="line"> use name;</span><br><span class="line"> //创建表</span><br><span class="line"> create table user&lt;id int,username varchar&lt;40&gt;,password varchar&lt;32&gt;&gt;;</span><br><span class="line"> &lt;!--id -- id--&gt;</span><br><span class="line"> &lt;!--int -- id类型--&gt;</span><br><span class="line"> &lt;!--varchar --更灵活的字符串--&gt;</span><br><span class="line"> </span><br><span class="line"> //显示表</span><br><span class="line"> show tables;</span><br><span class="line"> &lt;!--显示具体的表的语句--&gt;</span><br><span class="line"> show create table name;</span><br><span class="line"> &lt;!--显示创建库的语句--&gt;</span><br><span class="line"> show create database name;</span><br><span class="line"> &lt;!--删除表--&gt;</span><br><span class="line"> drop tables name;</span><br><span class="line"> &lt;!--查看表结构--&gt;</span><br><span class="line"> desc user;</span><br><span class="line"> &lt;!--修改表字段--&gt;</span><br><span class="line"> alter table name change password varchar&lt;45&gt;;</span><br><span class="line"> &lt;!--删除表字段--&gt;</span><br><span class="line"> alter table name drop password;</span><br><span class="line"> &lt;!--添加表字段--&gt;</span><br><span class="line"> &lt;!--插入第一个--&gt;</span><br><span class="line"> alter table name add pass varchar&lt;32&gt; first; </span><br><span class="line"> &lt;!--插入在name之后--&gt;</span><br><span class="line"> alter table name add pass varchar&lt;32&gt; after name ; </span><br><span class="line"> </span><br><span class="line"> &lt;!--修改表名字--&gt;</span><br><span class="line"> alter table user rename user_table;</span><br><span class="line"> &lt;!--查看当前表在哪个库目录下--&gt;</span><br><span class="line"> select database&lt;&gt;;</span><br></pre></td></tr></table></figure><p>想在一个库里面建表的时候  首先要记得use 使用当前的库</p><p>use库名</p><ul><li>创建表</li><li><ul><li>create table 表名 (id int,name varchar(35) .price int)</li></ul></li><li><ul><li>id name price 是字段 后面的限制是类型</li></ul></li><li>删除表</li><li><ul><li>drop table 表名字 </li></ul></li><li>查看表结构</li><li><ul><li>show create database 库名字</li></ul></li><li>查看建库语句、</li><li><ul><li>show create table 表名字</li></ul></li><li>修改表字段值</li><li><ul><li>alter table 表名 modify 字段名字  修改后的值；</li></ul></li><li>修改表字段</li><li><ul><li>alter table 表名 change 原来的字段名 修改后字段名（你要修改成为的类型）</li></ul></li><li>添加表字段</li><li><ul><li>alter table 表名 add 字段名字（字段类型）</li></ul></li><li>删除表字段</li><li><ul><li>alter table drop 字段名字</li></ul></li><li>插入顺序问题</li><li><ul><li>first</li></ul></li><li><ul><li><ul><li>alert table 表名 add 你要添加的字段（字段类型） first</li></ul></li></ul></li><li><ul><li>after</li></ul></li><li><ul><li><ul><li>alter table 表名 add 你要添加的字段名字（字段类型） after （在谁的后面）</li></ul></li></ul></li><li>修改表名字</li><li><ul><li>alter table 原表名 rename 新的名字</li></ul></li><li><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4></li></ul><ol><li>整型</li></ol><table><thead><tr><th>整型</th><th>所占字节</th><th>取值范围</th></tr></thead><tbody><tr><td>tinyint</td><td>1字节</td><td>-128~127</td></tr><tr><td>smallint</td><td>2 字节</td><td>-32768~32767</td></tr><tr><td>mediumint</td><td>3字节</td><td>-8388608~8388607</td></tr><tr><td>int</td><td>4字节</td><td>-2147483648~2147483647</td></tr><tr><td>bigint</td><td>8字节</td><td>+-9.22*10的18次方</td></tr></tbody></table><ol start="2"><li><p>浮点类型</p><p>整型|所占字节|取值范围<br>—|—|—<br>float(m,d)|4字节|单精度浮点型，m总个数，d小数位<br>double(m,d)| 8 字节|双精度浮点型，m总个数，d小数位<br>decimal(m,d)||decimal 是储存为字符串的浮点数</p></li><li>字符类型</li></ol><table><thead><tr><th>整型</th><th>所占字节</th><th>取值范围</th></tr></thead><tbody><tr><td>char</td><td>0-255字节</td><td>定长字符串</td></tr><tr><td>varchar</td><td>0-655355字节</td><td>变长字符串</td></tr></tbody></table><ol start="4"><li>时间类型</li><li>整型|所占字节|取值范围<br>—|—|—<br>date|4字节|日期，格式：2018-08-08</li><li>auto_increment<br>自动增加，值用于整型，可以设置初始值，默认值为1 <br><br>常与后面primary key 一起使用 <br><br>创建表时在整型字段后加上： auto_increment = 起始值 primary key <br><br>修改起始值 ： alter table user auto_increment = 起始值</li></ol><h4 id="表"><a href="#表" class="headerlink" title="表"></a>表</h4><ul><li>select * from 表 where id= 2；</li><li>select * from 表 group by class limit 0,2;</li><li>select * from 表 where age &gt;30 order by chengji desc limit 5,5;</li><li></li></ul><ol><li>内联<br>select 表1.字段 [as 别名]，表n.字段 from 表1 inner join 表2 on 条件  ;<br><br>select username,name from shop_user inner join shop_goods on shop_user.gid = shop_goods.gid;<br><br>说明：以上方式的inner 关键字 换成cross 同样可以，其实也可以省略</li><li><p>左链接<br>select 表1.字段 [as 别名]，表n.字段 from 表1 left join 表n on 条件;  <br><br>select username,name from shop_user left join shop_goods on shop_user.gid = shop_goods.gid;<br></p></li><li><p>右链接</p><p> select 表1.字段 [as 别名]，表n.字段 from 表1 right join 表n on 条件;  <br><br> select username,name from shop_user right join shop_goods on shop_user.gid = shop_goods.gid;<br></p></li><li>嵌套链接<br>select 字段 from 表 where 字段 in (select id form 表) <br><br>select * from shop_user where gid in (select gid from shop_goods);</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h4&gt;&lt;p&gt;windows 下 我的电脑 -&amp;gt; 属性 -&amp;gt; 高级系统设置 -&amp;gt; 环境变量 里面path : 修改  （复制 php环境下 的  mysql 的bin 目录  复制  -&amp;gt;黏贴 （注意分号））;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>6.文件包含及数组</title>
    <link href="https://hexo.dulada.com/php-basics-6.html"/>
    <id>https://hexo.dulada.com/php-basics-6.html</id>
    <published>2017-11-22T01:03:10.000Z</published>
    <updated>2019-02-18T01:09:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include(&apos;resource/1.php&apos;);</span><br><span class="line">add();</span><br><span class="line">echo&apos;这是后续代码&apos;;//include  后续代码执行</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">require(&apos;resource/1.php&apos;);</span><br><span class="line"></span><br><span class="line">add();</span><br><span class="line">echo&apos;这是后续代码&apos;;//require 后续代码不执行</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">include_once(&apos;resource/1.php&apos;);</span><br><span class="line">include_once(&apos;resource/1.php&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">require_once(&apos;...&apos;);</span><br><span class="line">require_once(&apos;...&apos;);</span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><ol><li>索引数组<ul><li>下标就是数字开始的</li><li>$arr = [‘a’,’b’,’c’,1,2,3];</li></ul></li><li><p>关联数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$arr = [</span><br><span class="line">    &apos;a&apos; =&gt; &apos;b&apos;,</span><br><span class="line">    &apos;c&apos; =&gt; &apos;d&apos;,</span><br><span class="line">    &apos;e&apos; =&gt; &apos;f&apos;</span><br><span class="line">];</span><br></pre></td></tr></table></figure></li><li><p>二维数组(关联和索引混合的)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$arr = [</span><br><span class="line">    &apos;a&apos;,</span><br><span class="line">    &apos;b&apos;,</span><br><span class="line">    &apos;c&apos;,</span><br><span class="line">    &apos;d&apos; =&gt; [</span><br><span class="line">        &apos;a&apos; =&gt;&apos;b&apos;,</span><br><span class="line">        &apos;e&apos;,</span><br><span class="line">        &apos;f&apos;,</span><br><span class="line">        &apos;g&apos;</span><br><span class="line">    ],</span><br><span class="line">    &apos;aa&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>三维数组||多维数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$arr = [</span><br><span class="line">    &apos;php&apos; =&gt; [</span><br><span class="line">        &apos;html&apos;,</span><br><span class="line">        &apos;js&apos; =&gt; [</span><br><span class="line">            &apos;dom&apos;,</span><br><span class="line">            &apos;bom&apos; =&gt; [</span><br><span class="line">                &apos;window&apos;</span><br><span class="line">            ],</span><br><span class="line">            &apos;ecma&apos;</span><br><span class="line">        ]</span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></li></ol><p>list<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$arr = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;];</span><br><span class="line">list($a,$b,$c,$d) = $arr;</span><br><span class="line">echo $a ,$b，$c,$d;</span><br></pre></td></tr></table></figure></p><p>each<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$arr = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;];</span><br><span class="line">var_dump(each($arr));</span><br><span class="line">var_dump(each($arr));</span><br><span class="line">var_dump(each($arr));</span><br><span class="line">var_dump(each($arr));</span><br><span class="line">var_dump(each($arr));</span><br><span class="line">var_dump(each($arr));</span><br></pre></td></tr></table></figure></p><p>while<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$arr = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;,&apos;e&apos;];</span><br><span class="line">while(list($key,$val) = each($arr)) &#123;</span><br><span class="line">    echo $key.&apos;-----&apos;.$val.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125; </span><br><span class="line">&lt;!--简版--&gt;</span><br><span class="line">list($key,$val) = each($arr);</span><br><span class="line">echo $key ,$val;</span><br></pre></td></tr></table></figure></p><h4 id="超全局数组"><a href="#超全局数组" class="headerlink" title="超全局数组"></a>超全局数组</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;文件包含&quot;&gt;&lt;a href=&quot;#文件包含&quot; class=&quot;headerlink&quot; title=&quot;文件包含&quot;&gt;&lt;/a&gt;文件包含&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;include(&amp;apos;resource/1.php&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo&amp;apos;这是后续代码&amp;apos;;//include  后续代码执行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;require(&amp;apos;resource/1.php&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo&amp;apos;这是后续代码&amp;apos;;//require 后续代码不执行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>5.函数</title>
    <link href="https://hexo.dulada.com/php-basics-5.html"/>
    <id>https://hexo.dulada.com/php-basics-5.html</id>
    <published>2017-11-21T00:59:10.000Z</published>
    <updated>2019-02-18T01:07:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>定义<br><br>就是一个变量的作用的范围，或者叫生命周期<br><br>【内部变量】<br><br>    就是函数体内声明的变量，内部变量的作用域 只在函数体内生效，程序执行完事以后自动销毁（垃圾回收机制）</p><a id="more"></a><p>【外局变量】<br><br>外部变量就是在函数体外声明的变量，不能在函数体内使用<br><br>函数体外的变量名字可以与函数体内的变量的名字一样，但是一般不这么做<br><br>【超全局变量】<br><br>外部变量和内部变量是同一个变量<br><br>$_GRT $_POST  $_FILE $_COOKIE $_SESSION $GLOBALS</p><p><hr></p><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><p>【静态变量】<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">funciton total()&#123;</span><br><span class="line">    static $num = 2;</span><br><span class="line">    $num *= 2;</span><br><span class="line">    echo $num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">total();//4</span><br><span class="line">total();//8</span><br><span class="line">total();//16</span><br><span class="line"></span><br><span class="line">这个变量只会初始化一次 在运行的时候他会记录上一次的值 static 变量不会销毁</span><br></pre></td></tr></table></figure><p>【形参和返回值得类型的约束】<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function sum(int $num1,int $num2)&#123;//形参的</span><br><span class="line">    return $num1 + $num2;</span><br><span class="line">&#125;</span><br><span class="line">var_dump(sum(&apos;2.3&apos;,3));</span><br></pre></td></tr></table></figure></p><p>小括号后面加上：加上数值类型 把函数体返回的值给你转换成你限定的类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function sum ($num1, $num2):string </span><br><span class="line">&#123;</span><br><span class="line">    return $num1 + $num2;    </span><br><span class="line">&#125;</span><br><span class="line">var_dump(sum(4,5));</span><br></pre></td></tr></table></figure></p><p>php7 的新特性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function test (...$arr)&#123;</span><br><span class="line">    var_dump($arr);</span><br><span class="line">&#125;</span><br><span class="line">test(1,2,3,4,5,6,7,8,9);</span><br><span class="line">function test($a,$b,$c)</span><br><span class="line">&#123;</span><br><span class="line">    var_dump($a,$b,$c);</span><br><span class="line">&#125;</span><br><span class="line">$arr = [1,2,3];</span><br><span class="line">test(...$arr);</span><br><span class="line">//...$arr 这样的传参的意思是把数组里面的值一一赋值给形参</span><br></pre></td></tr></table></figure></p><p>【匿名函数】<br><br>所谓的匿名函数就是没有名字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//如果想用匿名函数 赋值给一个变量 该怎么调用就怎么调用 变量加上()</span><br><span class="line">$func = function()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">$func();</span><br></pre></td></tr></table></figure></p><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><ol><li>随机<ul><li>rand</li><li>mt_rand</li></ul></li><li>小数<ul><li>floor:向上取整</li><li>ceil:向下取整</li><li>round:四舍五入法取整</li></ul></li><li>其他<ul><li>abs:绝对值</li><li>pi:圆周率</li><li>M_PI:常量，与Pi()函数的返回值相同</li><li>pow:指数表达式</li><li>max:最大值</li><li>min:最小值</li></ul></li><li>字符串函数：</li><li>大小写转换：<ul><li>strtolower: 转换为小写</li><li>strtoupper: 转换为大写</li><li>lcfirst: 首字母小写</li><li>ucfirst:首字母大写</li><li>ucwords: 每个单词首字母大写</li></ul></li><li>空白处理：<ul><li>trim: 去掉首尾的空白字符</li><li>ltrim: 去掉开头的空白字符</li><li>rtrim/chop: 去掉结尾的空白字符</li></ul></li><li>查找定位：<ul><li>strstr/strchr:返回首次出现到结尾的内容</li><li>strrchr:返回最后一次出现在结尾的内容</li><li>stristr:strstr 忽略大小写的版本</li><li>stropos:返回首次出现的位置</li><li>stripos:strpos忽略大小写的版本</li><li>strrpos:返回最后一次出现的位置</li><li>strripos:strrpos 忽略大小写的版本</li><li>substr:子串提取，可以通过下标的方式获取单个字符($str[n])</li><li>strpbrk:返回（字符列表中任意字符）首次出现到结尾的内容 </li></ul></li><li>比较：<ul><li>strcmp: 二进制比较字符串</li><li>strcasecmp:strcmp 忽略大小写</li><li>strnatcmp:自然顺序比较</li><li>strnatcasecmp:strnatcmp的忽略大小写版本</li></ul></li><li>顺序：<ul><li>str_shuffle:打乱顺序</li><li>strrev:逆序字符串</li></ul></li><li>转换：<ul><li>chr:将ASCII 码值转换为字符</li></ul></li></ol><h3 id="数组常用函数"><a href="#数组常用函数" class="headerlink" title="数组常用函数"></a>数组常用函数</h3><ol><li>数组中元素指针的移动<ul><li>next：向后 移动，指向下一个元素</li><li>prev：向前移动，指向前一个元素</li><li>end:指向最后一个元素</li><li>reset：复位，重新指向第一个元素</li></ul></li><li>键和值相关的操作<ul><li>key:获取数组当前元素的键</li><li>current/pos:获取数组当前元素的值</li><li>array_keys:获取所有的键</li><li>array_values:获取所有的值，并为其建立数字索引</li><li>array_key_exists/key_exists:判断给定的键是否在数组中</li><li>in_array:判定给定的值返回对应的键名</li><li>array_search:根据值返回对应的键名</li><li>array_count_values:统计数组中所有的值出现的次数</li></ul></li><li>添加删除元素<ul><li>array_shift:将数组开头的元素移出数组</li><li>array_unshift:向数组开头添加添加一个或更多个元素</li><li>array_push:向数组末尾加入一个或多个元素</li><li>array_pop:弹出数组末尾的一个元素</li></ul></li><li>排序相关<ul><li>shuffle:将数组打乱（转换为索引数组）</li><li>sort:对数组进行排序（排序之后重新索引）</li><li>rsort:对数组进行逆向排序</li><li>asort:对数组进行拍讯并保持索引关系</li><li>arsort:对数组进行逆向排序并保持索引关系</li><li>natsort:用自然顺序算法进行数组进行排序</li><li>natcasesort:natsort忽略大小写的版本</li><li>ksort：对数组按照键名进行排序</li><li>krsort:对数组按照键名逆向排序</li><li>usort：使用用户自定义的比较函数对数组的值进行排序</li><li>uksort:使用自定义的比较函数对数组的键名进行排序</li></ul></li><li>元素运算<ul><li>array_sum:计算数组中所有值的和</li><li>array_product:计算数组中所有值的和</li><li>count/sizeof:计算数组中的元素的个数</li></ul></li><li>创建数组<ul><li>range:建立一个包含指定范围单元的数组（可以指定步幅，可以指定递减）</li><li>compact :创建一个包含变量与其值的数组</li><li>extract:从数组中将变量导入到当前的符号表（与compact功能相反）</li><li>array ： 新建一个数组</li><li>array_merge:合并一个或多个数组（关联会覆盖，索引会重新索引，若想保留索引可以使用‘+’）</li><li>array_merge_recursive:递归合并一个或多个数组</li><li>array_combine:用一个数组的值作为键名，另一个数组的值作为值创建数组</li></ul></li><li>其他<ul><li>array_chunk:将数组分割成指定长度的小数组</li><li>array_map:将回调函数作用到每个元素上，返回的处理的结果数组（新数组）</li><li>array_walk:将回调函数作用到每个元素上（会改变原数组），返回真假</li><li>array_filter:使用回调函数过滤数组（回调函数返回真的才会出现在结果中）</li><li>array_flip:返回交换键和值后的新数组</li><li>array_rand：随机从数组中抽取一个或多个元素的键</li><li>array_replace:使用后面的数组中的元素替换第一个数组中的元素</li><li>array_reverse:返回一个单元顺序相反的数组（关联数组会保持键值对应，索引数组需要传递第二个参数）</li><li>array_unique：移出数组中重复的值</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;作用域&quot;&gt;&lt;a href=&quot;#作用域&quot; class=&quot;headerlink&quot; title=&quot;作用域&quot;&gt;&lt;/a&gt;作用域&lt;/h4&gt;&lt;p&gt;定义&lt;br&gt;&lt;br&gt;就是一个变量的作用的范围，或者叫生命周期&lt;br&gt;&lt;br&gt;【内部变量】&lt;br&gt;&lt;br&gt;    就是函数体内声明的变量，内部变量的作用域 只在函数体内生效，程序执行完事以后自动销毁（垃圾回收机制）&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>4.流程控制---为false的几种情况</title>
    <link href="https://hexo.dulada.com/php-basics-4.html"/>
    <id>https://hexo.dulada.com/php-basics-4.html</id>
    <published>2017-11-21T00:58:10.000Z</published>
    <updated>2019-02-18T01:01:08.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="为false的几种情况"><a href="#为false的几种情况" class="headerlink" title="为false的几种情况"></a>为false的几种情况</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$str = 0.000001;//true</span><br><span class="line">Str = &apos;&apos;; //false</span><br><span class="line">$str = &apos; &apos;;//true</span><br><span class="line">$str = &apos;0&apos;; //true</span><br><span class="line">$str = &apos;0.00000&apos;;//true</span><br><span class="line">$str = [];// flase;</span><br><span class="line">$str = null;//作为判断时为false</span><br><span class="line">if()&#123;</span><br><span class="line">    echo &apos;这是真空间&apos;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &apos;false&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>为false的几种情况</p><ol><li>整型的0 在进行判断时候为假，</li><li>如果浮点的0.00000000都是假的 只要后面有一个非零的数字即为真</li><li>空字符串为假’’  如果中间有一个字符都是真哪怕是一个空格</li><li>空字符串的0 即为假  其他皆为真</li><li>空数组为假</li><li>null作为判断条件时是假</li><li><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$randNum = mt_rand(1,7);</span><br><span class="line"></span><br><span class="line">switch($randNum)&#123;</span><br><span class="line">    case 1 :</span><br><span class="line">    case 2 :</span><br><span class="line">        echo &apos;this is num 2 &apos;;</span><br><span class="line">        break;</span><br><span class="line">    case 3 :</span><br><span class="line">        echo &apos;this is num3&apos;;</span><br><span class="line">        break;</span><br><span class="line">    case 4 :</span><br><span class="line">        echo &apos;num 4&apos;;</span><br><span class="line">        brak;</span><br><span class="line">    default:</span><br><span class="line">        echo &apos;other&apos;;</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if()&#123;</span><br><span class="line">    </span><br><span class="line">&#125;else if&#123;</span><br><span class="line">    </span><br><span class="line">&#125;else if&#123;</span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="for-do-while-while"><a href="#for-do-while-while" class="headerlink" title="for do while while"></a>for do while while</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">for ($i = 0;$i&lt;3;$i++)&#123;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">---</span><br><span class="line">$i = 0;</span><br><span class="line">while ($i&lt;3)&#123;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;</span><br><span class="line">    $i++;</span><br><span class="line">&#125;</span><br><span class="line">--</span><br><span class="line">do &#123;</span><br><span class="line">    echo $i.&apos;&lt;br/&gt;&apos;;</span><br><span class="line">    $i++;</span><br><span class="line">&#125;while($i&lt;3);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">for($i = 0;$i&lt;5;$i++)&#123;</span><br><span class="line">    if($i == 2)&#123;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;//0 1 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for($i = 0 ;$i&lt;5;$i++)&#123;</span><br><span class="line">    if($i == 3)&#123;</span><br><span class="line">        continue; //符合条件终止此次循环，并且继续循环，直到循环条件不成立结束</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&apos;&lt;br /&gt;&apos;;//0 1 2 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双层循环<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for($i = 0; $i&lt;3;$i++)&#123;</span><br><span class="line">    for($j = 0;$j&lt;$i;$j++)&#123;</span><br><span class="line">        echo $j.&apos;&lt;br/&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;$i的值是&apos;.$i;</span><br><span class="line">    echo &apos;&lt;br/&gt;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;为false的几种情况&quot;&gt;&lt;a href=&quot;#为false的几种情况&quot; class=&quot;headerlink&quot; title=&quot;为false的几种情况&quot;&gt;&lt;/a&gt;为false的几种情况&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$str = 0.000001;//true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Str = &amp;apos;&amp;apos;; //false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str = &amp;apos; &amp;apos;;//true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str = &amp;apos;0&amp;apos;; //true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str = &amp;apos;0.00000&amp;apos;;//true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str = [];// flase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str = null;//作为判断时为false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;apos;这是真空间&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;apos;false&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>3.系统常量与运算符</title>
    <link href="https://hexo.dulada.com/php-basics-3.html"/>
    <id>https://hexo.dulada.com/php-basics-3.html</id>
    <published>2017-11-21T00:56:10.000Z</published>
    <updated>2019-02-18T01:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><blockquote><p>常量  定义：<br><br>常量是程序运行时不能改变的量<br><br>定义格式： define(‘常量的名字’,’常量的值’);</p></blockquote><p>注意：</p><ol><li>不能重复定义</li><li>常量的名字一般用大写字母</li><li>常量的值只能是标量</li><li>常量的作用域是全局的</li><li>输出的时候没有$符号</li><li>常量不能写到字符串中 (不会被解析)</li><li>判断常量是否被定义<br>define(‘常量名’);</li></ol><a id="more"></a><p>系统常量：</p><ul><li><strong>FILE</strong></li><li><strong>LINE</strong></li><li><strong>DIR</strong></li><li>PHP_OS</li><li>PHP_VERSION</li><li><strong>FUNCTION</strong></li><li>M_PI</li><li></li><li><strong>MATHOD</strong></li><li><strong>NAMESPACE</strong></li><li><strong>TRAIT</strong></li><li><strong>CLASS</strong></li><li><hr></li></ul><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><ul><li>算数运算符<br></li><li><ul><li><ul><li><ul><li>/ % 求模取余</li></ul></li></ul></li></ul></li><li>赋值运算符</li><li>= -= += /= %= .=</li><li>自增自减运算符</li><li>++ –</li><li>比较运算符</li><li><blockquote><p>&lt; &gt;= &lt;= == === != !==</p></blockquote></li><li>逻辑运算符</li><li>&amp;&amp; || !</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;常量  定义：&lt;br&gt;&lt;br&gt;常量是程序运行时不能改变的量&lt;br&gt;&lt;br&gt;定义格式： define(‘常量的名字’,’常量的值’);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不能重复定义&lt;/li&gt;
&lt;li&gt;常量的名字一般用大写字母&lt;/li&gt;
&lt;li&gt;常量的值只能是标量&lt;/li&gt;
&lt;li&gt;常量的作用域是全局的&lt;/li&gt;
&lt;li&gt;输出的时候没有$符号&lt;/li&gt;
&lt;li&gt;常量不能写到字符串中 (不会被解析)&lt;/li&gt;
&lt;li&gt;判断常量是否被定义&lt;br&gt;define(‘常量名’);&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://hexo.dulada.com/tags/php/"/>
    
  </entry>
  
</feed>
